TOKEN: 282	TEXT: def
TOKEN: 258	TEXT: swap
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 312	TEXT: ]
TOKEN: 313	TEXT: :
TOKEN: 264	TEXT: integer
TOKEN: 315	TEXT: ,
TOKEN: 319	TEXT: i:
TOKEN: 264	TEXT: integer
TOKEN: 315	TEXT: ,
TOKEN: 319	TEXT: j:
TOKEN: 264	TEXT: integer
TOKEN: 310	TEXT: )
TOKEN: 313	TEXT: :
TOKEN: 319	TEXT: temp:
TOKEN: 264	TEXT: integer
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: temp
TOKEN: 290	TEXT: =
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 258	TEXT: i
TOKEN: 312	TEXT: ]
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 258	TEXT: i
TOKEN: 312	TEXT: ]
TOKEN: 290	TEXT: =
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 258	TEXT: j
TOKEN: 312	TEXT: ]
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 258	TEXT: j
TOKEN: 312	TEXT: ]
TOKEN: 290	TEXT: =
TOKEN: 258	TEXT: temp
TOKEN: 314	TEXT: ;
TOKEN: 283	TEXT: enddef
TOKEN: 314	TEXT: ;
TOKEN: 282	TEXT: def
TOKEN: 258	TEXT: printArray
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 312	TEXT: ]
TOKEN: 313	TEXT: :
TOKEN: 264	TEXT: integer
TOKEN: 315	TEXT: ,
TOKEN: 319	TEXT: size:
TOKEN: 264	TEXT: integer
TOKEN: 310	TEXT: )
TOKEN: 313	TEXT: :
TOKEN: 272	TEXT: for
TOKEN: 258	TEXT: i
TOKEN: 273	TEXT: in
TOKEN: 311	TEXT: [
TOKEN: 259	TEXT: 0
TOKEN: 313	TEXT: :
TOKEN: 258	TEXT: size
TOKEN: 312	TEXT: ]
TOKEN: 313	TEXT: :
TOKEN: 258	TEXT: writeInteger
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: a
TOKEN: 311	TEXT: [
TOKEN: 258	TEXT: i
TOKEN: 312	TEXT: ]
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 269	TEXT: if
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: i
TOKEN: 298	TEXT: ==
TOKEN: 258	TEXT: size
TOKEN: 305	TEXT: -
TOKEN: 259	TEXT: 1
TOKEN: 310	TEXT: )
TOKEN: 313	TEXT: :
TOKEN: 278	TEXT: continue
TOKEN: 314	TEXT: ;
TOKEN: 271	TEXT: endif
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: writeStr
TOKEN: 309	TEXT: (
TOKEN: 261	TEXT: ", "
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 274	TEXT: endfor
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: writeStr
TOKEN: 309	TEXT: (
TOKEN: 261	TEXT: "\n"
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 283	TEXT: enddef
TOKEN: 314	TEXT: ;
TOKEN: 282	TEXT: def
TOKEN: 284	TEXT: main
TOKEN: 309	TEXT: (
TOKEN: 310	TEXT: )
TOKEN: 313	TEXT: :
TOKEN: 319	TEXT: k:
TOKEN: 264	TEXT: integer
TOKEN: 314	TEXT: ;
TOKEN: 319	TEXT: a :
TOKEN: 290	TEXT: =
TOKEN: 311	TEXT: [
TOKEN: 258	TEXT: i
TOKEN: 304	TEXT: +
TOKEN: 259	TEXT: 1
TOKEN: 272	TEXT: for
TOKEN: 319	TEXT: i:
TOKEN: 259	TEXT: 100
TOKEN: 312	TEXT: ]
TOKEN: 313	TEXT: :
TOKEN: 264	TEXT: integer
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: writeStr
TOKEN: 309	TEXT: (
TOKEN: 261	TEXT: "Array generated: "
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: printArray
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: a
TOKEN: 315	TEXT: ,
TOKEN: 259	TEXT: 100
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 272	TEXT: for
TOKEN: 258	TEXT: k
TOKEN: 273	TEXT: in
TOKEN: 311	TEXT: [
TOKEN: 259	TEXT: 0
TOKEN: 313	TEXT: :
TOKEN: 259	TEXT: 50
TOKEN: 312	TEXT: ]
TOKEN: 313	TEXT: :
TOKEN: 258	TEXT: swap
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: a
TOKEN: 315	TEXT: ,
TOKEN: 258	TEXT: k
TOKEN: 315	TEXT: ,
TOKEN: 259	TEXT: 99
TOKEN: 305	TEXT: -
TOKEN: 258	TEXT: k
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 274	TEXT: endfor
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: writeStr
TOKEN: 309	TEXT: (
TOKEN: 261	TEXT: "Reversed array: "
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 258	TEXT: printArray
TOKEN: 309	TEXT: (
TOKEN: 258	TEXT: a
TOKEN: 315	TEXT: ,
TOKEN: 259	TEXT: 100
TOKEN: 310	TEXT: )
TOKEN: 314	TEXT: ;
TOKEN: 283	TEXT: enddef
TOKEN: 314	TEXT: ;
