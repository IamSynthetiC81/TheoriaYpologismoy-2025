Nonterminals useless in grammar

    function_list


Terminals unused in grammar

    KW_CONST
    KW_NOT
    KW_AND
    KW_OR
    KW_OF
    OP_MINUS
    OP_DIV
    OP_MOD
    DOT


Rules useless in grammar

   64 function_list: ε
   65              | function_list function


Rules useless in parser due to conflicts

   34 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON


State 122 conflicts: 14 shift/reduce
State 123 conflicts: 14 shift/reduce
State 124 conflicts: 14 shift/reduce
State 125 conflicts: 14 shift/reduce
State 126 conflicts: 14 shift/reduce
State 127 conflicts: 14 shift/reduce
State 128 conflicts: 6 shift/reduce
State 129 conflicts: 6 shift/reduce
State 130 conflicts: 6 shift/reduce
State 131 conflicts: 6 shift/reduce
State 132 conflicts: 6 shift/reduce
State 133 conflicts: 6 shift/reduce
State 134 conflicts: 6 shift/reduce
State 135 conflicts: 6 shift/reduce
State 158 conflicts: 15 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: macro_def_list top_level_list main_function

    2 macro_def_list: ε
    3               | macro_def_list macro_def

    4 macro_def: KW_DEFMACRO IDENTIFIER CONST_FLOAT

    5 top_level_list: ε
    6               | top_level_list top_level

    7 top_level: function
    8          | component

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON

   10 param_list: ε
   11           | param_decl_list

   12 param_decl_list: IDENTIFIER COLON type
   13                | param_decl_list COMMA IDENTIFIER COLON type

   14 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

   15 stmt_list: ε
   16          | stmt_list stmt

   17 type: KW_INTEGER
   18     | KW_SCALAR
   19     | KW_STR
   20     | KW_BOOL

   21 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | KW_RETURN expression SEMICOLON
   24     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | KW_BREAK SEMICOLON
   29     | KW_CONTINUE SEMICOLON
   30     | IDENTIFIER COLON type SEMICOLON
   31     | SEMICOLON
   32     | KW_RETURN SEMICOLON
   33     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

   36 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

   37 component_body: ε
   38               | component_body component_member

   39 component_member: field_decl
   40                 | function

   41 field_decl: HASH IDENTIFIER COLON type SEMICOLON
   42           | HASH param_decl_list COLON type SEMICOLON

   43 expression: CONST_INT
   44           | CONST_FLOAT
   45           | CONST_STRING
   46           | CONST_BOOL_TRUE
   47           | CONST_BOOL_FALSE
   48           | IDENTIFIER
   49           | expression OP_PLUS expression
   50           | expression OP_MULT expression
   51           | expression OP_GT expression
   52           | expression OP_LT expression
   53           | expression OP_EQ expression
   54           | expression OP_NEQ expression
   55           | expression OP_GEQ expression
   56           | expression OP_LEQ expression
   57           | LPAREN expression RPAREN
   58           | expression OP_POW expression
   59           | expression OP_PLUSEQ expression
   60           | expression OP_MINUSEQ expression
   61           | expression OP_MULTEQ expression
   62           | expression OP_DIVEQ expression
   63           | expression OP_MODEQ expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <string> (258) 4 9 12 13 21 22 26 30 33 35 36 41 48
    CONST_INT <string> (259) 43
    CONST_FLOAT <string> (260) 4 44
    CONST_STRING <string> (261) 45
    CONST_BOOL_TRUE (262) 46
    CONST_BOOL_FALSE (263) 47
    KW_INTEGER (264) 17
    KW_SCALAR (265) 18
    KW_STR (266) 19
    KW_BOOL (267) 20
    KW_CONST (268)
    KW_IF (269) 24 25
    KW_ELSE (270) 25
    KW_ENDIF (271) 24 25
    KW_FOR (272) 26 33
    KW_IN (273) 26
    KW_ENDFOR (274) 26
    KW_WHILE (275) 27 34
    KW_ENDWHILE (276) 27 34
    KW_BREAK (277) 28
    KW_CONTINUE (278) 29
    KW_NOT (279)
    KW_AND (280)
    KW_OR (281)
    KW_DEF (282) 9 14
    KW_ENDDEF (283) 9 14
    KW_MAIN (284) 14
    KW_RETURN (285) 23 32
    KW_COMP (286) 35 36
    KW_ENDCOMP (287) 35 36
    KW_OF (288)
    KW_DEFMACRO (289) 4
    OP_ASSIGN (290) 21
    OP_PLUSEQ (291) 59
    OP_MINUSEQ (292) 60
    OP_MULTEQ (293) 61
    OP_DIVEQ (294) 62
    OP_MODEQ (295) 63
    OP_DEFINE (296) 33
    OP_POW (297) 58
    OP_EQ (298) 53
    OP_NEQ (299) 54
    OP_LT (300) 52
    OP_LEQ (301) 56
    OP_GT (302) 51
    OP_GEQ (303) 55
    OP_PLUS (304) 49
    OP_MINUS (305)
    OP_MULT (306) 50
    OP_DIV (307)
    OP_MOD (308)
    LPAREN (309) 9 14 22 24 25 27 34 57
    RPAREN (310) 9 14 22 24 25 27 34 57
    LBRACKET (311) 26 33
    RBRACKET (312) 26 33
    COLON (313) 9 12 13 14 24 25 26 27 30 33 34 35 36 41 42
    SEMICOLON (314) 9 14 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 41 42
    COMMA (315) 13
    DOT (316)
    OP_ARROW (317) 9
    HASH (318) 41 42


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program (65)
        on left: 1
        on right: 0
    macro_def_list (66)
        on left: 2 3
        on right: 1 3
    macro_def (67)
        on left: 4
        on right: 3
    top_level_list (68)
        on left: 5 6
        on right: 1 6
    top_level (69)
        on left: 7 8
        on right: 6
    function <string> (70)
        on left: 9
        on right: 7 40
    param_list <string> (71)
        on left: 10 11
        on right: 9
    param_decl_list <string> (72)
        on left: 12 13
        on right: 11 13 42
    main_function <string> (73)
        on left: 14
        on right: 1
    stmt_list <string> (74)
        on left: 15 16
        on right: 9 14 16 24 25 26 27 34 35
    type <string> (75)
        on left: 17 18 19 20
        on right: 9 12 13 30 33 41 42
    stmt <string> (76)
        on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 16
    component (77)
        on left: 36
        on right: 8
    component_body (78)
        on left: 37 38
        on right: 36 38
    component_member (79)
        on left: 39 40
        on right: 38
    field_decl (80)
        on left: 41 42
        on right: 39
    expression <string> (81)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
        on right: 21 22 23 24 25 26 27 33 34 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63


State 0

    0 $accept: • program $end
    1 program: • macro_def_list top_level_list main_function
    2 macro_def_list: ε •
    3               | • macro_def_list macro_def

    $default  reduce using rule 2 (macro_def_list)

    program         go to state 1
    macro_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: macro_def_list • top_level_list main_function
    3 macro_def_list: macro_def_list • macro_def
    4 macro_def: • KW_DEFMACRO IDENTIFIER CONST_FLOAT
    5 top_level_list: ε •  [KW_DEF, KW_COMP]
    6               | • top_level_list top_level

    KW_DEFMACRO  shift, and go to state 4

    $default  reduce using rule 5 (top_level_list)

    macro_def       go to state 5
    top_level_list  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 macro_def: KW_DEFMACRO • IDENTIFIER CONST_FLOAT

    IDENTIFIER  shift, and go to state 7


State 5

    3 macro_def_list: macro_def_list macro_def •

    $default  reduce using rule 3 (macro_def_list)


State 6

    1 program: macro_def_list top_level_list • main_function
    6 top_level_list: top_level_list • top_level
    7 top_level: • function
    8          | • component
    9 function: • KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON
   14 main_function: • KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON
   36 component: • KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

    KW_DEF   shift, and go to state 8
    KW_COMP  shift, and go to state 9

    top_level      go to state 10
    function       go to state 11
    main_function  go to state 12
    component      go to state 13


State 7

    4 macro_def: KW_DEFMACRO IDENTIFIER • CONST_FLOAT

    CONST_FLOAT  shift, and go to state 14


State 8

    9 function: KW_DEF • IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON
   14 main_function: KW_DEF • KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 15
    KW_MAIN     shift, and go to state 16


State 9

   36 component: KW_COMP • IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

    IDENTIFIER  shift, and go to state 17


State 10

    6 top_level_list: top_level_list top_level •

    $default  reduce using rule 6 (top_level_list)


State 11

    7 top_level: function •

    $default  reduce using rule 7 (top_level)


State 12

    1 program: macro_def_list top_level_list main_function •

    $default  reduce using rule 1 (program)


State 13

    8 top_level: component •

    $default  reduce using rule 8 (top_level)


State 14

    4 macro_def: KW_DEFMACRO IDENTIFIER CONST_FLOAT •

    $default  reduce using rule 4 (macro_def)


State 15

    9 function: KW_DEF IDENTIFIER • LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 18


State 16

   14 main_function: KW_DEF KW_MAIN • LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 19


State 17

   36 component: KW_COMP IDENTIFIER • COLON component_body KW_ENDCOMP SEMICOLON

    COLON  shift, and go to state 20


State 18

    9 function: KW_DEF IDENTIFIER LPAREN • param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON
   10 param_list: ε •  [RPAREN]
   11           | • param_decl_list
   12 param_decl_list: • IDENTIFIER COLON type
   13                | • param_decl_list COMMA IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 21

    $default  reduce using rule 10 (param_list)

    param_list       go to state 22
    param_decl_list  go to state 23


State 19

   14 main_function: KW_DEF KW_MAIN LPAREN • RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 24


State 20

   36 component: KW_COMP IDENTIFIER COLON • component_body KW_ENDCOMP SEMICOLON
   37 component_body: ε •
   38               | • component_body component_member

    $default  reduce using rule 37 (component_body)

    component_body  go to state 25


State 21

   12 param_decl_list: IDENTIFIER • COLON type

    COLON  shift, and go to state 26


State 22

    9 function: KW_DEF IDENTIFIER LPAREN param_list • RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 27


State 23

   11 param_list: param_decl_list •  [RPAREN]
   13 param_decl_list: param_decl_list • COMMA IDENTIFIER COLON type

    COMMA  shift, and go to state 28

    $default  reduce using rule 11 (param_list)


State 24

   14 main_function: KW_DEF KW_MAIN LPAREN RPAREN • COLON stmt_list KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 29


State 25

    9 function: • KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON
   36 component: KW_COMP IDENTIFIER COLON component_body • KW_ENDCOMP SEMICOLON
   38 component_body: component_body • component_member
   39 component_member: • field_decl
   40                 | • function
   41 field_decl: • HASH IDENTIFIER COLON type SEMICOLON
   42           | • HASH param_decl_list COLON type SEMICOLON

    KW_DEF      shift, and go to state 30
    KW_ENDCOMP  shift, and go to state 31
    HASH        shift, and go to state 32

    function          go to state 33
    component_member  go to state 34
    field_decl        go to state 35


State 26

   12 param_decl_list: IDENTIFIER COLON • type
   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 40


State 27

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN • OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON

    OP_ARROW  shift, and go to state 41


State 28

   13 param_decl_list: param_decl_list COMMA • IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 42


State 29

   14 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON • stmt_list KW_ENDDEF SEMICOLON
   15 stmt_list: ε •
   16          | • stmt_list stmt

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 43


State 30

    9 function: KW_DEF • IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 15


State 31

   36 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP • SEMICOLON

    SEMICOLON  shift, and go to state 44


State 32

   12 param_decl_list: • IDENTIFIER COLON type
   13                | • param_decl_list COMMA IDENTIFIER COLON type
   41 field_decl: HASH • IDENTIFIER COLON type SEMICOLON
   42           | HASH • param_decl_list COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 45

    param_decl_list  go to state 46


State 33

   40 component_member: function •

    $default  reduce using rule 40 (component_member)


State 34

   38 component_body: component_body component_member •

    $default  reduce using rule 38 (component_body)


State 35

   39 component_member: field_decl •

    $default  reduce using rule 39 (component_member)


State 36

   17 type: KW_INTEGER •

    $default  reduce using rule 17 (type)


State 37

   18 type: KW_SCALAR •

    $default  reduce using rule 18 (type)


State 38

   19 type: KW_STR •

    $default  reduce using rule 19 (type)


State 39

   20 type: KW_BOOL •

    $default  reduce using rule 20 (type)


State 40

   12 param_decl_list: IDENTIFIER COLON type •

    $default  reduce using rule 12 (param_decl_list)


State 41

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW • type COLON stmt_list KW_ENDDEF SEMICOLON
   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 47


State 42

   13 param_decl_list: param_decl_list COMMA IDENTIFIER • COLON type

    COLON  shift, and go to state 48


State 43

   14 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list • KW_ENDDEF SEMICOLON
   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_FOR       shift, and go to state 51
    KW_WHILE     shift, and go to state 52
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_ENDDEF    shift, and go to state 55
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 44

   36 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON •

    $default  reduce using rule 36 (component)


State 45

   12 param_decl_list: IDENTIFIER • COLON type
   41 field_decl: HASH IDENTIFIER • COLON type SEMICOLON

    COLON  shift, and go to state 60


State 46

   13 param_decl_list: param_decl_list • COMMA IDENTIFIER COLON type
   42 field_decl: HASH param_decl_list • COLON type SEMICOLON

    COLON  shift, and go to state 61
    COMMA  shift, and go to state 28


State 47

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type • COLON stmt_list KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 62


State 48

   13 param_decl_list: param_decl_list COMMA IDENTIFIER COLON • type
   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 63


State 49

   21 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
   22     | IDENTIFIER • LPAREN expression RPAREN SEMICOLON
   30     | IDENTIFIER • COLON type SEMICOLON
   33     | IDENTIFIER • OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON

    OP_ASSIGN  shift, and go to state 64
    OP_DEFINE  shift, and go to state 65
    LPAREN     shift, and go to state 66
    COLON      shift, and go to state 67


State 50

   24 stmt: KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    LPAREN  shift, and go to state 68


State 51

   26 stmt: KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER  shift, and go to state 69


State 52

   27 stmt: KW_WHILE • LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   34     | KW_WHILE • LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON

    LPAREN  shift, and go to state 70


State 53

   28 stmt: KW_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 71


State 54

   29 stmt: KW_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 55

   14 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 73


State 56

   23 stmt: KW_RETURN • expression SEMICOLON
   32     | KW_RETURN • SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80
    SEMICOLON         shift, and go to state 81

    expression  go to state 82


State 57

   35 stmt: KW_COMP • IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER  shift, and go to state 83


State 58

   31 stmt: SEMICOLON •

    $default  reduce using rule 31 (stmt)


State 59

   16 stmt_list: stmt_list stmt •

    $default  reduce using rule 16 (stmt_list)


State 60

   12 param_decl_list: IDENTIFIER COLON • type
   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL
   41 field_decl: HASH IDENTIFIER COLON • type SEMICOLON

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 84


State 61

   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL
   42 field_decl: HASH param_decl_list COLON • type SEMICOLON

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 85


State 62

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON • stmt_list KW_ENDDEF SEMICOLON
   15 stmt_list: ε •
   16          | • stmt_list stmt

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 86


State 63

   13 param_decl_list: param_decl_list COMMA IDENTIFIER COLON type •

    $default  reduce using rule 13 (param_decl_list)


State 64

   21 stmt: IDENTIFIER OP_ASSIGN • expression SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 87


State 65

   33 stmt: IDENTIFIER OP_DEFINE • LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON

    LBRACKET  shift, and go to state 88


State 66

   22 stmt: IDENTIFIER LPAREN • expression RPAREN SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 89


State 67

   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL
   30 stmt: IDENTIFIER COLON • type SEMICOLON

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 90


State 68

   24 stmt: KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 91


State 69

   26 stmt: KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 92


State 70

   27 stmt: KW_WHILE LPAREN • expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   34     | KW_WHILE LPAREN • expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 93


State 71

   28 stmt: KW_BREAK SEMICOLON •

    $default  reduce using rule 28 (stmt)


State 72

   29 stmt: KW_CONTINUE SEMICOLON •

    $default  reduce using rule 29 (stmt)


State 73

   14 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON •

    $default  reduce using rule 14 (main_function)


State 74

   48 expression: IDENTIFIER •

    $default  reduce using rule 48 (expression)


State 75

   43 expression: CONST_INT •

    $default  reduce using rule 43 (expression)


State 76

   44 expression: CONST_FLOAT •

    $default  reduce using rule 44 (expression)


State 77

   45 expression: CONST_STRING •

    $default  reduce using rule 45 (expression)


State 78

   46 expression: CONST_BOOL_TRUE •

    $default  reduce using rule 46 (expression)


State 79

   47 expression: CONST_BOOL_FALSE •

    $default  reduce using rule 47 (expression)


State 80

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   57           | LPAREN • expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 94


State 81

   32 stmt: KW_RETURN SEMICOLON •

    $default  reduce using rule 32 (stmt)


State 82

   23 stmt: KW_RETURN expression • SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    SEMICOLON   shift, and go to state 109


State 83

   35 stmt: KW_COMP IDENTIFIER • COLON stmt_list KW_ENDCOMP SEMICOLON

    COLON  shift, and go to state 110


State 84

   12 param_decl_list: IDENTIFIER COLON type •  [COLON, COMMA]
   41 field_decl: HASH IDENTIFIER COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 111

    $default  reduce using rule 12 (param_decl_list)


State 85

   42 field_decl: HASH param_decl_list COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 112


State 86

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list • KW_ENDDEF SEMICOLON
   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_FOR       shift, and go to state 51
    KW_WHILE     shift, and go to state 52
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_ENDDEF    shift, and go to state 113
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 87

   21 stmt: IDENTIFIER OP_ASSIGN expression • SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    SEMICOLON   shift, and go to state 114


State 88

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET • expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 115


State 89

   22 stmt: IDENTIFIER LPAREN expression • RPAREN SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    RPAREN      shift, and go to state 116


State 90

   30 stmt: IDENTIFIER COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 117


State 91

   24 stmt: KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    RPAREN      shift, and go to state 118


State 92

   26 stmt: KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    LBRACKET  shift, and go to state 119


State 93

   27 stmt: KW_WHILE LPAREN expression • RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   34     | KW_WHILE LPAREN expression • RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    RPAREN      shift, and go to state 120


State 94

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   57           | LPAREN expression • RPAREN
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    RPAREN      shift, and go to state 121


State 95

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   59           | expression OP_PLUSEQ • expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 122


State 96

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   60           | expression OP_MINUSEQ • expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 123


State 97

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   61           | expression OP_MULTEQ • expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 124


State 98

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   62           | expression OP_DIVEQ • expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 125


State 99

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression
   63           | expression OP_MODEQ • expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 126


State 100

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   58           | expression OP_POW • expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 127


State 101

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   53           | expression OP_EQ • expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 128


State 102

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   54           | expression OP_NEQ • expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 129


State 103

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   52           | expression OP_LT • expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 130


State 104

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   56           | expression OP_LEQ • expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 131


State 105

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   51           | expression OP_GT • expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 132


State 106

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   55           | expression OP_GEQ • expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 133


State 107

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   49           | expression OP_PLUS • expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 134


State 108

   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   50           | expression OP_MULT • expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 135


State 109

   23 stmt: KW_RETURN expression SEMICOLON •

    $default  reduce using rule 23 (stmt)


State 110

   15 stmt_list: ε •
   16          | • stmt_list stmt
   35 stmt: KW_COMP IDENTIFIER COLON • stmt_list KW_ENDCOMP SEMICOLON

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 136


State 111

   41 field_decl: HASH IDENTIFIER COLON type SEMICOLON •

    $default  reduce using rule 41 (field_decl)


State 112

   42 field_decl: HASH param_decl_list COLON type SEMICOLON •

    $default  reduce using rule 42 (field_decl)


State 113

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 137


State 114

   21 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 115

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression • KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    KW_FOR      shift, and go to state 138
    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108


State 116

   22 stmt: IDENTIFIER LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 139


State 117

   30 stmt: IDENTIFIER COLON type SEMICOLON •

    $default  reduce using rule 30 (stmt)


State 118

   24 stmt: KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 140


State 119

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 141


State 120

   27 stmt: KW_WHILE LPAREN expression RPAREN • COLON stmt_list KW_ENDWHILE SEMICOLON
   34     | KW_WHILE LPAREN expression RPAREN • COLON stmt_list KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 142


State 121

   57 expression: LPAREN expression RPAREN •

    $default  reduce using rule 57 (expression)


State 122

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   59           | expression OP_PLUSEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 59 (expression)]
    OP_MINUSEQ  [reduce using rule 59 (expression)]
    OP_MULTEQ   [reduce using rule 59 (expression)]
    OP_DIVEQ    [reduce using rule 59 (expression)]
    OP_MODEQ    [reduce using rule 59 (expression)]
    OP_POW      [reduce using rule 59 (expression)]
    OP_EQ       [reduce using rule 59 (expression)]
    OP_NEQ      [reduce using rule 59 (expression)]
    OP_LT       [reduce using rule 59 (expression)]
    OP_LEQ      [reduce using rule 59 (expression)]
    OP_GT       [reduce using rule 59 (expression)]
    OP_GEQ      [reduce using rule 59 (expression)]
    OP_PLUS     [reduce using rule 59 (expression)]
    OP_MULT     [reduce using rule 59 (expression)]
    $default    reduce using rule 59 (expression)

    shift/reduce conflict on token OP_PLUS:
       59 expression: expression OP_PLUSEQ expression •
       49 expression: expression • OP_PLUS expression
      Example: expression OP_PLUSEQ expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 49: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 49: expression                              OP_PLUS expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_MULT:
       59 expression: expression OP_PLUSEQ expression •
       50 expression: expression • OP_MULT expression
      Example: expression OP_PLUSEQ expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 50: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 50: expression                              OP_MULT expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_GT:
       59 expression: expression OP_PLUSEQ expression •
       51 expression: expression • OP_GT expression
      Example: expression OP_PLUSEQ expression • OP_GT expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 51: expression • OP_GT expression
      Reduce derivation
        expression
        ↳ 51: expression                              OP_GT expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_LT:
       59 expression: expression OP_PLUSEQ expression •
       52 expression: expression • OP_LT expression
      Example: expression OP_PLUSEQ expression • OP_LT expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 52: expression • OP_LT expression
      Reduce derivation
        expression
        ↳ 52: expression                              OP_LT expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_EQ:
       59 expression: expression OP_PLUSEQ expression •
       53 expression: expression • OP_EQ expression
      Example: expression OP_PLUSEQ expression • OP_EQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 53: expression • OP_EQ expression
      Reduce derivation
        expression
        ↳ 53: expression                              OP_EQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_NEQ:
       59 expression: expression OP_PLUSEQ expression •
       54 expression: expression • OP_NEQ expression
      Example: expression OP_PLUSEQ expression • OP_NEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 54: expression • OP_NEQ expression
      Reduce derivation
        expression
        ↳ 54: expression                              OP_NEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_GEQ:
       59 expression: expression OP_PLUSEQ expression •
       55 expression: expression • OP_GEQ expression
      Example: expression OP_PLUSEQ expression • OP_GEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 55: expression • OP_GEQ expression
      Reduce derivation
        expression
        ↳ 55: expression                              OP_GEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_LEQ:
       59 expression: expression OP_PLUSEQ expression •
       56 expression: expression • OP_LEQ expression
      Example: expression OP_PLUSEQ expression • OP_LEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 56: expression • OP_LEQ expression
      Reduce derivation
        expression
        ↳ 56: expression                              OP_LEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_POW:
       59 expression: expression OP_PLUSEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_PLUSEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                              OP_POW expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       59 expression: expression OP_PLUSEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_PLUSEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                              OP_PLUSEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       59 expression: expression OP_PLUSEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_PLUSEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                              OP_MINUSEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       59 expression: expression OP_PLUSEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_PLUSEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                              OP_MULTEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       59 expression: expression OP_PLUSEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_PLUSEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                              OP_DIVEQ expression
              ↳ 59: expression OP_PLUSEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       59 expression: expression OP_PLUSEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_PLUSEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 59: expression OP_PLUSEQ expression
                                   ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                              OP_MODEQ expression
              ↳ 59: expression OP_PLUSEQ expression •



State 123

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   60           | expression OP_MINUSEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 60 (expression)]
    OP_MINUSEQ  [reduce using rule 60 (expression)]
    OP_MULTEQ   [reduce using rule 60 (expression)]
    OP_DIVEQ    [reduce using rule 60 (expression)]
    OP_MODEQ    [reduce using rule 60 (expression)]
    OP_POW      [reduce using rule 60 (expression)]
    OP_EQ       [reduce using rule 60 (expression)]
    OP_NEQ      [reduce using rule 60 (expression)]
    OP_LT       [reduce using rule 60 (expression)]
    OP_LEQ      [reduce using rule 60 (expression)]
    OP_GT       [reduce using rule 60 (expression)]
    OP_GEQ      [reduce using rule 60 (expression)]
    OP_PLUS     [reduce using rule 60 (expression)]
    OP_MULT     [reduce using rule 60 (expression)]
    $default    reduce using rule 60 (expression)

    shift/reduce conflict on token OP_PLUS:
       60 expression: expression OP_MINUSEQ expression •
       49 expression: expression • OP_PLUS expression
      Example: expression OP_MINUSEQ expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 49: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 49: expression                               OP_PLUS expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_MULT:
       60 expression: expression OP_MINUSEQ expression •
       50 expression: expression • OP_MULT expression
      Example: expression OP_MINUSEQ expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 50: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 50: expression                               OP_MULT expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_GT:
       60 expression: expression OP_MINUSEQ expression •
       51 expression: expression • OP_GT expression
      Example: expression OP_MINUSEQ expression • OP_GT expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 51: expression • OP_GT expression
      Reduce derivation
        expression
        ↳ 51: expression                               OP_GT expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_LT:
       60 expression: expression OP_MINUSEQ expression •
       52 expression: expression • OP_LT expression
      Example: expression OP_MINUSEQ expression • OP_LT expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 52: expression • OP_LT expression
      Reduce derivation
        expression
        ↳ 52: expression                               OP_LT expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_EQ:
       60 expression: expression OP_MINUSEQ expression •
       53 expression: expression • OP_EQ expression
      Example: expression OP_MINUSEQ expression • OP_EQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 53: expression • OP_EQ expression
      Reduce derivation
        expression
        ↳ 53: expression                               OP_EQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_NEQ:
       60 expression: expression OP_MINUSEQ expression •
       54 expression: expression • OP_NEQ expression
      Example: expression OP_MINUSEQ expression • OP_NEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 54: expression • OP_NEQ expression
      Reduce derivation
        expression
        ↳ 54: expression                               OP_NEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_GEQ:
       60 expression: expression OP_MINUSEQ expression •
       55 expression: expression • OP_GEQ expression
      Example: expression OP_MINUSEQ expression • OP_GEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 55: expression • OP_GEQ expression
      Reduce derivation
        expression
        ↳ 55: expression                               OP_GEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_LEQ:
       60 expression: expression OP_MINUSEQ expression •
       56 expression: expression • OP_LEQ expression
      Example: expression OP_MINUSEQ expression • OP_LEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 56: expression • OP_LEQ expression
      Reduce derivation
        expression
        ↳ 56: expression                               OP_LEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_POW:
       60 expression: expression OP_MINUSEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_MINUSEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                               OP_POW expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       60 expression: expression OP_MINUSEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_MINUSEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                               OP_PLUSEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       60 expression: expression OP_MINUSEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_MINUSEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                               OP_MINUSEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       60 expression: expression OP_MINUSEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_MINUSEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                               OP_MULTEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       60 expression: expression OP_MINUSEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_MINUSEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                               OP_DIVEQ expression
              ↳ 60: expression OP_MINUSEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       60 expression: expression OP_MINUSEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_MINUSEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 60: expression OP_MINUSEQ expression
                                    ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                               OP_MODEQ expression
              ↳ 60: expression OP_MINUSEQ expression •



State 124

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   61           | expression OP_MULTEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 61 (expression)]
    OP_MINUSEQ  [reduce using rule 61 (expression)]
    OP_MULTEQ   [reduce using rule 61 (expression)]
    OP_DIVEQ    [reduce using rule 61 (expression)]
    OP_MODEQ    [reduce using rule 61 (expression)]
    OP_POW      [reduce using rule 61 (expression)]
    OP_EQ       [reduce using rule 61 (expression)]
    OP_NEQ      [reduce using rule 61 (expression)]
    OP_LT       [reduce using rule 61 (expression)]
    OP_LEQ      [reduce using rule 61 (expression)]
    OP_GT       [reduce using rule 61 (expression)]
    OP_GEQ      [reduce using rule 61 (expression)]
    OP_PLUS     [reduce using rule 61 (expression)]
    OP_MULT     [reduce using rule 61 (expression)]
    $default    reduce using rule 61 (expression)

    shift/reduce conflict on token OP_PLUS:
       61 expression: expression OP_MULTEQ expression •
       49 expression: expression • OP_PLUS expression
      Example: expression OP_MULTEQ expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 49: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 49: expression                              OP_PLUS expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_MULT:
       61 expression: expression OP_MULTEQ expression •
       50 expression: expression • OP_MULT expression
      Example: expression OP_MULTEQ expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 50: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 50: expression                              OP_MULT expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_GT:
       61 expression: expression OP_MULTEQ expression •
       51 expression: expression • OP_GT expression
      Example: expression OP_MULTEQ expression • OP_GT expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 51: expression • OP_GT expression
      Reduce derivation
        expression
        ↳ 51: expression                              OP_GT expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_LT:
       61 expression: expression OP_MULTEQ expression •
       52 expression: expression • OP_LT expression
      Example: expression OP_MULTEQ expression • OP_LT expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 52: expression • OP_LT expression
      Reduce derivation
        expression
        ↳ 52: expression                              OP_LT expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_EQ:
       61 expression: expression OP_MULTEQ expression •
       53 expression: expression • OP_EQ expression
      Example: expression OP_MULTEQ expression • OP_EQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 53: expression • OP_EQ expression
      Reduce derivation
        expression
        ↳ 53: expression                              OP_EQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_NEQ:
       61 expression: expression OP_MULTEQ expression •
       54 expression: expression • OP_NEQ expression
      Example: expression OP_MULTEQ expression • OP_NEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 54: expression • OP_NEQ expression
      Reduce derivation
        expression
        ↳ 54: expression                              OP_NEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_GEQ:
       61 expression: expression OP_MULTEQ expression •
       55 expression: expression • OP_GEQ expression
      Example: expression OP_MULTEQ expression • OP_GEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 55: expression • OP_GEQ expression
      Reduce derivation
        expression
        ↳ 55: expression                              OP_GEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_LEQ:
       61 expression: expression OP_MULTEQ expression •
       56 expression: expression • OP_LEQ expression
      Example: expression OP_MULTEQ expression • OP_LEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 56: expression • OP_LEQ expression
      Reduce derivation
        expression
        ↳ 56: expression                              OP_LEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_POW:
       61 expression: expression OP_MULTEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_MULTEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                              OP_POW expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       61 expression: expression OP_MULTEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_MULTEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                              OP_PLUSEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       61 expression: expression OP_MULTEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_MULTEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                              OP_MINUSEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       61 expression: expression OP_MULTEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_MULTEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                              OP_MULTEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       61 expression: expression OP_MULTEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_MULTEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                              OP_DIVEQ expression
              ↳ 61: expression OP_MULTEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       61 expression: expression OP_MULTEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_MULTEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 61: expression OP_MULTEQ expression
                                   ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                              OP_MODEQ expression
              ↳ 61: expression OP_MULTEQ expression •



State 125

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   62           | expression OP_DIVEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 62 (expression)]
    OP_MINUSEQ  [reduce using rule 62 (expression)]
    OP_MULTEQ   [reduce using rule 62 (expression)]
    OP_DIVEQ    [reduce using rule 62 (expression)]
    OP_MODEQ    [reduce using rule 62 (expression)]
    OP_POW      [reduce using rule 62 (expression)]
    OP_EQ       [reduce using rule 62 (expression)]
    OP_NEQ      [reduce using rule 62 (expression)]
    OP_LT       [reduce using rule 62 (expression)]
    OP_LEQ      [reduce using rule 62 (expression)]
    OP_GT       [reduce using rule 62 (expression)]
    OP_GEQ      [reduce using rule 62 (expression)]
    OP_PLUS     [reduce using rule 62 (expression)]
    OP_MULT     [reduce using rule 62 (expression)]
    $default    reduce using rule 62 (expression)

    shift/reduce conflict on token OP_PLUS:
       62 expression: expression OP_DIVEQ expression •
       49 expression: expression • OP_PLUS expression
      Example: expression OP_DIVEQ expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 49: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 49: expression                             OP_PLUS expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_MULT:
       62 expression: expression OP_DIVEQ expression •
       50 expression: expression • OP_MULT expression
      Example: expression OP_DIVEQ expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 50: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 50: expression                             OP_MULT expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_GT:
       62 expression: expression OP_DIVEQ expression •
       51 expression: expression • OP_GT expression
      Example: expression OP_DIVEQ expression • OP_GT expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 51: expression • OP_GT expression
      Reduce derivation
        expression
        ↳ 51: expression                             OP_GT expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_LT:
       62 expression: expression OP_DIVEQ expression •
       52 expression: expression • OP_LT expression
      Example: expression OP_DIVEQ expression • OP_LT expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 52: expression • OP_LT expression
      Reduce derivation
        expression
        ↳ 52: expression                             OP_LT expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_EQ:
       62 expression: expression OP_DIVEQ expression •
       53 expression: expression • OP_EQ expression
      Example: expression OP_DIVEQ expression • OP_EQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 53: expression • OP_EQ expression
      Reduce derivation
        expression
        ↳ 53: expression                             OP_EQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_NEQ:
       62 expression: expression OP_DIVEQ expression •
       54 expression: expression • OP_NEQ expression
      Example: expression OP_DIVEQ expression • OP_NEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 54: expression • OP_NEQ expression
      Reduce derivation
        expression
        ↳ 54: expression                             OP_NEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_GEQ:
       62 expression: expression OP_DIVEQ expression •
       55 expression: expression • OP_GEQ expression
      Example: expression OP_DIVEQ expression • OP_GEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 55: expression • OP_GEQ expression
      Reduce derivation
        expression
        ↳ 55: expression                             OP_GEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_LEQ:
       62 expression: expression OP_DIVEQ expression •
       56 expression: expression • OP_LEQ expression
      Example: expression OP_DIVEQ expression • OP_LEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 56: expression • OP_LEQ expression
      Reduce derivation
        expression
        ↳ 56: expression                             OP_LEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_POW:
       62 expression: expression OP_DIVEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_DIVEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                             OP_POW expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       62 expression: expression OP_DIVEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_DIVEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                             OP_PLUSEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       62 expression: expression OP_DIVEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_DIVEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                             OP_MINUSEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       62 expression: expression OP_DIVEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_DIVEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                             OP_MULTEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       62 expression: expression OP_DIVEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_DIVEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                             OP_DIVEQ expression
              ↳ 62: expression OP_DIVEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       62 expression: expression OP_DIVEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_DIVEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 62: expression OP_DIVEQ expression
                                  ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                             OP_MODEQ expression
              ↳ 62: expression OP_DIVEQ expression •



State 126

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression
   63           | expression OP_MODEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 63 (expression)]
    OP_MINUSEQ  [reduce using rule 63 (expression)]
    OP_MULTEQ   [reduce using rule 63 (expression)]
    OP_DIVEQ    [reduce using rule 63 (expression)]
    OP_MODEQ    [reduce using rule 63 (expression)]
    OP_POW      [reduce using rule 63 (expression)]
    OP_EQ       [reduce using rule 63 (expression)]
    OP_NEQ      [reduce using rule 63 (expression)]
    OP_LT       [reduce using rule 63 (expression)]
    OP_LEQ      [reduce using rule 63 (expression)]
    OP_GT       [reduce using rule 63 (expression)]
    OP_GEQ      [reduce using rule 63 (expression)]
    OP_PLUS     [reduce using rule 63 (expression)]
    OP_MULT     [reduce using rule 63 (expression)]
    $default    reduce using rule 63 (expression)

    shift/reduce conflict on token OP_PLUS:
       63 expression: expression OP_MODEQ expression •
       49 expression: expression • OP_PLUS expression
      Example: expression OP_MODEQ expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 49: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 49: expression                             OP_PLUS expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_MULT:
       63 expression: expression OP_MODEQ expression •
       50 expression: expression • OP_MULT expression
      Example: expression OP_MODEQ expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 50: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 50: expression                             OP_MULT expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_GT:
       63 expression: expression OP_MODEQ expression •
       51 expression: expression • OP_GT expression
      Example: expression OP_MODEQ expression • OP_GT expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 51: expression • OP_GT expression
      Reduce derivation
        expression
        ↳ 51: expression                             OP_GT expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_LT:
       63 expression: expression OP_MODEQ expression •
       52 expression: expression • OP_LT expression
      Example: expression OP_MODEQ expression • OP_LT expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 52: expression • OP_LT expression
      Reduce derivation
        expression
        ↳ 52: expression                             OP_LT expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_EQ:
       63 expression: expression OP_MODEQ expression •
       53 expression: expression • OP_EQ expression
      Example: expression OP_MODEQ expression • OP_EQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 53: expression • OP_EQ expression
      Reduce derivation
        expression
        ↳ 53: expression                             OP_EQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_NEQ:
       63 expression: expression OP_MODEQ expression •
       54 expression: expression • OP_NEQ expression
      Example: expression OP_MODEQ expression • OP_NEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 54: expression • OP_NEQ expression
      Reduce derivation
        expression
        ↳ 54: expression                             OP_NEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_GEQ:
       63 expression: expression OP_MODEQ expression •
       55 expression: expression • OP_GEQ expression
      Example: expression OP_MODEQ expression • OP_GEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 55: expression • OP_GEQ expression
      Reduce derivation
        expression
        ↳ 55: expression                             OP_GEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_LEQ:
       63 expression: expression OP_MODEQ expression •
       56 expression: expression • OP_LEQ expression
      Example: expression OP_MODEQ expression • OP_LEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 56: expression • OP_LEQ expression
      Reduce derivation
        expression
        ↳ 56: expression                             OP_LEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_POW:
       63 expression: expression OP_MODEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_MODEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                             OP_POW expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       63 expression: expression OP_MODEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_MODEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                             OP_PLUSEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       63 expression: expression OP_MODEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_MODEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                             OP_MINUSEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       63 expression: expression OP_MODEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_MODEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                             OP_MULTEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       63 expression: expression OP_MODEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_MODEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                             OP_DIVEQ expression
              ↳ 63: expression OP_MODEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       63 expression: expression OP_MODEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_MODEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 63: expression OP_MODEQ expression
                                  ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                             OP_MODEQ expression
              ↳ 63: expression OP_MODEQ expression •



State 127

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   58           | expression OP_POW expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 58 (expression)]
    OP_MINUSEQ  [reduce using rule 58 (expression)]
    OP_MULTEQ   [reduce using rule 58 (expression)]
    OP_DIVEQ    [reduce using rule 58 (expression)]
    OP_MODEQ    [reduce using rule 58 (expression)]
    OP_POW      [reduce using rule 58 (expression)]
    OP_EQ       [reduce using rule 58 (expression)]
    OP_NEQ      [reduce using rule 58 (expression)]
    OP_LT       [reduce using rule 58 (expression)]
    OP_LEQ      [reduce using rule 58 (expression)]
    OP_GT       [reduce using rule 58 (expression)]
    OP_GEQ      [reduce using rule 58 (expression)]
    OP_PLUS     [reduce using rule 58 (expression)]
    OP_MULT     [reduce using rule 58 (expression)]
    $default    reduce using rule 58 (expression)

    shift/reduce conflict on token OP_PLUS:
       58 expression: expression OP_POW expression •
       49 expression: expression • OP_PLUS expression
      Example: expression OP_POW expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 49: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 49: expression                           OP_PLUS expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_MULT:
       58 expression: expression OP_POW expression •
       50 expression: expression • OP_MULT expression
      Example: expression OP_POW expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 50: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 50: expression                           OP_MULT expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_GT:
       58 expression: expression OP_POW expression •
       51 expression: expression • OP_GT expression
      Example: expression OP_POW expression • OP_GT expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 51: expression • OP_GT expression
      Reduce derivation
        expression
        ↳ 51: expression                           OP_GT expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_LT:
       58 expression: expression OP_POW expression •
       52 expression: expression • OP_LT expression
      Example: expression OP_POW expression • OP_LT expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 52: expression • OP_LT expression
      Reduce derivation
        expression
        ↳ 52: expression                           OP_LT expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_EQ:
       58 expression: expression OP_POW expression •
       53 expression: expression • OP_EQ expression
      Example: expression OP_POW expression • OP_EQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 53: expression • OP_EQ expression
      Reduce derivation
        expression
        ↳ 53: expression                           OP_EQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_NEQ:
       58 expression: expression OP_POW expression •
       54 expression: expression • OP_NEQ expression
      Example: expression OP_POW expression • OP_NEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 54: expression • OP_NEQ expression
      Reduce derivation
        expression
        ↳ 54: expression                           OP_NEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_GEQ:
       58 expression: expression OP_POW expression •
       55 expression: expression • OP_GEQ expression
      Example: expression OP_POW expression • OP_GEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 55: expression • OP_GEQ expression
      Reduce derivation
        expression
        ↳ 55: expression                           OP_GEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_LEQ:
       58 expression: expression OP_POW expression •
       56 expression: expression • OP_LEQ expression
      Example: expression OP_POW expression • OP_LEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 56: expression • OP_LEQ expression
      Reduce derivation
        expression
        ↳ 56: expression                           OP_LEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_POW:
       58 expression: expression OP_POW expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_POW expression • OP_POW expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                           OP_POW expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_PLUSEQ:
       58 expression: expression OP_POW expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_POW expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                           OP_PLUSEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_MINUSEQ:
       58 expression: expression OP_POW expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_POW expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                           OP_MINUSEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_MULTEQ:
       58 expression: expression OP_POW expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_POW expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                           OP_MULTEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_DIVEQ:
       58 expression: expression OP_POW expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_POW expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                           OP_DIVEQ expression
              ↳ 58: expression OP_POW expression •

    shift/reduce conflict on token OP_MODEQ:
       58 expression: expression OP_POW expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_POW expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 58: expression OP_POW expression
                                ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                           OP_MODEQ expression
              ↳ 58: expression OP_POW expression •



State 128

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   53           | expression OP_EQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON]
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 53 (expression)]
    OP_MINUSEQ  [reduce using rule 53 (expression)]
    OP_MULTEQ   [reduce using rule 53 (expression)]
    OP_DIVEQ    [reduce using rule 53 (expression)]
    OP_MODEQ    [reduce using rule 53 (expression)]
    OP_POW      [reduce using rule 53 (expression)]
    $default    reduce using rule 53 (expression)

    Conflict between rule 53 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 53 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 53 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 53 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 53 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 53 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 53 and token OP_PLUS resolved as shift (OP_EQ < OP_PLUS).
    Conflict between rule 53 and token OP_MULT resolved as shift (OP_EQ < OP_MULT).

    shift/reduce conflict on token OP_POW:
       53 expression: expression OP_EQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_EQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 53: expression OP_EQ expression
                               ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                          OP_POW expression
              ↳ 53: expression OP_EQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       53 expression: expression OP_EQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_EQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 53: expression OP_EQ expression
                               ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                          OP_PLUSEQ expression
              ↳ 53: expression OP_EQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       53 expression: expression OP_EQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_EQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 53: expression OP_EQ expression
                               ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                          OP_MINUSEQ expression
              ↳ 53: expression OP_EQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       53 expression: expression OP_EQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_EQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 53: expression OP_EQ expression
                               ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                          OP_MULTEQ expression
              ↳ 53: expression OP_EQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       53 expression: expression OP_EQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_EQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 53: expression OP_EQ expression
                               ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                          OP_DIVEQ expression
              ↳ 53: expression OP_EQ expression •

    shift/reduce conflict on token OP_MODEQ:
       53 expression: expression OP_EQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_EQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 53: expression OP_EQ expression
                               ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                          OP_MODEQ expression
              ↳ 53: expression OP_EQ expression •



State 129

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   54           | expression OP_NEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON]
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 54 (expression)]
    OP_MINUSEQ  [reduce using rule 54 (expression)]
    OP_MULTEQ   [reduce using rule 54 (expression)]
    OP_DIVEQ    [reduce using rule 54 (expression)]
    OP_MODEQ    [reduce using rule 54 (expression)]
    OP_POW      [reduce using rule 54 (expression)]
    $default    reduce using rule 54 (expression)

    Conflict between rule 54 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 54 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 54 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 54 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 54 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 54 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 54 and token OP_PLUS resolved as shift (OP_NEQ < OP_PLUS).
    Conflict between rule 54 and token OP_MULT resolved as shift (OP_NEQ < OP_MULT).

    shift/reduce conflict on token OP_POW:
       54 expression: expression OP_NEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_NEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 54: expression OP_NEQ expression
                                ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                           OP_POW expression
              ↳ 54: expression OP_NEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       54 expression: expression OP_NEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_NEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 54: expression OP_NEQ expression
                                ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                           OP_PLUSEQ expression
              ↳ 54: expression OP_NEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       54 expression: expression OP_NEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_NEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 54: expression OP_NEQ expression
                                ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                           OP_MINUSEQ expression
              ↳ 54: expression OP_NEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       54 expression: expression OP_NEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_NEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 54: expression OP_NEQ expression
                                ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                           OP_MULTEQ expression
              ↳ 54: expression OP_NEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       54 expression: expression OP_NEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_NEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 54: expression OP_NEQ expression
                                ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                           OP_DIVEQ expression
              ↳ 54: expression OP_NEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       54 expression: expression OP_NEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_NEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 54: expression OP_NEQ expression
                                ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                           OP_MODEQ expression
              ↳ 54: expression OP_NEQ expression •



State 130

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   52           | expression OP_LT expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON]
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 52 (expression)]
    OP_MINUSEQ  [reduce using rule 52 (expression)]
    OP_MULTEQ   [reduce using rule 52 (expression)]
    OP_DIVEQ    [reduce using rule 52 (expression)]
    OP_MODEQ    [reduce using rule 52 (expression)]
    OP_POW      [reduce using rule 52 (expression)]
    $default    reduce using rule 52 (expression)

    Conflict between rule 52 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 52 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 52 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 52 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 52 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 52 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 52 and token OP_PLUS resolved as shift (OP_LT < OP_PLUS).
    Conflict between rule 52 and token OP_MULT resolved as shift (OP_LT < OP_MULT).

    shift/reduce conflict on token OP_POW:
       52 expression: expression OP_LT expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_LT expression • OP_POW expression
      Shift derivation
        expression
        ↳ 52: expression OP_LT expression
                               ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                          OP_POW expression
              ↳ 52: expression OP_LT expression •

    shift/reduce conflict on token OP_PLUSEQ:
       52 expression: expression OP_LT expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_LT expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 52: expression OP_LT expression
                               ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                          OP_PLUSEQ expression
              ↳ 52: expression OP_LT expression •

    shift/reduce conflict on token OP_MINUSEQ:
       52 expression: expression OP_LT expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_LT expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 52: expression OP_LT expression
                               ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                          OP_MINUSEQ expression
              ↳ 52: expression OP_LT expression •

    shift/reduce conflict on token OP_MULTEQ:
       52 expression: expression OP_LT expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_LT expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 52: expression OP_LT expression
                               ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                          OP_MULTEQ expression
              ↳ 52: expression OP_LT expression •

    shift/reduce conflict on token OP_DIVEQ:
       52 expression: expression OP_LT expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_LT expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 52: expression OP_LT expression
                               ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                          OP_DIVEQ expression
              ↳ 52: expression OP_LT expression •

    shift/reduce conflict on token OP_MODEQ:
       52 expression: expression OP_LT expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_LT expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 52: expression OP_LT expression
                               ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                          OP_MODEQ expression
              ↳ 52: expression OP_LT expression •



State 131

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   56           | expression OP_LEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON]
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 56 (expression)]
    OP_MINUSEQ  [reduce using rule 56 (expression)]
    OP_MULTEQ   [reduce using rule 56 (expression)]
    OP_DIVEQ    [reduce using rule 56 (expression)]
    OP_MODEQ    [reduce using rule 56 (expression)]
    OP_POW      [reduce using rule 56 (expression)]
    $default    reduce using rule 56 (expression)

    Conflict between rule 56 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 56 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 56 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 56 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 56 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 56 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 56 and token OP_PLUS resolved as shift (OP_LEQ < OP_PLUS).
    Conflict between rule 56 and token OP_MULT resolved as shift (OP_LEQ < OP_MULT).

    shift/reduce conflict on token OP_POW:
       56 expression: expression OP_LEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_LEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 56: expression OP_LEQ expression
                                ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                           OP_POW expression
              ↳ 56: expression OP_LEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       56 expression: expression OP_LEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_LEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 56: expression OP_LEQ expression
                                ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                           OP_PLUSEQ expression
              ↳ 56: expression OP_LEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       56 expression: expression OP_LEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_LEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 56: expression OP_LEQ expression
                                ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                           OP_MINUSEQ expression
              ↳ 56: expression OP_LEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       56 expression: expression OP_LEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_LEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 56: expression OP_LEQ expression
                                ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                           OP_MULTEQ expression
              ↳ 56: expression OP_LEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       56 expression: expression OP_LEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_LEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 56: expression OP_LEQ expression
                                ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                           OP_DIVEQ expression
              ↳ 56: expression OP_LEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       56 expression: expression OP_LEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_LEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 56: expression OP_LEQ expression
                                ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                           OP_MODEQ expression
              ↳ 56: expression OP_LEQ expression •



State 132

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   51           | expression OP_GT expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON]
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 51 (expression)]
    OP_MINUSEQ  [reduce using rule 51 (expression)]
    OP_MULTEQ   [reduce using rule 51 (expression)]
    OP_DIVEQ    [reduce using rule 51 (expression)]
    OP_MODEQ    [reduce using rule 51 (expression)]
    OP_POW      [reduce using rule 51 (expression)]
    $default    reduce using rule 51 (expression)

    Conflict between rule 51 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 51 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 51 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 51 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 51 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 51 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 51 and token OP_PLUS resolved as shift (OP_GT < OP_PLUS).
    Conflict between rule 51 and token OP_MULT resolved as shift (OP_GT < OP_MULT).

    shift/reduce conflict on token OP_POW:
       51 expression: expression OP_GT expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_GT expression • OP_POW expression
      Shift derivation
        expression
        ↳ 51: expression OP_GT expression
                               ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                          OP_POW expression
              ↳ 51: expression OP_GT expression •

    shift/reduce conflict on token OP_PLUSEQ:
       51 expression: expression OP_GT expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_GT expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 51: expression OP_GT expression
                               ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                          OP_PLUSEQ expression
              ↳ 51: expression OP_GT expression •

    shift/reduce conflict on token OP_MINUSEQ:
       51 expression: expression OP_GT expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_GT expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 51: expression OP_GT expression
                               ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                          OP_MINUSEQ expression
              ↳ 51: expression OP_GT expression •

    shift/reduce conflict on token OP_MULTEQ:
       51 expression: expression OP_GT expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_GT expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 51: expression OP_GT expression
                               ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                          OP_MULTEQ expression
              ↳ 51: expression OP_GT expression •

    shift/reduce conflict on token OP_DIVEQ:
       51 expression: expression OP_GT expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_GT expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 51: expression OP_GT expression
                               ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                          OP_DIVEQ expression
              ↳ 51: expression OP_GT expression •

    shift/reduce conflict on token OP_MODEQ:
       51 expression: expression OP_GT expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_GT expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 51: expression OP_GT expression
                               ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                          OP_MODEQ expression
              ↳ 51: expression OP_GT expression •



State 133

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   55           | expression OP_GEQ expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON]
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 55 (expression)]
    OP_MINUSEQ  [reduce using rule 55 (expression)]
    OP_MULTEQ   [reduce using rule 55 (expression)]
    OP_DIVEQ    [reduce using rule 55 (expression)]
    OP_MODEQ    [reduce using rule 55 (expression)]
    OP_POW      [reduce using rule 55 (expression)]
    $default    reduce using rule 55 (expression)

    Conflict between rule 55 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 55 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 55 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 55 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 55 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 55 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 55 and token OP_PLUS resolved as shift (OP_GEQ < OP_PLUS).
    Conflict between rule 55 and token OP_MULT resolved as shift (OP_GEQ < OP_MULT).

    shift/reduce conflict on token OP_POW:
       55 expression: expression OP_GEQ expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_GEQ expression • OP_POW expression
      Shift derivation
        expression
        ↳ 55: expression OP_GEQ expression
                                ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                           OP_POW expression
              ↳ 55: expression OP_GEQ expression •

    shift/reduce conflict on token OP_PLUSEQ:
       55 expression: expression OP_GEQ expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_GEQ expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 55: expression OP_GEQ expression
                                ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                           OP_PLUSEQ expression
              ↳ 55: expression OP_GEQ expression •

    shift/reduce conflict on token OP_MINUSEQ:
       55 expression: expression OP_GEQ expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_GEQ expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 55: expression OP_GEQ expression
                                ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                           OP_MINUSEQ expression
              ↳ 55: expression OP_GEQ expression •

    shift/reduce conflict on token OP_MULTEQ:
       55 expression: expression OP_GEQ expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_GEQ expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 55: expression OP_GEQ expression
                                ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                           OP_MULTEQ expression
              ↳ 55: expression OP_GEQ expression •

    shift/reduce conflict on token OP_DIVEQ:
       55 expression: expression OP_GEQ expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_GEQ expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 55: expression OP_GEQ expression
                                ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                           OP_DIVEQ expression
              ↳ 55: expression OP_GEQ expression •

    shift/reduce conflict on token OP_MODEQ:
       55 expression: expression OP_GEQ expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_GEQ expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 55: expression OP_GEQ expression
                                ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                           OP_MODEQ expression
              ↳ 55: expression OP_GEQ expression •



State 134

   49 expression: expression • OP_PLUS expression
   49           | expression OP_PLUS expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, RPAREN, RBRACKET, COLON, SEMICOLON]
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_MULT     shift, and go to state 108

    OP_PLUSEQ   [reduce using rule 49 (expression)]
    OP_MINUSEQ  [reduce using rule 49 (expression)]
    OP_MULTEQ   [reduce using rule 49 (expression)]
    OP_DIVEQ    [reduce using rule 49 (expression)]
    OP_MODEQ    [reduce using rule 49 (expression)]
    OP_POW      [reduce using rule 49 (expression)]
    $default    reduce using rule 49 (expression)

    Conflict between rule 49 and token OP_EQ resolved as reduce (OP_EQ < OP_PLUS).
    Conflict between rule 49 and token OP_NEQ resolved as reduce (OP_NEQ < OP_PLUS).
    Conflict between rule 49 and token OP_LT resolved as reduce (OP_LT < OP_PLUS).
    Conflict between rule 49 and token OP_LEQ resolved as reduce (OP_LEQ < OP_PLUS).
    Conflict between rule 49 and token OP_GT resolved as reduce (OP_GT < OP_PLUS).
    Conflict between rule 49 and token OP_GEQ resolved as reduce (OP_GEQ < OP_PLUS).
    Conflict between rule 49 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 49 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).

    shift/reduce conflict on token OP_POW:
       49 expression: expression OP_PLUS expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_PLUS expression • OP_POW expression
      Shift derivation
        expression
        ↳ 49: expression OP_PLUS expression
                                 ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                            OP_POW expression
              ↳ 49: expression OP_PLUS expression •

    shift/reduce conflict on token OP_PLUSEQ:
       49 expression: expression OP_PLUS expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_PLUS expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 49: expression OP_PLUS expression
                                 ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                            OP_PLUSEQ expression
              ↳ 49: expression OP_PLUS expression •

    shift/reduce conflict on token OP_MINUSEQ:
       49 expression: expression OP_PLUS expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_PLUS expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 49: expression OP_PLUS expression
                                 ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                            OP_MINUSEQ expression
              ↳ 49: expression OP_PLUS expression •

    shift/reduce conflict on token OP_MULTEQ:
       49 expression: expression OP_PLUS expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_PLUS expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 49: expression OP_PLUS expression
                                 ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                            OP_MULTEQ expression
              ↳ 49: expression OP_PLUS expression •

    shift/reduce conflict on token OP_DIVEQ:
       49 expression: expression OP_PLUS expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_PLUS expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 49: expression OP_PLUS expression
                                 ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                            OP_DIVEQ expression
              ↳ 49: expression OP_PLUS expression •

    shift/reduce conflict on token OP_MODEQ:
       49 expression: expression OP_PLUS expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_PLUS expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 49: expression OP_PLUS expression
                                 ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                            OP_MODEQ expression
              ↳ 49: expression OP_PLUS expression •



State 135

   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   50           | expression OP_MULT expression •  [KW_FOR, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100

    OP_PLUSEQ   [reduce using rule 50 (expression)]
    OP_MINUSEQ  [reduce using rule 50 (expression)]
    OP_MULTEQ   [reduce using rule 50 (expression)]
    OP_DIVEQ    [reduce using rule 50 (expression)]
    OP_MODEQ    [reduce using rule 50 (expression)]
    OP_POW      [reduce using rule 50 (expression)]
    $default    reduce using rule 50 (expression)

    Conflict between rule 50 and token OP_EQ resolved as reduce (OP_EQ < OP_MULT).
    Conflict between rule 50 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MULT).
    Conflict between rule 50 and token OP_LT resolved as reduce (OP_LT < OP_MULT).
    Conflict between rule 50 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MULT).
    Conflict between rule 50 and token OP_GT resolved as reduce (OP_GT < OP_MULT).
    Conflict between rule 50 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MULT).
    Conflict between rule 50 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 50 and token OP_MULT resolved as reduce (%left OP_MULT).

    shift/reduce conflict on token OP_POW:
       50 expression: expression OP_MULT expression •
       58 expression: expression • OP_POW expression
      Example: expression OP_MULT expression • OP_POW expression
      Shift derivation
        expression
        ↳ 50: expression OP_MULT expression
                                 ↳ 58: expression • OP_POW expression
      Reduce derivation
        expression
        ↳ 58: expression                            OP_POW expression
              ↳ 50: expression OP_MULT expression •

    shift/reduce conflict on token OP_PLUSEQ:
       50 expression: expression OP_MULT expression •
       59 expression: expression • OP_PLUSEQ expression
      Example: expression OP_MULT expression • OP_PLUSEQ expression
      Shift derivation
        expression
        ↳ 50: expression OP_MULT expression
                                 ↳ 59: expression • OP_PLUSEQ expression
      Reduce derivation
        expression
        ↳ 59: expression                            OP_PLUSEQ expression
              ↳ 50: expression OP_MULT expression •

    shift/reduce conflict on token OP_MINUSEQ:
       50 expression: expression OP_MULT expression •
       60 expression: expression • OP_MINUSEQ expression
      Example: expression OP_MULT expression • OP_MINUSEQ expression
      Shift derivation
        expression
        ↳ 50: expression OP_MULT expression
                                 ↳ 60: expression • OP_MINUSEQ expression
      Reduce derivation
        expression
        ↳ 60: expression                            OP_MINUSEQ expression
              ↳ 50: expression OP_MULT expression •

    shift/reduce conflict on token OP_MULTEQ:
       50 expression: expression OP_MULT expression •
       61 expression: expression • OP_MULTEQ expression
      Example: expression OP_MULT expression • OP_MULTEQ expression
      Shift derivation
        expression
        ↳ 50: expression OP_MULT expression
                                 ↳ 61: expression • OP_MULTEQ expression
      Reduce derivation
        expression
        ↳ 61: expression                            OP_MULTEQ expression
              ↳ 50: expression OP_MULT expression •

    shift/reduce conflict on token OP_DIVEQ:
       50 expression: expression OP_MULT expression •
       62 expression: expression • OP_DIVEQ expression
      Example: expression OP_MULT expression • OP_DIVEQ expression
      Shift derivation
        expression
        ↳ 50: expression OP_MULT expression
                                 ↳ 62: expression • OP_DIVEQ expression
      Reduce derivation
        expression
        ↳ 62: expression                            OP_DIVEQ expression
              ↳ 50: expression OP_MULT expression •

    shift/reduce conflict on token OP_MODEQ:
       50 expression: expression OP_MULT expression •
       63 expression: expression • OP_MODEQ expression
      Example: expression OP_MULT expression • OP_MODEQ expression
      Shift derivation
        expression
        ↳ 50: expression OP_MULT expression
                                 ↳ 63: expression • OP_MODEQ expression
      Reduce derivation
        expression
        ↳ 63: expression                            OP_MODEQ expression
              ↳ 50: expression OP_MULT expression •



State 136

   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON
   35     | KW_COMP IDENTIFIER COLON stmt_list • KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_FOR       shift, and go to state 51
    KW_WHILE     shift, and go to state 52
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    KW_ENDCOMP   shift, and go to state 143
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 137

    9 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON stmt_list KW_ENDDEF SEMICOLON •

    $default  reduce using rule 9 (function)


State 138

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR • IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 144


State 139

   22 stmt: IDENTIFIER LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 22 (stmt)


State 140

   15 stmt_list: ε •
   16          | • stmt_list stmt
   24 stmt: KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 145


State 141

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    COLON       shift, and go to state 146


State 142

   15 stmt_list: ε •
   16          | • stmt_list stmt
   27 stmt: KW_WHILE LPAREN expression RPAREN COLON • stmt_list KW_ENDWHILE SEMICOLON
   34     | KW_WHILE LPAREN expression RPAREN COLON • stmt_list KW_ENDWHILE SEMICOLON

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 147


State 143

   35 stmt: KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP • SEMICOLON

    SEMICOLON  shift, and go to state 148


State 144

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER • COLON expression RBRACKET COLON type SEMICOLON

    COLON  shift, and go to state 149


State 145

   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   24     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_ELSE      shift, and go to state 150
    KW_ENDIF     shift, and go to state 151
    KW_FOR       shift, and go to state 51
    KW_WHILE     shift, and go to state 52
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 146

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 152


State 147

   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   27     | KW_WHILE LPAREN expression RPAREN COLON stmt_list • KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   34     | KW_WHILE LPAREN expression RPAREN COLON stmt_list • KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_FOR       shift, and go to state 51
    KW_WHILE     shift, and go to state 52
    KW_ENDWHILE  shift, and go to state 153
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 148

   35 stmt: KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON •

    $default  reduce using rule 35 (stmt)


State 149

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON • expression RBRACKET COLON type SEMICOLON
   43 expression: • CONST_INT
   44           | • CONST_FLOAT
   45           | • CONST_STRING
   46           | • CONST_BOOL_TRUE
   47           | • CONST_BOOL_FALSE
   48           | • IDENTIFIER
   49           | • expression OP_PLUS expression
   50           | • expression OP_MULT expression
   51           | • expression OP_GT expression
   52           | • expression OP_LT expression
   53           | • expression OP_EQ expression
   54           | • expression OP_NEQ expression
   55           | • expression OP_GEQ expression
   56           | • expression OP_LEQ expression
   57           | • LPAREN expression RPAREN
   58           | • expression OP_POW expression
   59           | • expression OP_PLUSEQ expression
   60           | • expression OP_MINUSEQ expression
   61           | • expression OP_MULTEQ expression
   62           | • expression OP_DIVEQ expression
   63           | • expression OP_MODEQ expression

    IDENTIFIER        shift, and go to state 74
    CONST_INT         shift, and go to state 75
    CONST_FLOAT       shift, and go to state 76
    CONST_STRING      shift, and go to state 77
    CONST_BOOL_TRUE   shift, and go to state 78
    CONST_BOOL_FALSE  shift, and go to state 79
    LPAREN            shift, and go to state 80

    expression  go to state 154


State 150

   25 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE • COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 155


State 151

   24 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 156


State 152

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    RBRACKET    shift, and go to state 157


State 153

   27 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE • SEMICOLON
   34     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE • SEMICOLON

    SEMICOLON  shift, and go to state 158


State 154

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression • RBRACKET COLON type SEMICOLON
   49 expression: expression • OP_PLUS expression
   50           | expression • OP_MULT expression
   51           | expression • OP_GT expression
   52           | expression • OP_LT expression
   53           | expression • OP_EQ expression
   54           | expression • OP_NEQ expression
   55           | expression • OP_GEQ expression
   56           | expression • OP_LEQ expression
   58           | expression • OP_POW expression
   59           | expression • OP_PLUSEQ expression
   60           | expression • OP_MINUSEQ expression
   61           | expression • OP_MULTEQ expression
   62           | expression • OP_DIVEQ expression
   63           | expression • OP_MODEQ expression

    OP_PLUSEQ   shift, and go to state 95
    OP_MINUSEQ  shift, and go to state 96
    OP_MULTEQ   shift, and go to state 97
    OP_DIVEQ    shift, and go to state 98
    OP_MODEQ    shift, and go to state 99
    OP_POW      shift, and go to state 100
    OP_EQ       shift, and go to state 101
    OP_NEQ      shift, and go to state 102
    OP_LT       shift, and go to state 103
    OP_LEQ      shift, and go to state 104
    OP_GT       shift, and go to state 105
    OP_GEQ      shift, and go to state 106
    OP_PLUS     shift, and go to state 107
    OP_MULT     shift, and go to state 108
    RBRACKET    shift, and go to state 159


State 155

   15 stmt_list: ε •
   16          | • stmt_list stmt
   25 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON • stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 160


State 156

   24 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 24 (stmt)


State 157

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 161


State 158

   27 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •  [IDENTIFIER, KW_IF, KW_ELSE, KW_ENDIF, KW_FOR, KW_ENDFOR, KW_WHILE, KW_ENDWHILE, KW_BREAK, KW_CONTINUE, KW_ENDDEF, KW_RETURN, KW_COMP, KW_ENDCOMP, SEMICOLON]
   34     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •  [IDENTIFIER, KW_IF, KW_ELSE, KW_ENDIF, KW_FOR, KW_ENDFOR, KW_WHILE, KW_ENDWHILE, KW_BREAK, KW_CONTINUE, KW_ENDDEF, KW_RETURN, KW_COMP, KW_ENDCOMP, SEMICOLON]

    IDENTIFIER   reduce using rule 27 (stmt)
    IDENTIFIER   [reduce using rule 34 (stmt)]
    KW_IF        reduce using rule 27 (stmt)
    KW_IF        [reduce using rule 34 (stmt)]
    KW_ELSE      reduce using rule 27 (stmt)
    KW_ELSE      [reduce using rule 34 (stmt)]
    KW_ENDIF     reduce using rule 27 (stmt)
    KW_ENDIF     [reduce using rule 34 (stmt)]
    KW_FOR       reduce using rule 27 (stmt)
    KW_FOR       [reduce using rule 34 (stmt)]
    KW_ENDFOR    reduce using rule 27 (stmt)
    KW_ENDFOR    [reduce using rule 34 (stmt)]
    KW_WHILE     reduce using rule 27 (stmt)
    KW_WHILE     [reduce using rule 34 (stmt)]
    KW_ENDWHILE  reduce using rule 27 (stmt)
    KW_ENDWHILE  [reduce using rule 34 (stmt)]
    KW_BREAK     reduce using rule 27 (stmt)
    KW_BREAK     [reduce using rule 34 (stmt)]
    KW_CONTINUE  reduce using rule 27 (stmt)
    KW_CONTINUE  [reduce using rule 34 (stmt)]
    KW_ENDDEF    reduce using rule 27 (stmt)
    KW_ENDDEF    [reduce using rule 34 (stmt)]
    KW_RETURN    reduce using rule 27 (stmt)
    KW_RETURN    [reduce using rule 34 (stmt)]
    KW_COMP      reduce using rule 27 (stmt)
    KW_COMP      [reduce using rule 34 (stmt)]
    KW_ENDCOMP   reduce using rule 27 (stmt)
    KW_ENDCOMP   [reduce using rule 34 (stmt)]
    SEMICOLON    reduce using rule 27 (stmt)
    SEMICOLON    [reduce using rule 34 (stmt)]
    $default     reduce using rule 27 (stmt)

    reduce/reduce conflict on tokens IDENTIFIER, KW_IF, KW_ELSE, KW_ENDIF, KW_FOR, KW_ENDFOR, KW_WHILE, KW_ENDWHILE, KW_BREAK, KW_CONTINUE, KW_ENDDEF, KW_RETURN, KW_COMP, KW_ENDCOMP, SEMICOLON:
       27 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •
       34 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •
      Example: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •
      First reduce derivation
        stmt
        ↳ 27: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •
      Second reduce derivation
        stmt
        ↳ 34: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •



State 159

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 162


State 160

   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   25     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list • KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_ENDIF     shift, and go to state 163
    KW_FOR       shift, and go to state 51
    KW_WHILE     shift, and go to state 52
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 161

   15 stmt_list: ε •
   16          | • stmt_list stmt
   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 15 (stmt_list)

    stmt_list  go to state 164


State 162

   17 type: • KW_INTEGER
   18     | • KW_SCALAR
   19     | • KW_STR
   20     | • KW_BOOL
   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON • type SEMICOLON

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOL     shift, and go to state 39

    type  go to state 165


State 163

   25 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 166


State 164

   16 stmt_list: stmt_list • stmt
   21 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   22     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
   23     | • KW_RETURN expression SEMICOLON
   24     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   25     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   26     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   26     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON
   27     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   28     | • KW_BREAK SEMICOLON
   29     | • KW_CONTINUE SEMICOLON
   30     | • IDENTIFIER COLON type SEMICOLON
   31     | • SEMICOLON
   32     | • KW_RETURN SEMICOLON
   33     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   34     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   35     | • KW_COMP IDENTIFIER COLON stmt_list KW_ENDCOMP SEMICOLON

    IDENTIFIER   shift, and go to state 49
    KW_IF        shift, and go to state 50
    KW_FOR       shift, and go to state 51
    KW_ENDFOR    shift, and go to state 167
    KW_WHILE     shift, and go to state 52
    KW_BREAK     shift, and go to state 53
    KW_CONTINUE  shift, and go to state 54
    KW_RETURN    shift, and go to state 56
    KW_COMP      shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    stmt  go to state 59


State 165

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 168


State 166

   25 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 25 (stmt)


State 167

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 169


State 168

   33 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 33 (stmt)


State 169

   26 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 26 (stmt)
