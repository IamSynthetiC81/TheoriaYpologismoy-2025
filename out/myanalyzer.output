Terminals unused in grammar

    KW_CONST
    KW_NOT
    KW_AND
    KW_OR
    KW_COMP
    KW_ENDCOMP
    KW_OF
    OP_PLUSEQ
    OP_MINUSEQ
    OP_MULTEQ
    OP_DIVEQ
    OP_MODEQ
    OP_DEFINE
    OP_MINUS
    OP_DIV
    OP_MOD
    OP_POW
    COMMA
    DOT


Grammar

    0 $accept: program $end

    1 program: function_list main_function

    2 function_list: ε
    3              | function_list function

    4 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    5 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    6 stmt_list: ε
    7          | stmt_list stmt

    8 type: KW_INTEGER
    9     | KW_SCALAR
   10     | KW_STR
   11     | KW_BOOL

   12 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON
   13     | IDENTIFIER LPAREN expression RPAREN SEMICOLON
   14     | KW_RETURN expression SEMICOLON
   15     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   16     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   17     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   18     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   19     | KW_BREAK SEMICOLON
   20     | KW_CONTINUE SEMICOLON
   21     | IDENTIFIER COLON type SEMICOLON
   22     | SEMICOLON
   23     | KW_RETURN SEMICOLON

   24 expression: CONST_INT
   25           | CONST_FLOAT
   26           | CONST_STRING
   27           | CONST_BOOL_TRUE
   28           | CONST_BOOL_FALSE
   29           | IDENTIFIER
   30           | expression OP_PLUS expression
   31           | expression OP_MULT expression
   32           | expression OP_GT expression
   33           | expression OP_LT expression
   34           | expression OP_EQ expression
   35           | expression OP_NEQ expression
   36           | expression OP_GEQ expression
   37           | expression OP_LEQ expression
   38           | LPAREN expression RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <string> (258) 4 12 13 17 21 29
    CONST_INT <string> (259) 24
    CONST_FLOAT <string> (260) 25
    CONST_STRING <string> (261) 26
    CONST_BOOL_TRUE (262) 27
    CONST_BOOL_FALSE (263) 28
    KW_INTEGER (264) 8
    KW_SCALAR (265) 9
    KW_STR (266) 10
    KW_BOOL (267) 11
    KW_CONST (268)
    KW_IF (269) 15 16
    KW_ELSE (270) 16
    KW_ENDIF (271) 15 16
    KW_FOR (272) 17
    KW_IN (273) 17
    KW_ENDFOR (274) 17
    KW_WHILE (275) 18
    KW_ENDWHILE (276) 18
    KW_BREAK (277) 19
    KW_CONTINUE (278) 20
    KW_NOT (279)
    KW_AND (280)
    KW_OR (281)
    KW_DEF (282) 4 5
    KW_ENDDEF (283) 4 5
    KW_MAIN (284) 5
    KW_RETURN (285) 14 23
    KW_COMP (286)
    KW_ENDCOMP (287)
    KW_OF (288)
    OP_ASSIGN (289) 12
    OP_PLUSEQ (290)
    OP_MINUSEQ (291)
    OP_MULTEQ (292)
    OP_DIVEQ (293)
    OP_MODEQ (294)
    OP_DEFINE (295)
    OP_EQ (296) 34
    OP_NEQ (297) 35
    OP_LT (298) 33
    OP_LEQ (299) 37
    OP_GT (300) 32
    OP_GEQ (301) 36
    OP_PLUS (302) 30
    OP_MINUS (303)
    OP_MULT (304) 31
    OP_DIV (305)
    OP_MOD (306)
    OP_POW (307)
    LPAREN (308) 4 5 13 15 16 18 38
    RPAREN (309) 4 5 13 15 16 18 38
    LBRACKET (310) 17
    RBRACKET (311) 17
    COLON (312) 4 5 15 16 17 18 21
    SEMICOLON (313) 4 5 12 13 14 15 16 17 18 19 20 21 22 23
    COMMA (314)
    DOT (315)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    program (62)
        on left: 1
        on right: 0
    function_list <string> (63)
        on left: 2 3
        on right: 1 3
    function <string> (64)
        on left: 4
        on right: 3
    main_function <string> (65)
        on left: 5
        on right: 1
    stmt_list <string> (66)
        on left: 6 7
        on right: 4 5 7 15 16 17 18
    type <string> (67)
        on left: 8 9 10 11
        on right: 21
    stmt <string> (68)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 7
    expression <string> (69)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
        on right: 12 13 14 15 16 17 18 30 31 32 33 34 35 36 37 38


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (function_list)

    program        go to state 1
    function_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: function_list • main_function
    3 function_list: function_list • function

    KW_DEF  shift, and go to state 4

    function       go to state 5
    main_function  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 function: KW_DEF • IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON
    5 main_function: KW_DEF • KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 7
    KW_MAIN     shift, and go to state 8


State 5

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 6

    1 program: function_list main_function •

    $default  reduce using rule 1 (program)


State 7

    4 function: KW_DEF IDENTIFIER • LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 9


State 8

    5 main_function: KW_DEF KW_MAIN • LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 10


State 9

    4 function: KW_DEF IDENTIFIER LPAREN • RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 11


State 10

    5 main_function: KW_DEF KW_MAIN LPAREN • RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 12


State 11

    4 function: KW_DEF IDENTIFIER LPAREN RPAREN • COLON stmt_list KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 13


State 12

    5 main_function: KW_DEF KW_MAIN LPAREN RPAREN • COLON stmt_list KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 14


State 13

    4 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON • stmt_list KW_ENDDEF SEMICOLON

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 15


State 14

    5 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON • stmt_list KW_ENDDEF SEMICOLON

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 16


State 15

    4 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list • KW_ENDDEF SEMICOLON
    7 stmt_list: stmt_list • stmt

    IDENTIFIER   shift, and go to state 17
    KW_IF        shift, and go to state 18
    KW_FOR       shift, and go to state 19
    KW_WHILE     shift, and go to state 20
    KW_BREAK     shift, and go to state 21
    KW_CONTINUE  shift, and go to state 22
    KW_ENDDEF    shift, and go to state 23
    KW_RETURN    shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    stmt  go to state 26


State 16

    5 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list • KW_ENDDEF SEMICOLON
    7 stmt_list: stmt_list • stmt

    IDENTIFIER   shift, and go to state 17
    KW_IF        shift, and go to state 18
    KW_FOR       shift, and go to state 19
    KW_WHILE     shift, and go to state 20
    KW_BREAK     shift, and go to state 21
    KW_CONTINUE  shift, and go to state 22
    KW_ENDDEF    shift, and go to state 27
    KW_RETURN    shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    stmt  go to state 26


State 17

   12 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
   13     | IDENTIFIER • LPAREN expression RPAREN SEMICOLON
   21     | IDENTIFIER • COLON type SEMICOLON

    OP_ASSIGN  shift, and go to state 28
    LPAREN     shift, and go to state 29
    COLON      shift, and go to state 30


State 18

   15 stmt: KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   16     | KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    LPAREN  shift, and go to state 31


State 19

   17 stmt: KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER  shift, and go to state 32


State 20

   18 stmt: KW_WHILE • LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON

    LPAREN  shift, and go to state 33


State 21

   19 stmt: KW_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 34


State 22

   20 stmt: KW_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 35


State 23

    4 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 36


State 24

   14 stmt: KW_RETURN • expression SEMICOLON
   23     | KW_RETURN • SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43
    SEMICOLON         shift, and go to state 44

    expression  go to state 45


State 25

   22 stmt: SEMICOLON •

    $default  reduce using rule 22 (stmt)


State 26

    7 stmt_list: stmt_list stmt •

    $default  reduce using rule 7 (stmt_list)


State 27

    5 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 46


State 28

   12 stmt: IDENTIFIER OP_ASSIGN • expression SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 47


State 29

   13 stmt: IDENTIFIER LPAREN • expression RPAREN SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 48


State 30

   21 stmt: IDENTIFIER COLON • type SEMICOLON

    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOL     shift, and go to state 52

    type  go to state 53


State 31

   15 stmt: KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   16     | KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 54


State 32

   17 stmt: KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 55


State 33

   18 stmt: KW_WHILE LPAREN • expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 56


State 34

   19 stmt: KW_BREAK SEMICOLON •

    $default  reduce using rule 19 (stmt)


State 35

   20 stmt: KW_CONTINUE SEMICOLON •

    $default  reduce using rule 20 (stmt)


State 36

    4 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON •

    $default  reduce using rule 4 (function)


State 37

   29 expression: IDENTIFIER •

    $default  reduce using rule 29 (expression)


State 38

   24 expression: CONST_INT •

    $default  reduce using rule 24 (expression)


State 39

   25 expression: CONST_FLOAT •

    $default  reduce using rule 25 (expression)


State 40

   26 expression: CONST_STRING •

    $default  reduce using rule 26 (expression)


State 41

   27 expression: CONST_BOOL_TRUE •

    $default  reduce using rule 27 (expression)


State 42

   28 expression: CONST_BOOL_FALSE •

    $default  reduce using rule 28 (expression)


State 43

   38 expression: LPAREN • expression RPAREN

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 57


State 44

   23 stmt: KW_RETURN SEMICOLON •

    $default  reduce using rule 23 (stmt)


State 45

   14 stmt: KW_RETURN expression • SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ      shift, and go to state 58
    OP_NEQ     shift, and go to state 59
    OP_LT      shift, and go to state 60
    OP_LEQ     shift, and go to state 61
    OP_GT      shift, and go to state 62
    OP_GEQ     shift, and go to state 63
    OP_PLUS    shift, and go to state 64
    OP_MULT    shift, and go to state 65
    SEMICOLON  shift, and go to state 66


State 46

    5 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON •

    $default  reduce using rule 5 (main_function)


State 47

   12 stmt: IDENTIFIER OP_ASSIGN expression • SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ      shift, and go to state 58
    OP_NEQ     shift, and go to state 59
    OP_LT      shift, and go to state 60
    OP_LEQ     shift, and go to state 61
    OP_GT      shift, and go to state 62
    OP_GEQ     shift, and go to state 63
    OP_PLUS    shift, and go to state 64
    OP_MULT    shift, and go to state 65
    SEMICOLON  shift, and go to state 67


State 48

   13 stmt: IDENTIFIER LPAREN expression • RPAREN SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ    shift, and go to state 58
    OP_NEQ   shift, and go to state 59
    OP_LT    shift, and go to state 60
    OP_LEQ   shift, and go to state 61
    OP_GT    shift, and go to state 62
    OP_GEQ   shift, and go to state 63
    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65
    RPAREN   shift, and go to state 68


State 49

    8 type: KW_INTEGER •

    $default  reduce using rule 8 (type)


State 50

    9 type: KW_SCALAR •

    $default  reduce using rule 9 (type)


State 51

   10 type: KW_STR •

    $default  reduce using rule 10 (type)


State 52

   11 type: KW_BOOL •

    $default  reduce using rule 11 (type)


State 53

   21 stmt: IDENTIFIER COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 69


State 54

   15 stmt: KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   16     | KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ    shift, and go to state 58
    OP_NEQ   shift, and go to state 59
    OP_LT    shift, and go to state 60
    OP_LEQ   shift, and go to state 61
    OP_GT    shift, and go to state 62
    OP_GEQ   shift, and go to state 63
    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65
    RPAREN   shift, and go to state 70


State 55

   17 stmt: KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    LBRACKET  shift, and go to state 71


State 56

   18 stmt: KW_WHILE LPAREN expression • RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ    shift, and go to state 58
    OP_NEQ   shift, and go to state 59
    OP_LT    shift, and go to state 60
    OP_LEQ   shift, and go to state 61
    OP_GT    shift, and go to state 62
    OP_GEQ   shift, and go to state 63
    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65
    RPAREN   shift, and go to state 72


State 57

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression
   38           | LPAREN expression • RPAREN

    OP_EQ    shift, and go to state 58
    OP_NEQ   shift, and go to state 59
    OP_LT    shift, and go to state 60
    OP_LEQ   shift, and go to state 61
    OP_GT    shift, and go to state 62
    OP_GEQ   shift, and go to state 63
    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65
    RPAREN   shift, and go to state 73


State 58

   34 expression: expression OP_EQ • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 74


State 59

   35 expression: expression OP_NEQ • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 75


State 60

   33 expression: expression OP_LT • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 76


State 61

   37 expression: expression OP_LEQ • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 77


State 62

   32 expression: expression OP_GT • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 78


State 63

   36 expression: expression OP_GEQ • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 79


State 64

   30 expression: expression OP_PLUS • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 80


State 65

   31 expression: expression OP_MULT • expression

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 81


State 66

   14 stmt: KW_RETURN expression SEMICOLON •

    $default  reduce using rule 14 (stmt)


State 67

   12 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 68

   13 stmt: IDENTIFIER LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 69

   21 stmt: IDENTIFIER COLON type SEMICOLON •

    $default  reduce using rule 21 (stmt)


State 70

   15 stmt: KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ENDIF SEMICOLON
   16     | KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 83


State 71

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 84


State 72

   18 stmt: KW_WHILE LPAREN expression RPAREN • COLON stmt_list KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 85


State 73

   38 expression: LPAREN expression RPAREN •

    $default  reduce using rule 38 (expression)


State 74

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   34           | expression OP_EQ expression •
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65

    $default  reduce using rule 34 (expression)


State 75

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   35           | expression OP_NEQ expression •
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65

    $default  reduce using rule 35 (expression)


State 76

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   33           | expression OP_LT expression •
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65

    $default  reduce using rule 33 (expression)


State 77

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression
   37           | expression OP_LEQ expression •

    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65

    $default  reduce using rule 37 (expression)


State 78

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   32           | expression OP_GT expression •
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65

    $default  reduce using rule 32 (expression)


State 79

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   36           | expression OP_GEQ expression •
   37           | expression • OP_LEQ expression

    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65

    $default  reduce using rule 36 (expression)


State 80

   30 expression: expression • OP_PLUS expression
   30           | expression OP_PLUS expression •
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_MULT  shift, and go to state 65

    $default  reduce using rule 30 (expression)


State 81

   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   31           | expression OP_MULT expression •
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    $default  reduce using rule 31 (expression)


State 82

   13 stmt: IDENTIFIER LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 13 (stmt)


State 83

   15 stmt: KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ENDIF SEMICOLON
   16     | KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 86


State 84

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ    shift, and go to state 58
    OP_NEQ   shift, and go to state 59
    OP_LT    shift, and go to state 60
    OP_LEQ   shift, and go to state 61
    OP_GT    shift, and go to state 62
    OP_GEQ   shift, and go to state 63
    OP_PLUS  shift, and go to state 64
    OP_MULT  shift, and go to state 65
    COLON    shift, and go to state 87


State 85

   18 stmt: KW_WHILE LPAREN expression RPAREN COLON • stmt_list KW_ENDWHILE SEMICOLON

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 88


State 86

    7 stmt_list: stmt_list • stmt
   15 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ENDIF SEMICOLON
   16     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    IDENTIFIER   shift, and go to state 17
    KW_IF        shift, and go to state 18
    KW_ELSE      shift, and go to state 89
    KW_ENDIF     shift, and go to state 90
    KW_FOR       shift, and go to state 19
    KW_WHILE     shift, and go to state 20
    KW_BREAK     shift, and go to state 21
    KW_CONTINUE  shift, and go to state 22
    KW_RETURN    shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    stmt  go to state 26


State 87

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER        shift, and go to state 37
    CONST_INT         shift, and go to state 38
    CONST_FLOAT       shift, and go to state 39
    CONST_STRING      shift, and go to state 40
    CONST_BOOL_TRUE   shift, and go to state 41
    CONST_BOOL_FALSE  shift, and go to state 42
    LPAREN            shift, and go to state 43

    expression  go to state 91


State 88

    7 stmt_list: stmt_list • stmt
   18 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list • KW_ENDWHILE SEMICOLON

    IDENTIFIER   shift, and go to state 17
    KW_IF        shift, and go to state 18
    KW_FOR       shift, and go to state 19
    KW_WHILE     shift, and go to state 20
    KW_ENDWHILE  shift, and go to state 92
    KW_BREAK     shift, and go to state 21
    KW_CONTINUE  shift, and go to state 22
    KW_RETURN    shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    stmt  go to state 26


State 89

   16 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE • COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 93


State 90

   15 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 91

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   30 expression: expression • OP_PLUS expression
   31           | expression • OP_MULT expression
   32           | expression • OP_GT expression
   33           | expression • OP_LT expression
   34           | expression • OP_EQ expression
   35           | expression • OP_NEQ expression
   36           | expression • OP_GEQ expression
   37           | expression • OP_LEQ expression

    OP_EQ     shift, and go to state 58
    OP_NEQ    shift, and go to state 59
    OP_LT     shift, and go to state 60
    OP_LEQ    shift, and go to state 61
    OP_GT     shift, and go to state 62
    OP_GEQ    shift, and go to state 63
    OP_PLUS   shift, and go to state 64
    OP_MULT   shift, and go to state 65
    RBRACKET  shift, and go to state 95


State 92

   18 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE • SEMICOLON

    SEMICOLON  shift, and go to state 96


State 93

   16 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON • stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 97


State 94

   15 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 15 (stmt)


State 95

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 98


State 96

   18 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •

    $default  reduce using rule 18 (stmt)


State 97

    7 stmt_list: stmt_list • stmt
   16 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list • KW_ENDIF SEMICOLON

    IDENTIFIER   shift, and go to state 17
    KW_IF        shift, and go to state 18
    KW_ENDIF     shift, and go to state 99
    KW_FOR       shift, and go to state 19
    KW_WHILE     shift, and go to state 20
    KW_BREAK     shift, and go to state 21
    KW_CONTINUE  shift, and go to state 22
    KW_RETURN    shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    stmt  go to state 26


State 98

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 6 (stmt_list)

    stmt_list  go to state 100


State 99

   16 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 101


State 100

    7 stmt_list: stmt_list • stmt
   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON

    IDENTIFIER   shift, and go to state 17
    KW_IF        shift, and go to state 18
    KW_FOR       shift, and go to state 19
    KW_ENDFOR    shift, and go to state 102
    KW_WHILE     shift, and go to state 20
    KW_BREAK     shift, and go to state 21
    KW_CONTINUE  shift, and go to state 22
    KW_RETURN    shift, and go to state 24
    SEMICOLON    shift, and go to state 25

    stmt  go to state 26


State 101

   16 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 16 (stmt)


State 102

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 103

   17 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 17 (stmt)
