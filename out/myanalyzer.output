Terminals unused in grammar

    KW_OF


State 76 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 144 conflicts: 7 shift/reduce
State 168 conflicts: 1 shift/reduce
State 176 conflicts: 4 shift/reduce
State 242 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: macro_def_list top_level_list

    2 macro_def_list: ε
    3               | macro_def_list macro_def

    4 macro_def: KW_DEFMACRO IDENTIFIER CONST_FLOAT

    5 top_level_list: ε
    6               | top_level_list top_level

    7 top_level: function
    8          | main_function
    9          | component
   10          | var_declaration
   11          | const_declaration

   12 var_declaration: ident_list COLON type SEMICOLON
   13                | ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON

   17 param_list: ε
   18           | param_decl_list

   19 param_decl_list: IDENTIFIER COLON type
   20                | param_decl_list COMMA IDENTIFIER COLON type

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON

   22 stmt_list: ε
   23          | stmt_list stmt

   24 type: KW_INTEGER
   25     | KW_SCALAR
   26     | KW_STR
   27     | KW_BOOL
   28     | IDENTIFIER

   29 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | expression OP_ASSIGN expression SEMICOLON
   31     | IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | KW_RETURN expression SEMICOLON
   34     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | KW_BREAK SEMICOLON
   39     | KW_CONTINUE SEMICOLON
   40     | SEMICOLON
   41     | KW_RETURN SEMICOLON
   42     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | expression OP_PLUSEQ expression SEMICOLON
   55     | expression OP_MINUSEQ expression SEMICOLON
   56     | expression OP_MULTEQ expression SEMICOLON
   57     | expression OP_DIVEQ expression SEMICOLON
   58     | expression OP_MODEQ expression SEMICOLON
   59     | expression SEMICOLON
   60     | error SEMICOLON

   61 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

   62 component_body: ε
   63               | component_body component_member

   64 component_member: hash_ident_list COLON type SEMICOLON
   65                 | hash_ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   66                 | function

   67 hash_ident_list: HASH IDENTIFIER
   68                | hash_ident_list COMMA HASH IDENTIFIER

   69 ident_list: IDENTIFIER
   70           | ident_list COMMA IDENTIFIER

   71 arg_list: ε
   72         | expression
   73         | arg_list COMMA expression

   74 expression: primary_expression
   75           | expression OP_PLUS expression
   76           | expression OP_MINUS expression
   77           | expression OP_MULT expression
   78           | expression OP_DIV expression
   79           | expression OP_MOD expression
   80           | expression OP_POW expression
   81           | expression OP_EQ expression
   82           | expression OP_NEQ expression
   83           | expression OP_LT expression
   84           | expression OP_LEQ expression
   85           | expression OP_GT expression
   86           | expression OP_GEQ expression
   87           | expression KW_AND expression
   88           | expression KW_OR expression
   89           | KW_NOT expression
   90           | OP_MINUS expression
   91           | LPAREN expression RPAREN
   92           | expression DOT IDENTIFIER
   93           | expression LBRACKET expression RBRACKET
   94           | expression LPAREN arg_list RPAREN
   95           | expression LPAREN RPAREN

   96 primary_expression: CONST_INT
   97                   | CONST_FLOAT
   98                   | CONST_STRING
   99                   | CONST_BOOL_TRUE
  100                   | CONST_BOOL_FALSE
  101                   | IDENTIFIER
  102                   | HASH IDENTIFIER

  103 block: decl_list stmt_list

  104 decl_list: ε
  105          | decl_list var_declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256) 60
    IDENTIFIER <string> (258) 4 14 15 16 19 20 28 29 31 32 36 37 42 44 45 46 47 48 49 50 51 52 53 61 67 68 69 70 92 101 102
    CONST_INT <string> (259) 13 65 96
    CONST_FLOAT <string> (260) 4 97
    CONST_STRING <string> (261) 98
    CONST_BOOL_TRUE (262) 99
    CONST_BOOL_FALSE (263) 100
    KW_INTEGER (264) 24
    KW_SCALAR (265) 25
    KW_STR (266) 26
    KW_BOOL (267) 27
    KW_CONST (268) 14
    KW_IF (269) 34 35
    KW_ELSE (270) 35
    KW_ENDIF (271) 34 35
    KW_FOR (272) 36 37 42
    KW_IN (273) 36 37
    KW_ENDFOR (274) 36 37
    KW_WHILE (275) 43
    KW_ENDWHILE (276) 43
    KW_BREAK (277) 38
    KW_CONTINUE (278) 39
    KW_NOT (279) 89
    KW_AND (280) 87
    KW_OR (281) 88
    KW_DEF (282) 15 16 21
    KW_ENDDEF (283) 15 16 21
    KW_MAIN (284) 21
    KW_RETURN (285) 33 41
    KW_COMP (286) 61
    KW_ENDCOMP (287) 61
    KW_OF (288)
    KW_DEFMACRO (289) 4
    OP_ASSIGN (290) 14 29 30 49
    OP_PLUSEQ (291) 44 50 54
    OP_MINUSEQ (292) 45 51 55
    OP_MULTEQ (293) 46 56
    OP_DIVEQ (294) 47 57
    OP_MODEQ (295) 48 58
    OP_DEFINE (296) 42
    OP_POW (297) 80
    OP_EQ (298) 81
    OP_NEQ (299) 82
    OP_LT (300) 83
    OP_LEQ (301) 84
    OP_GT (302) 85
    OP_GEQ (303) 86
    OP_PLUS (304) 75
    OP_MINUS (305) 76 90
    OP_MULT (306) 77
    OP_DIV (307) 78
    OP_MOD (308) 79
    LPAREN (309) 15 16 21 31 32 34 35 43 52 53 91 94 95
    RPAREN (310) 15 16 21 31 32 34 35 43 52 53 91 94 95
    LBRACKET (311) 13 36 37 42 65 93
    RBRACKET (312) 13 36 37 42 65 93
    COLON (313) 12 13 14 15 16 19 20 21 34 35 36 37 42 43 61 64 65
    SEMICOLON (314) 12 13 14 15 16 21 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 64 65
    COMMA (315) 20 68 70 73
    DOT (316) 52 53 92
    OP_ARROW (317) 15
    HASH (318) 49 50 51 52 53 67 68 102
    UMINUS (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program <string> (66)
        on left: 1
        on right: 0
    macro_def_list <string> (67)
        on left: 2 3
        on right: 1 3
    macro_def <string> (68)
        on left: 4
        on right: 3
    top_level_list <string> (69)
        on left: 5 6
        on right: 1 6
    top_level <string> (70)
        on left: 7 8 9 10 11
        on right: 6
    var_declaration <string> (71)
        on left: 12 13
        on right: 10 105
    const_declaration <string> (72)
        on left: 14
        on right: 11
    function <string> (73)
        on left: 15 16
        on right: 7 66
    param_list <string> (74)
        on left: 17 18
        on right: 15 16
    param_decl_list <string> (75)
        on left: 19 20
        on right: 18 20
    main_function <string> (76)
        on left: 21
        on right: 8
    stmt_list <string> (77)
        on left: 22 23
        on right: 23 34 35 36 37 43 103
    type <string> (78)
        on left: 24 25 26 27 28
        on right: 12 13 14 15 19 20 42 64 65
    stmt <string> (79)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 23
    component <string> (80)
        on left: 61
        on right: 9
    component_body <string> (81)
        on left: 62 63
        on right: 61 63
    component_member <string> (82)
        on left: 64 65 66
        on right: 63
    hash_ident_list <string> (83)
        on left: 67 68
        on right: 64 65 68
    ident_list <string> (84)
        on left: 69 70
        on right: 12 13 70
    arg_list <string> (85)
        on left: 71 72 73
        on right: 32 53 73 94
    expression <string> (86)
        on left: 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
        on right: 14 29 30 33 34 35 36 37 42 43 44 45 46 47 48 49 50 51 54 55 56 57 58 59 72 73 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    primary_expression <string> (87)
        on left: 96 97 98 99 100 101 102
        on right: 74
    block <string> (88)
        on left: 103
        on right: 15 16 21
    decl_list <string> (89)
        on left: 104 105
        on right: 103 105


State 0

    0 $accept: • program $end
    1 program: • macro_def_list top_level_list
    2 macro_def_list: ε •
    3               | • macro_def_list macro_def

    $default  reduce using rule 2 (macro_def_list)

    program         go to state 1
    macro_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: macro_def_list • top_level_list
    3 macro_def_list: macro_def_list • macro_def
    4 macro_def: • KW_DEFMACRO IDENTIFIER CONST_FLOAT
    5 top_level_list: ε •  [$end, IDENTIFIER, KW_CONST, KW_DEF, KW_COMP]
    6               | • top_level_list top_level

    KW_DEFMACRO  shift, and go to state 4

    $default  reduce using rule 5 (top_level_list)

    macro_def       go to state 5
    top_level_list  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 macro_def: KW_DEFMACRO • IDENTIFIER CONST_FLOAT

    IDENTIFIER  shift, and go to state 7


State 5

    3 macro_def_list: macro_def_list macro_def •

    $default  reduce using rule 3 (macro_def_list)


State 6

    1 program: macro_def_list top_level_list •  [$end]
    6 top_level_list: top_level_list • top_level
    7 top_level: • function
    8          | • main_function
    9          | • component
   10          | • var_declaration
   11          | • const_declaration
   12 var_declaration: • ident_list COLON type SEMICOLON
   13                | • ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   14 const_declaration: • KW_CONST IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON
   15 function: • KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | • KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   21 main_function: • KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON
   61 component: • KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON
   69 ident_list: • IDENTIFIER
   70           | • ident_list COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 8
    KW_CONST    shift, and go to state 9
    KW_DEF      shift, and go to state 10
    KW_COMP     shift, and go to state 11

    $default  reduce using rule 1 (program)

    top_level          go to state 12
    var_declaration    go to state 13
    const_declaration  go to state 14
    function           go to state 15
    main_function      go to state 16
    component          go to state 17
    ident_list         go to state 18


State 7

    4 macro_def: KW_DEFMACRO IDENTIFIER • CONST_FLOAT

    CONST_FLOAT  shift, and go to state 19


State 8

   69 ident_list: IDENTIFIER •

    $default  reduce using rule 69 (ident_list)


State 9

   14 const_declaration: KW_CONST • IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 20


State 10

   15 function: KW_DEF • IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF • IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   21 main_function: KW_DEF • KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 21
    KW_MAIN     shift, and go to state 22


State 11

   61 component: KW_COMP • IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

    IDENTIFIER  shift, and go to state 23


State 12

    6 top_level_list: top_level_list top_level •

    $default  reduce using rule 6 (top_level_list)


State 13

   10 top_level: var_declaration •

    $default  reduce using rule 10 (top_level)


State 14

   11 top_level: const_declaration •

    $default  reduce using rule 11 (top_level)


State 15

    7 top_level: function •

    $default  reduce using rule 7 (top_level)


State 16

    8 top_level: main_function •

    $default  reduce using rule 8 (top_level)


State 17

    9 top_level: component •

    $default  reduce using rule 9 (top_level)


State 18

   12 var_declaration: ident_list • COLON type SEMICOLON
   13                | ident_list • LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   70 ident_list: ident_list • COMMA IDENTIFIER

    LBRACKET  shift, and go to state 24
    COLON     shift, and go to state 25
    COMMA     shift, and go to state 26


State 19

    4 macro_def: KW_DEFMACRO IDENTIFIER CONST_FLOAT •

    $default  reduce using rule 4 (macro_def)


State 20

   14 const_declaration: KW_CONST IDENTIFIER • OP_ASSIGN expression COLON type SEMICOLON

    OP_ASSIGN  shift, and go to state 27


State 21

   15 function: KW_DEF IDENTIFIER • LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER • LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 28


State 22

   21 main_function: KW_DEF KW_MAIN • LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 29


State 23

   61 component: KW_COMP IDENTIFIER • COLON component_body KW_ENDCOMP SEMICOLON

    COLON  shift, and go to state 30


State 24

   13 var_declaration: ident_list LBRACKET • CONST_INT RBRACKET COLON type SEMICOLON

    CONST_INT  shift, and go to state 31


State 25

   12 var_declaration: ident_list COLON • type SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 37


State 26

   70 ident_list: ident_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 38


State 27

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN • expression COLON type SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 49
    primary_expression  go to state 50


State 28

   15 function: KW_DEF IDENTIFIER LPAREN • param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN • param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   17 param_list: ε •  [RPAREN]
   18           | • param_decl_list
   19 param_decl_list: • IDENTIFIER COLON type
   20                | • param_decl_list COMMA IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 17 (param_list)

    param_list       go to state 52
    param_decl_list  go to state 53


State 29

   21 main_function: KW_DEF KW_MAIN LPAREN • RPAREN COLON block KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 54


State 30

   61 component: KW_COMP IDENTIFIER COLON • component_body KW_ENDCOMP SEMICOLON
   62 component_body: ε •
   63               | • component_body component_member

    $default  reduce using rule 62 (component_body)

    component_body  go to state 55


State 31

   13 var_declaration: ident_list LBRACKET CONST_INT • RBRACKET COLON type SEMICOLON

    RBRACKET  shift, and go to state 56


State 32

   28 type: IDENTIFIER •

    $default  reduce using rule 28 (type)


State 33

   24 type: KW_INTEGER •

    $default  reduce using rule 24 (type)


State 34

   25 type: KW_SCALAR •

    $default  reduce using rule 25 (type)


State 35

   26 type: KW_STR •

    $default  reduce using rule 26 (type)


State 36

   27 type: KW_BOOL •

    $default  reduce using rule 27 (type)


State 37

   12 var_declaration: ident_list COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 38

   70 ident_list: ident_list COMMA IDENTIFIER •

    $default  reduce using rule 70 (ident_list)


State 39

  101 primary_expression: IDENTIFIER •

    $default  reduce using rule 101 (primary_expression)


State 40

   96 primary_expression: CONST_INT •

    $default  reduce using rule 96 (primary_expression)


State 41

   97 primary_expression: CONST_FLOAT •

    $default  reduce using rule 97 (primary_expression)


State 42

   98 primary_expression: CONST_STRING •

    $default  reduce using rule 98 (primary_expression)


State 43

   99 primary_expression: CONST_BOOL_TRUE •

    $default  reduce using rule 99 (primary_expression)


State 44

  100 primary_expression: CONST_BOOL_FALSE •

    $default  reduce using rule 100 (primary_expression)


State 45

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   89           | KW_NOT • expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 58
    primary_expression  go to state 50


State 46

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   90           | OP_MINUS • expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 59
    primary_expression  go to state 50


State 47

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   91           | LPAREN • expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 60
    primary_expression  go to state 50


State 48

  102 primary_expression: HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 61


State 49

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression • COLON type SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    COLON     shift, and go to state 78
    DOT       shift, and go to state 79


State 50

   74 expression: primary_expression •

    $default  reduce using rule 74 (expression)


State 51

   19 param_decl_list: IDENTIFIER • COLON type

    COLON  shift, and go to state 80


State 52

   15 function: KW_DEF IDENTIFIER LPAREN param_list • RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN param_list • RPAREN COLON block KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 81


State 53

   18 param_list: param_decl_list •  [RPAREN]
   20 param_decl_list: param_decl_list • COMMA IDENTIFIER COLON type

    COMMA  shift, and go to state 82

    $default  reduce using rule 18 (param_list)


State 54

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN • COLON block KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 83


State 55

   15 function: • KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | • KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   61 component: KW_COMP IDENTIFIER COLON component_body • KW_ENDCOMP SEMICOLON
   63 component_body: component_body • component_member
   64 component_member: • hash_ident_list COLON type SEMICOLON
   65                 | • hash_ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   66                 | • function
   67 hash_ident_list: • HASH IDENTIFIER
   68                | • hash_ident_list COMMA HASH IDENTIFIER

    KW_DEF      shift, and go to state 84
    KW_ENDCOMP  shift, and go to state 85
    HASH        shift, and go to state 86

    function          go to state 87
    component_member  go to state 88
    hash_ident_list   go to state 89


State 56

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 90


State 57

   12 var_declaration: ident_list COLON type SEMICOLON •

    $default  reduce using rule 12 (var_declaration)


State 58

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   89           | KW_NOT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 89 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 89 and token OP_POW resolved as shift (KW_NOT < OP_POW).
    Conflict between rule 89 and token OP_EQ resolved as shift (KW_NOT < OP_EQ).
    Conflict between rule 89 and token OP_NEQ resolved as shift (KW_NOT < OP_NEQ).
    Conflict between rule 89 and token OP_LT resolved as shift (KW_NOT < OP_LT).
    Conflict between rule 89 and token OP_LEQ resolved as shift (KW_NOT < OP_LEQ).
    Conflict between rule 89 and token OP_GT resolved as shift (KW_NOT < OP_GT).
    Conflict between rule 89 and token OP_GEQ resolved as shift (KW_NOT < OP_GEQ).
    Conflict between rule 89 and token OP_PLUS resolved as shift (KW_NOT < OP_PLUS).
    Conflict between rule 89 and token OP_MINUS resolved as shift (KW_NOT < OP_MINUS).
    Conflict between rule 89 and token OP_MULT resolved as shift (KW_NOT < OP_MULT).
    Conflict between rule 89 and token OP_DIV resolved as shift (KW_NOT < OP_DIV).
    Conflict between rule 89 and token OP_MOD resolved as shift (KW_NOT < OP_MOD).
    Conflict between rule 89 and token LPAREN resolved as shift (KW_NOT < LPAREN).
    Conflict between rule 89 and token LBRACKET resolved as shift (KW_NOT < LBRACKET).
    Conflict between rule 89 and token DOT resolved as shift (KW_NOT < DOT).


State 59

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   90           | OP_MINUS expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    $default  reduce using rule 90 (expression)

    Conflict between rule 90 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 90 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 90 and token OP_POW resolved as reduce (OP_POW < UMINUS).
    Conflict between rule 90 and token OP_EQ resolved as reduce (OP_EQ < UMINUS).
    Conflict between rule 90 and token OP_NEQ resolved as reduce (OP_NEQ < UMINUS).
    Conflict between rule 90 and token OP_LT resolved as reduce (OP_LT < UMINUS).
    Conflict between rule 90 and token OP_LEQ resolved as reduce (OP_LEQ < UMINUS).
    Conflict between rule 90 and token OP_GT resolved as reduce (OP_GT < UMINUS).
    Conflict between rule 90 and token OP_GEQ resolved as reduce (OP_GEQ < UMINUS).
    Conflict between rule 90 and token OP_PLUS resolved as reduce (OP_PLUS < UMINUS).
    Conflict between rule 90 and token OP_MINUS resolved as reduce (OP_MINUS < UMINUS).
    Conflict between rule 90 and token OP_MULT resolved as reduce (OP_MULT < UMINUS).
    Conflict between rule 90 and token OP_DIV resolved as reduce (OP_DIV < UMINUS).
    Conflict between rule 90 and token OP_MOD resolved as reduce (OP_MOD < UMINUS).
    Conflict between rule 90 and token LPAREN resolved as reduce (LPAREN < UMINUS).
    Conflict between rule 90 and token LBRACKET resolved as reduce (LBRACKET < UMINUS).
    Conflict between rule 90 and token DOT resolved as reduce (DOT < UMINUS).


State 60

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   91           | LPAREN expression • RPAREN
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    RPAREN    shift, and go to state 91
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79


State 61

  102 primary_expression: HASH IDENTIFIER •

    $default  reduce using rule 102 (primary_expression)


State 62

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   87           | expression KW_AND • expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 92
    primary_expression  go to state 50


State 63

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   88           | expression KW_OR • expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 93
    primary_expression  go to state 50


State 64

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   80           | expression OP_POW • expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 94
    primary_expression  go to state 50


State 65

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   81           | expression OP_EQ • expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 95
    primary_expression  go to state 50


State 66

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   82           | expression OP_NEQ • expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 96
    primary_expression  go to state 50


State 67

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   83           | expression OP_LT • expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 97
    primary_expression  go to state 50


State 68

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   84           | expression OP_LEQ • expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 98
    primary_expression  go to state 50


State 69

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   85           | expression OP_GT • expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 99
    primary_expression  go to state 50


State 70

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   86           | expression OP_GEQ • expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 100
    primary_expression  go to state 50


State 71

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   75           | expression OP_PLUS • expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 101
    primary_expression  go to state 50


State 72

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   76           | expression OP_MINUS • expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 102
    primary_expression  go to state 50


State 73

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   77           | expression OP_MULT • expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 103
    primary_expression  go to state 50


State 74

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   78           | expression OP_DIV • expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 104
    primary_expression  go to state 50


State 75

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   79           | expression OP_MOD • expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 105
    primary_expression  go to state 50


State 76

   71 arg_list: ε •  [RPAREN, COMMA]
   72         | • expression
   73         | • arg_list COMMA expression
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   94           | expression LPAREN • arg_list RPAREN
   95           | • expression LPAREN RPAREN
   95           | expression LPAREN • RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 106
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 71 (arg_list)]
    $default  reduce using rule 71 (arg_list)

    arg_list            go to state 107
    expression          go to state 108
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       71 arg_list: ε •
       95 expression: expression LPAREN • RPAREN
      Example: expression LPAREN • RPAREN
      Shift derivation
        expression
        ↳ 95: expression LPAREN • RPAREN
      Reduce derivation
        expression
        ↳ 94: expression LPAREN arg_list  RPAREN
                                ↳ 71: ε •



State 77

   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   93           | expression LBRACKET • expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 109
    primary_expression  go to state 50


State 78

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON • type SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 110


State 79

   92 expression: expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 111


State 80

   19 param_decl_list: IDENTIFIER COLON • type
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 112


State 81

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN • OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN param_list RPAREN • COLON block KW_ENDDEF SEMICOLON

    COLON     shift, and go to state 113
    OP_ARROW  shift, and go to state 114


State 82

   20 param_decl_list: param_decl_list COMMA • IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 115


State 83

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON • block KW_ENDDEF SEMICOLON
  103 block: • decl_list stmt_list
  104 decl_list: ε •
  105          | • decl_list var_declaration

    $default  reduce using rule 104 (decl_list)

    block      go to state 116
    decl_list  go to state 117


State 84

   15 function: KW_DEF • IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF • IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 21


State 85

   61 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP • SEMICOLON

    SEMICOLON  shift, and go to state 118


State 86

   67 hash_ident_list: HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 119


State 87

   66 component_member: function •

    $default  reduce using rule 66 (component_member)


State 88

   63 component_body: component_body component_member •

    $default  reduce using rule 63 (component_body)


State 89

   64 component_member: hash_ident_list • COLON type SEMICOLON
   65                 | hash_ident_list • LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   68 hash_ident_list: hash_ident_list • COMMA HASH IDENTIFIER

    LBRACKET  shift, and go to state 120
    COLON     shift, and go to state 121
    COMMA     shift, and go to state 122


State 90

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET COLON • type SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 123


State 91

   91 expression: LPAREN expression RPAREN •

    $default  reduce using rule 91 (expression)


State 92

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   87           | expression KW_AND expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 87 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 87 and token OP_POW resolved as shift (KW_AND < OP_POW).
    Conflict between rule 87 and token OP_EQ resolved as shift (KW_AND < OP_EQ).
    Conflict between rule 87 and token OP_NEQ resolved as shift (KW_AND < OP_NEQ).
    Conflict between rule 87 and token OP_LT resolved as shift (KW_AND < OP_LT).
    Conflict between rule 87 and token OP_LEQ resolved as shift (KW_AND < OP_LEQ).
    Conflict between rule 87 and token OP_GT resolved as shift (KW_AND < OP_GT).
    Conflict between rule 87 and token OP_GEQ resolved as shift (KW_AND < OP_GEQ).
    Conflict between rule 87 and token OP_PLUS resolved as shift (KW_AND < OP_PLUS).
    Conflict between rule 87 and token OP_MINUS resolved as shift (KW_AND < OP_MINUS).
    Conflict between rule 87 and token OP_MULT resolved as shift (KW_AND < OP_MULT).
    Conflict between rule 87 and token OP_DIV resolved as shift (KW_AND < OP_DIV).
    Conflict between rule 87 and token OP_MOD resolved as shift (KW_AND < OP_MOD).
    Conflict between rule 87 and token LPAREN resolved as shift (KW_AND < LPAREN).
    Conflict between rule 87 and token LBRACKET resolved as shift (KW_AND < LBRACKET).
    Conflict between rule 87 and token DOT resolved as shift (KW_AND < DOT).


State 93

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   88           | expression KW_OR expression •  [KW_FOR, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 88 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 88 and token OP_POW resolved as shift (KW_OR < OP_POW).
    Conflict between rule 88 and token OP_EQ resolved as shift (KW_OR < OP_EQ).
    Conflict between rule 88 and token OP_NEQ resolved as shift (KW_OR < OP_NEQ).
    Conflict between rule 88 and token OP_LT resolved as shift (KW_OR < OP_LT).
    Conflict between rule 88 and token OP_LEQ resolved as shift (KW_OR < OP_LEQ).
    Conflict between rule 88 and token OP_GT resolved as shift (KW_OR < OP_GT).
    Conflict between rule 88 and token OP_GEQ resolved as shift (KW_OR < OP_GEQ).
    Conflict between rule 88 and token OP_PLUS resolved as shift (KW_OR < OP_PLUS).
    Conflict between rule 88 and token OP_MINUS resolved as shift (KW_OR < OP_MINUS).
    Conflict between rule 88 and token OP_MULT resolved as shift (KW_OR < OP_MULT).
    Conflict between rule 88 and token OP_DIV resolved as shift (KW_OR < OP_DIV).
    Conflict between rule 88 and token OP_MOD resolved as shift (KW_OR < OP_MOD).
    Conflict between rule 88 and token LPAREN resolved as shift (KW_OR < LPAREN).
    Conflict between rule 88 and token LBRACKET resolved as shift (KW_OR < LBRACKET).
    Conflict between rule 88 and token DOT resolved as shift (KW_OR < DOT).


State 94

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   80           | expression OP_POW expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < OP_POW).
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < OP_POW).
    Conflict between rule 80 and token OP_POW resolved as shift (%right OP_POW).
    Conflict between rule 80 and token OP_EQ resolved as reduce (OP_EQ < OP_POW).
    Conflict between rule 80 and token OP_NEQ resolved as reduce (OP_NEQ < OP_POW).
    Conflict between rule 80 and token OP_LT resolved as reduce (OP_LT < OP_POW).
    Conflict between rule 80 and token OP_LEQ resolved as reduce (OP_LEQ < OP_POW).
    Conflict between rule 80 and token OP_GT resolved as reduce (OP_GT < OP_POW).
    Conflict between rule 80 and token OP_GEQ resolved as reduce (OP_GEQ < OP_POW).
    Conflict between rule 80 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POW).
    Conflict between rule 80 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POW).
    Conflict between rule 80 and token OP_MULT resolved as reduce (OP_MULT < OP_POW).
    Conflict between rule 80 and token OP_DIV resolved as reduce (OP_DIV < OP_POW).
    Conflict between rule 80 and token OP_MOD resolved as reduce (OP_MOD < OP_POW).
    Conflict between rule 80 and token LPAREN resolved as shift (OP_POW < LPAREN).
    Conflict between rule 80 and token LBRACKET resolved as shift (OP_POW < LBRACKET).
    Conflict between rule 80 and token DOT resolved as shift (OP_POW < DOT).


State 95

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   81           | expression OP_EQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < OP_EQ).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < OP_EQ).
    Conflict between rule 81 and token OP_POW resolved as shift (OP_EQ < OP_POW).
    Conflict between rule 81 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 81 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 81 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 81 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 81 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 81 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 81 and token OP_PLUS resolved as shift (OP_EQ < OP_PLUS).
    Conflict between rule 81 and token OP_MINUS resolved as shift (OP_EQ < OP_MINUS).
    Conflict between rule 81 and token OP_MULT resolved as shift (OP_EQ < OP_MULT).
    Conflict between rule 81 and token OP_DIV resolved as shift (OP_EQ < OP_DIV).
    Conflict between rule 81 and token OP_MOD resolved as shift (OP_EQ < OP_MOD).
    Conflict between rule 81 and token LPAREN resolved as shift (OP_EQ < LPAREN).
    Conflict between rule 81 and token LBRACKET resolved as shift (OP_EQ < LBRACKET).
    Conflict between rule 81 and token DOT resolved as shift (OP_EQ < DOT).


State 96

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   82           | expression OP_NEQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < OP_NEQ).
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < OP_NEQ).
    Conflict between rule 82 and token OP_POW resolved as shift (OP_NEQ < OP_POW).
    Conflict between rule 82 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 82 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 82 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 82 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 82 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 82 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 82 and token OP_PLUS resolved as shift (OP_NEQ < OP_PLUS).
    Conflict between rule 82 and token OP_MINUS resolved as shift (OP_NEQ < OP_MINUS).
    Conflict between rule 82 and token OP_MULT resolved as shift (OP_NEQ < OP_MULT).
    Conflict between rule 82 and token OP_DIV resolved as shift (OP_NEQ < OP_DIV).
    Conflict between rule 82 and token OP_MOD resolved as shift (OP_NEQ < OP_MOD).
    Conflict between rule 82 and token LPAREN resolved as shift (OP_NEQ < LPAREN).
    Conflict between rule 82 and token LBRACKET resolved as shift (OP_NEQ < LBRACKET).
    Conflict between rule 82 and token DOT resolved as shift (OP_NEQ < DOT).


State 97

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   83           | expression OP_LT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < OP_LT).
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < OP_LT).
    Conflict between rule 83 and token OP_POW resolved as shift (OP_LT < OP_POW).
    Conflict between rule 83 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 83 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 83 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 83 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 83 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 83 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 83 and token OP_PLUS resolved as shift (OP_LT < OP_PLUS).
    Conflict between rule 83 and token OP_MINUS resolved as shift (OP_LT < OP_MINUS).
    Conflict between rule 83 and token OP_MULT resolved as shift (OP_LT < OP_MULT).
    Conflict between rule 83 and token OP_DIV resolved as shift (OP_LT < OP_DIV).
    Conflict between rule 83 and token OP_MOD resolved as shift (OP_LT < OP_MOD).
    Conflict between rule 83 and token LPAREN resolved as shift (OP_LT < LPAREN).
    Conflict between rule 83 and token LBRACKET resolved as shift (OP_LT < LBRACKET).
    Conflict between rule 83 and token DOT resolved as shift (OP_LT < DOT).


State 98

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   84           | expression OP_LEQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < OP_LEQ).
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < OP_LEQ).
    Conflict between rule 84 and token OP_POW resolved as shift (OP_LEQ < OP_POW).
    Conflict between rule 84 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 84 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 84 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 84 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 84 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 84 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 84 and token OP_PLUS resolved as shift (OP_LEQ < OP_PLUS).
    Conflict between rule 84 and token OP_MINUS resolved as shift (OP_LEQ < OP_MINUS).
    Conflict between rule 84 and token OP_MULT resolved as shift (OP_LEQ < OP_MULT).
    Conflict between rule 84 and token OP_DIV resolved as shift (OP_LEQ < OP_DIV).
    Conflict between rule 84 and token OP_MOD resolved as shift (OP_LEQ < OP_MOD).
    Conflict between rule 84 and token LPAREN resolved as shift (OP_LEQ < LPAREN).
    Conflict between rule 84 and token LBRACKET resolved as shift (OP_LEQ < LBRACKET).
    Conflict between rule 84 and token DOT resolved as shift (OP_LEQ < DOT).


State 99

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   85           | expression OP_GT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 85 (expression)

    Conflict between rule 85 and token KW_AND resolved as reduce (KW_AND < OP_GT).
    Conflict between rule 85 and token KW_OR resolved as reduce (KW_OR < OP_GT).
    Conflict between rule 85 and token OP_POW resolved as shift (OP_GT < OP_POW).
    Conflict between rule 85 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 85 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 85 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 85 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 85 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 85 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 85 and token OP_PLUS resolved as shift (OP_GT < OP_PLUS).
    Conflict between rule 85 and token OP_MINUS resolved as shift (OP_GT < OP_MINUS).
    Conflict between rule 85 and token OP_MULT resolved as shift (OP_GT < OP_MULT).
    Conflict between rule 85 and token OP_DIV resolved as shift (OP_GT < OP_DIV).
    Conflict between rule 85 and token OP_MOD resolved as shift (OP_GT < OP_MOD).
    Conflict between rule 85 and token LPAREN resolved as shift (OP_GT < LPAREN).
    Conflict between rule 85 and token LBRACKET resolved as shift (OP_GT < LBRACKET).
    Conflict between rule 85 and token DOT resolved as shift (OP_GT < DOT).


State 100

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   86           | expression OP_GEQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 86 (expression)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < OP_GEQ).
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < OP_GEQ).
    Conflict between rule 86 and token OP_POW resolved as shift (OP_GEQ < OP_POW).
    Conflict between rule 86 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 86 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 86 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 86 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 86 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 86 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 86 and token OP_PLUS resolved as shift (OP_GEQ < OP_PLUS).
    Conflict between rule 86 and token OP_MINUS resolved as shift (OP_GEQ < OP_MINUS).
    Conflict between rule 86 and token OP_MULT resolved as shift (OP_GEQ < OP_MULT).
    Conflict between rule 86 and token OP_DIV resolved as shift (OP_GEQ < OP_DIV).
    Conflict between rule 86 and token OP_MOD resolved as shift (OP_GEQ < OP_MOD).
    Conflict between rule 86 and token LPAREN resolved as shift (OP_GEQ < LPAREN).
    Conflict between rule 86 and token LBRACKET resolved as shift (OP_GEQ < LBRACKET).
    Conflict between rule 86 and token DOT resolved as shift (OP_GEQ < DOT).


State 101

   75 expression: expression • OP_PLUS expression
   75           | expression OP_PLUS expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 75 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 75 and token OP_EQ resolved as reduce (OP_EQ < OP_PLUS).
    Conflict between rule 75 and token OP_NEQ resolved as reduce (OP_NEQ < OP_PLUS).
    Conflict between rule 75 and token OP_LT resolved as reduce (OP_LT < OP_PLUS).
    Conflict between rule 75 and token OP_LEQ resolved as reduce (OP_LEQ < OP_PLUS).
    Conflict between rule 75 and token OP_GT resolved as reduce (OP_GT < OP_PLUS).
    Conflict between rule 75 and token OP_GEQ resolved as reduce (OP_GEQ < OP_PLUS).
    Conflict between rule 75 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 75 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 75 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 75 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 75 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 75 and token LPAREN resolved as shift (OP_PLUS < LPAREN).
    Conflict between rule 75 and token LBRACKET resolved as shift (OP_PLUS < LBRACKET).
    Conflict between rule 75 and token DOT resolved as shift (OP_PLUS < DOT).


State 102

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   76           | expression OP_MINUS expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 76 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 76 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 76 and token OP_EQ resolved as reduce (OP_EQ < OP_MINUS).
    Conflict between rule 76 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MINUS).
    Conflict between rule 76 and token OP_LT resolved as reduce (OP_LT < OP_MINUS).
    Conflict between rule 76 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MINUS).
    Conflict between rule 76 and token OP_GT resolved as reduce (OP_GT < OP_MINUS).
    Conflict between rule 76 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MINUS).
    Conflict between rule 76 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 76 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 76 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 76 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 76 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 76 and token LPAREN resolved as shift (OP_MINUS < LPAREN).
    Conflict between rule 76 and token LBRACKET resolved as shift (OP_MINUS < LBRACKET).
    Conflict between rule 76 and token DOT resolved as shift (OP_MINUS < DOT).


State 103

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   77           | expression OP_MULT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < OP_MULT).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < OP_MULT).
    Conflict between rule 77 and token OP_POW resolved as shift (OP_MULT < OP_POW).
    Conflict between rule 77 and token OP_EQ resolved as reduce (OP_EQ < OP_MULT).
    Conflict between rule 77 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MULT).
    Conflict between rule 77 and token OP_LT resolved as reduce (OP_LT < OP_MULT).
    Conflict between rule 77 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MULT).
    Conflict between rule 77 and token OP_GT resolved as reduce (OP_GT < OP_MULT).
    Conflict between rule 77 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MULT).
    Conflict between rule 77 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 77 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MULT).
    Conflict between rule 77 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 77 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 77 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 77 and token LPAREN resolved as shift (OP_MULT < LPAREN).
    Conflict between rule 77 and token LBRACKET resolved as shift (OP_MULT < LBRACKET).
    Conflict between rule 77 and token DOT resolved as shift (OP_MULT < DOT).


State 104

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   78           | expression OP_DIV expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < OP_DIV).
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < OP_DIV).
    Conflict between rule 78 and token OP_POW resolved as shift (OP_DIV < OP_POW).
    Conflict between rule 78 and token OP_EQ resolved as reduce (OP_EQ < OP_DIV).
    Conflict between rule 78 and token OP_NEQ resolved as reduce (OP_NEQ < OP_DIV).
    Conflict between rule 78 and token OP_LT resolved as reduce (OP_LT < OP_DIV).
    Conflict between rule 78 and token OP_LEQ resolved as reduce (OP_LEQ < OP_DIV).
    Conflict between rule 78 and token OP_GT resolved as reduce (OP_GT < OP_DIV).
    Conflict between rule 78 and token OP_GEQ resolved as reduce (OP_GEQ < OP_DIV).
    Conflict between rule 78 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 78 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 78 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 78 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 78 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 78 and token LPAREN resolved as shift (OP_DIV < LPAREN).
    Conflict between rule 78 and token LBRACKET resolved as shift (OP_DIV < LBRACKET).
    Conflict between rule 78 and token DOT resolved as shift (OP_DIV < DOT).


State 105

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   79           | expression OP_MOD expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 64
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < OP_MOD).
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < OP_MOD).
    Conflict between rule 79 and token OP_POW resolved as shift (OP_MOD < OP_POW).
    Conflict between rule 79 and token OP_EQ resolved as reduce (OP_EQ < OP_MOD).
    Conflict between rule 79 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MOD).
    Conflict between rule 79 and token OP_LT resolved as reduce (OP_LT < OP_MOD).
    Conflict between rule 79 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MOD).
    Conflict between rule 79 and token OP_GT resolved as reduce (OP_GT < OP_MOD).
    Conflict between rule 79 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MOD).
    Conflict between rule 79 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 79 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 79 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 79 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 79 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 79 and token LPAREN resolved as shift (OP_MOD < LPAREN).
    Conflict between rule 79 and token LBRACKET resolved as shift (OP_MOD < LBRACKET).
    Conflict between rule 79 and token DOT resolved as shift (OP_MOD < DOT).


State 106

   95 expression: expression LPAREN RPAREN •

    $default  reduce using rule 95 (expression)


State 107

   73 arg_list: arg_list • COMMA expression
   94 expression: expression LPAREN arg_list • RPAREN

    RPAREN  shift, and go to state 124
    COMMA   shift, and go to state 125


State 108

   72 arg_list: expression •  [RPAREN, COMMA]
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 72 (arg_list)


State 109

   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   93           | expression LBRACKET expression • RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    RBRACKET  shift, and go to state 126
    DOT       shift, and go to state 79


State 110

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 127


State 111

   92 expression: expression DOT IDENTIFIER •

    $default  reduce using rule 92 (expression)


State 112

   19 param_decl_list: IDENTIFIER COLON type •

    $default  reduce using rule 19 (param_decl_list)


State 113

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON • block KW_ENDDEF SEMICOLON
  103 block: • decl_list stmt_list
  104 decl_list: ε •
  105          | • decl_list var_declaration

    $default  reduce using rule 104 (decl_list)

    block      go to state 128
    decl_list  go to state 117


State 114

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW • type COLON block KW_ENDDEF SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 129


State 115

   20 param_decl_list: param_decl_list COMMA IDENTIFIER • COLON type

    COLON  shift, and go to state 130


State 116

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block • KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 131


State 117

   12 var_declaration: • ident_list COLON type SEMICOLON
   13                | • ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   22 stmt_list: ε •  [error, IDENTIFIER, CONST_INT, CONST_FLOAT, CONST_STRING, CONST_BOOL_TRUE, CONST_BOOL_FALSE, KW_IF, KW_FOR, KW_WHILE, KW_BREAK, KW_CONTINUE, KW_NOT, KW_ENDDEF, KW_RETURN, OP_MINUS, LPAREN, SEMICOLON, HASH]
   23          | • stmt_list stmt
   69 ident_list: • IDENTIFIER
   70           | • ident_list COMMA IDENTIFIER
  103 block: decl_list • stmt_list
  105 decl_list: decl_list • var_declaration

    IDENTIFIER  shift, and go to state 8

    IDENTIFIER  [reduce using rule 22 (stmt_list)]
    $default    reduce using rule 22 (stmt_list)

    var_declaration  go to state 132
    stmt_list        go to state 133
    ident_list       go to state 18

    shift/reduce conflict on token IDENTIFIER:
       22 stmt_list: ε •
       69 ident_list: • IDENTIFIER
      First example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON decl_list • IDENTIFIER COLON type SEMICOLON stmt_list KW_ENDDEF SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                              $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list main_function
                                                     ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                           KW_ENDDEF SEMICOLON
                                                                                              ↳ 103: decl_list                                                      stmt_list
                                                                                                     ↳ 105: decl_list var_declaration
                                                                                                                      ↳ 12: ident_list         COLON type SEMICOLON
                                                                                                                            ↳ 69: • IDENTIFIER
      Second example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON decl_list • IDENTIFIER OP_ASSIGN expression SEMICOLON KW_ENDDEF SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                    $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 8: main_function
                                                          ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                            KW_ENDDEF SEMICOLON
                                                                                                   ↳ 103: decl_list stmt_list
                                                                                                                    ↳ 23: stmt_list stmt
                                                                                                                          ↳ 22: ε • ↳ 29: IDENTIFIER OP_ASSIGN expression SEMICOLON



State 118

   61 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON •

    $default  reduce using rule 61 (component)


State 119

   67 hash_ident_list: HASH IDENTIFIER •

    $default  reduce using rule 67 (hash_ident_list)


State 120

   65 component_member: hash_ident_list LBRACKET • CONST_INT RBRACKET COLON type SEMICOLON

    CONST_INT  shift, and go to state 134


State 121

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   64 component_member: hash_ident_list COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 135


State 122

   68 hash_ident_list: hash_ident_list COMMA • HASH IDENTIFIER

    HASH  shift, and go to state 136


State 123

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 137


State 124

   94 expression: expression LPAREN arg_list RPAREN •

    $default  reduce using rule 94 (expression)


State 125

   73 arg_list: arg_list COMMA • expression
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 138
    primary_expression  go to state 50


State 126

   93 expression: expression LBRACKET expression RBRACKET •

    $default  reduce using rule 93 (expression)


State 127

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON •

    $default  reduce using rule 14 (const_declaration)


State 128

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block • KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 139


State 129

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type • COLON block KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 140


State 130

   20 param_decl_list: param_decl_list COMMA IDENTIFIER COLON • type
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 141


State 131

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 142


State 132

  105 decl_list: decl_list var_declaration •

    $default  reduce using rule 105 (decl_list)


State 133

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | • expression OP_PLUSEQ expression SEMICOLON
   55     | • expression OP_MINUSEQ expression SEMICOLON
   56     | • expression OP_MULTEQ expression SEMICOLON
   57     | • expression OP_DIVEQ expression SEMICOLON
   58     | • expression OP_MODEQ expression SEMICOLON
   59     | • expression SEMICOLON
   60     | • error SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER
  103 block: decl_list stmt_list •  [KW_ENDDEF]

    error             shift, and go to state 143
    IDENTIFIER        shift, and go to state 144
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 145
    KW_FOR            shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 150
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 151
    HASH              shift, and go to state 152

    KW_ENDDEF  reduce using rule 103 (block)

    stmt                go to state 153
    expression          go to state 154
    primary_expression  go to state 50


State 134

   65 component_member: hash_ident_list LBRACKET CONST_INT • RBRACKET COLON type SEMICOLON

    RBRACKET  shift, and go to state 155


State 135

   64 component_member: hash_ident_list COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 156


State 136

   68 hash_ident_list: hash_ident_list COMMA HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 157


State 137

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 13 (var_declaration)


State 138

   73 arg_list: arg_list COMMA expression •  [RPAREN, COMMA]
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79

    $default  reduce using rule 73 (arg_list)


State 139

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 158


State 140

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON • block KW_ENDDEF SEMICOLON
  103 block: • decl_list stmt_list
  104 decl_list: ε •
  105          | • decl_list var_declaration

    $default  reduce using rule 104 (decl_list)

    block      go to state 159
    decl_list  go to state 117


State 141

   20 param_decl_list: param_decl_list COMMA IDENTIFIER COLON type •

    $default  reduce using rule 20 (param_decl_list)


State 142

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON •

    $default  reduce using rule 21 (main_function)


State 143

   60 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 160


State 144

   29 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
   31     | IDENTIFIER • LPAREN RPAREN SEMICOLON
   32     | IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON
   42     | IDENTIFIER • OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   44     | IDENTIFIER • OP_PLUSEQ expression SEMICOLON
   45     | IDENTIFIER • OP_MINUSEQ expression SEMICOLON
   46     | IDENTIFIER • OP_MULTEQ expression SEMICOLON
   47     | IDENTIFIER • OP_DIVEQ expression SEMICOLON
   48     | IDENTIFIER • OP_MODEQ expression SEMICOLON
  101 primary_expression: IDENTIFIER •  [KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, SEMICOLON, DOT]

    OP_ASSIGN   shift, and go to state 161
    OP_PLUSEQ   shift, and go to state 162
    OP_MINUSEQ  shift, and go to state 163
    OP_MULTEQ   shift, and go to state 164
    OP_DIVEQ    shift, and go to state 165
    OP_MODEQ    shift, and go to state 166
    OP_DEFINE   shift, and go to state 167
    LPAREN      shift, and go to state 168

    OP_ASSIGN   [reduce using rule 101 (primary_expression)]
    OP_PLUSEQ   [reduce using rule 101 (primary_expression)]
    OP_MINUSEQ  [reduce using rule 101 (primary_expression)]
    OP_MULTEQ   [reduce using rule 101 (primary_expression)]
    OP_DIVEQ    [reduce using rule 101 (primary_expression)]
    OP_MODEQ    [reduce using rule 101 (primary_expression)]
    LPAREN      [reduce using rule 101 (primary_expression)]
    $default    reduce using rule 101 (primary_expression)

    shift/reduce conflict on token OP_ASSIGN:
      101 primary_expression: IDENTIFIER •
       29 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Example: IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Shift derivation
        stmt
        ↳ 29: IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 30: expression                OP_ASSIGN expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 101: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      101 primary_expression: IDENTIFIER •
       31 stmt: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Example: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 31: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 59: expression                                             SEMICOLON
              ↳ 94: expression                LPAREN arg_list RPAREN
                    ↳ 74: primary_expression         ↳ 94: ε
                          ↳ 101: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      101 primary_expression: IDENTIFIER •
       32 stmt: IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON
      Example: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 32: IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON
                                  ↳ 32: ε
      Reduce derivation
        stmt
        ↳ 59: expression                                             SEMICOLON
              ↳ 94: expression                LPAREN arg_list RPAREN
                    ↳ 74: primary_expression         ↳ 94: ε
                          ↳ 101: IDENTIFIER •

    shift/reduce conflict on token OP_PLUSEQ:
      101 primary_expression: IDENTIFIER •
       44 stmt: IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Example: IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 44: IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 54: expression                OP_PLUSEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 101: IDENTIFIER •

    shift/reduce conflict on token OP_MINUSEQ:
      101 primary_expression: IDENTIFIER •
       45 stmt: IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Example: IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 45: IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 55: expression                OP_MINUSEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 101: IDENTIFIER •

    shift/reduce conflict on token OP_MULTEQ:
      101 primary_expression: IDENTIFIER •
       46 stmt: IDENTIFIER • OP_MULTEQ expression SEMICOLON
      Example: IDENTIFIER • OP_MULTEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 46: IDENTIFIER • OP_MULTEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 56: expression                OP_MULTEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 101: IDENTIFIER •

    shift/reduce conflict on token OP_DIVEQ:
      101 primary_expression: IDENTIFIER •
       47 stmt: IDENTIFIER • OP_DIVEQ expression SEMICOLON
      Example: IDENTIFIER • OP_DIVEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 47: IDENTIFIER • OP_DIVEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 57: expression                OP_DIVEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 101: IDENTIFIER •

    shift/reduce conflict on token OP_MODEQ:
      101 primary_expression: IDENTIFIER •
       48 stmt: IDENTIFIER • OP_MODEQ expression SEMICOLON
      Example: IDENTIFIER • OP_MODEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 48: IDENTIFIER • OP_MODEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 58: expression                OP_MODEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 101: IDENTIFIER •



State 145

   34 stmt: KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    LPAREN  shift, and go to state 169


State 146

   36 stmt: KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER  shift, and go to state 170


State 147

   43 stmt: KW_WHILE • LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON

    LPAREN  shift, and go to state 171


State 148

   38 stmt: KW_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 172


State 149

   39 stmt: KW_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 173


State 150

   33 stmt: KW_RETURN • expression SEMICOLON
   41     | KW_RETURN • SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 174
    HASH              shift, and go to state 48

    expression          go to state 175
    primary_expression  go to state 50


State 151

   40 stmt: SEMICOLON •

    $default  reduce using rule 40 (stmt)


State 152

   49 stmt: HASH • IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | HASH • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | HASH • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | HASH • IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | HASH • IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
  102 primary_expression: HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 176


State 153

   23 stmt_list: stmt_list stmt •

    $default  reduce using rule 23 (stmt_list)


State 154

   30 stmt: expression • OP_ASSIGN expression SEMICOLON
   54     | expression • OP_PLUSEQ expression SEMICOLON
   55     | expression • OP_MINUSEQ expression SEMICOLON
   56     | expression • OP_MULTEQ expression SEMICOLON
   57     | expression • OP_DIVEQ expression SEMICOLON
   58     | expression • OP_MODEQ expression SEMICOLON
   59     | expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND      shift, and go to state 62
    KW_OR       shift, and go to state 63
    OP_ASSIGN   shift, and go to state 177
    OP_PLUSEQ   shift, and go to state 178
    OP_MINUSEQ  shift, and go to state 179
    OP_MULTEQ   shift, and go to state 180
    OP_DIVEQ    shift, and go to state 181
    OP_MODEQ    shift, and go to state 182
    OP_POW      shift, and go to state 64
    OP_EQ       shift, and go to state 65
    OP_NEQ      shift, and go to state 66
    OP_LT       shift, and go to state 67
    OP_LEQ      shift, and go to state 68
    OP_GT       shift, and go to state 69
    OP_GEQ      shift, and go to state 70
    OP_PLUS     shift, and go to state 71
    OP_MINUS    shift, and go to state 72
    OP_MULT     shift, and go to state 73
    OP_DIV      shift, and go to state 74
    OP_MOD      shift, and go to state 75
    LPAREN      shift, and go to state 76
    LBRACKET    shift, and go to state 77
    SEMICOLON   shift, and go to state 183
    DOT         shift, and go to state 79


State 155

   65 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 184


State 156

   64 component_member: hash_ident_list COLON type SEMICOLON •

    $default  reduce using rule 64 (component_member)


State 157

   68 hash_ident_list: hash_ident_list COMMA HASH IDENTIFIER •

    $default  reduce using rule 68 (hash_ident_list)


State 158

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON •

    $default  reduce using rule 16 (function)


State 159

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block • KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 185


State 160

   60 stmt: error SEMICOLON •

    $default  reduce using rule 60 (stmt)


State 161

   29 stmt: IDENTIFIER OP_ASSIGN • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 186
    primary_expression  go to state 50


State 162

   44 stmt: IDENTIFIER OP_PLUSEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 187
    primary_expression  go to state 50


State 163

   45 stmt: IDENTIFIER OP_MINUSEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 188
    primary_expression  go to state 50


State 164

   46 stmt: IDENTIFIER OP_MULTEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 189
    primary_expression  go to state 50


State 165

   47 stmt: IDENTIFIER OP_DIVEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 190
    primary_expression  go to state 50


State 166

   48 stmt: IDENTIFIER OP_MODEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 191
    primary_expression  go to state 50


State 167

   42 stmt: IDENTIFIER OP_DEFINE • LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON

    LBRACKET  shift, and go to state 192


State 168

   31 stmt: IDENTIFIER LPAREN • RPAREN SEMICOLON
   32     | IDENTIFIER LPAREN • arg_list RPAREN SEMICOLON
   71 arg_list: ε •  [RPAREN, COMMA]
   72         | • expression
   73         | • arg_list COMMA expression
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 193
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 71 (arg_list)]
    $default  reduce using rule 71 (arg_list)

    arg_list            go to state 194
    expression          go to state 108
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       71 arg_list: ε •
       31 stmt: IDENTIFIER LPAREN • RPAREN SEMICOLON
      Example: IDENTIFIER LPAREN • RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 31: IDENTIFIER LPAREN • RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 32: IDENTIFIER LPAREN arg_list  RPAREN SEMICOLON
                                ↳ 71: ε •



State 169

   34 stmt: KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 195
    primary_expression  go to state 50


State 170

   36 stmt: KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 196


State 171

   43 stmt: KW_WHILE LPAREN • expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 197
    primary_expression  go to state 50


State 172

   38 stmt: KW_BREAK SEMICOLON •

    $default  reduce using rule 38 (stmt)


State 173

   39 stmt: KW_CONTINUE SEMICOLON •

    $default  reduce using rule 39 (stmt)


State 174

   41 stmt: KW_RETURN SEMICOLON •

    $default  reduce using rule 41 (stmt)


State 175

   33 stmt: KW_RETURN expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 198
    DOT        shift, and go to state 79


State 176

   49 stmt: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
   50     | HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
   51     | HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
   52     | HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | HASH IDENTIFIER • DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
  102 primary_expression: HASH IDENTIFIER •  [KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, SEMICOLON, DOT]

    OP_ASSIGN   shift, and go to state 199
    OP_PLUSEQ   shift, and go to state 200
    OP_MINUSEQ  shift, and go to state 201
    DOT         shift, and go to state 202

    OP_ASSIGN   [reduce using rule 102 (primary_expression)]
    OP_PLUSEQ   [reduce using rule 102 (primary_expression)]
    OP_MINUSEQ  [reduce using rule 102 (primary_expression)]
    DOT         [reduce using rule 102 (primary_expression)]
    $default    reduce using rule 102 (primary_expression)

    shift/reduce conflict on token OP_ASSIGN:
      102 primary_expression: HASH IDENTIFIER •
       49 stmt: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Example: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Shift derivation
        stmt
        ↳ 49: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 30: expression                     OP_ASSIGN expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 102: HASH IDENTIFIER •

    shift/reduce conflict on token OP_PLUSEQ:
      102 primary_expression: HASH IDENTIFIER •
       50 stmt: HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Example: HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 50: HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 54: expression                     OP_PLUSEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 102: HASH IDENTIFIER •

    shift/reduce conflict on token OP_MINUSEQ:
      102 primary_expression: HASH IDENTIFIER •
       51 stmt: HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Example: HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 51: HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 55: expression                     OP_MINUSEQ expression SEMICOLON
              ↳ 74: primary_expression
                    ↳ 102: HASH IDENTIFIER •

    shift/reduce conflict on token DOT:
      102 primary_expression: HASH IDENTIFIER •
       52 stmt: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Example: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 52: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 59: expression                                                                       SEMICOLON
              ↳ 94: expression                                          LPAREN arg_list RPAREN
                    ↳ 92: expression                     DOT IDENTIFIER        ↳ 94: ε
                          ↳ 74: primary_expression
                                ↳ 102: HASH IDENTIFIER •

    shift/reduce conflict on token DOT:
      102 primary_expression: HASH IDENTIFIER •
       53 stmt: HASH IDENTIFIER • DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
      Example: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 53: HASH IDENTIFIER • DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
                                                      ↳ 53: ε
      Reduce derivation
        stmt
        ↳ 59: expression                                                                       SEMICOLON
              ↳ 94: expression                                          LPAREN arg_list RPAREN
                    ↳ 92: expression                     DOT IDENTIFIER        ↳ 94: ε
                          ↳ 74: primary_expression
                                ↳ 102: HASH IDENTIFIER •



State 177

   30 stmt: expression OP_ASSIGN • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 203
    primary_expression  go to state 50


State 178

   54 stmt: expression OP_PLUSEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 204
    primary_expression  go to state 50


State 179

   55 stmt: expression OP_MINUSEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 205
    primary_expression  go to state 50


State 180

   56 stmt: expression OP_MULTEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 206
    primary_expression  go to state 50


State 181

   57 stmt: expression OP_DIVEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 207
    primary_expression  go to state 50


State 182

   58 stmt: expression OP_MODEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 208
    primary_expression  go to state 50


State 183

   59 stmt: expression SEMICOLON •

    $default  reduce using rule 59 (stmt)


State 184

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   65 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 209


State 185

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 210


State 186

   29 stmt: IDENTIFIER OP_ASSIGN expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 211
    DOT        shift, and go to state 79


State 187

   44 stmt: IDENTIFIER OP_PLUSEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 212
    DOT        shift, and go to state 79


State 188

   45 stmt: IDENTIFIER OP_MINUSEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 213
    DOT        shift, and go to state 79


State 189

   46 stmt: IDENTIFIER OP_MULTEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 214
    DOT        shift, and go to state 79


State 190

   47 stmt: IDENTIFIER OP_DIVEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 215
    DOT        shift, and go to state 79


State 191

   48 stmt: IDENTIFIER OP_MODEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 216
    DOT        shift, and go to state 79


State 192

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET • expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 217
    primary_expression  go to state 50


State 193

   31 stmt: IDENTIFIER LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 218


State 194

   32 stmt: IDENTIFIER LPAREN arg_list • RPAREN SEMICOLON
   73 arg_list: arg_list • COMMA expression

    RPAREN  shift, and go to state 219
    COMMA   shift, and go to state 125


State 195

   34 stmt: KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    RPAREN    shift, and go to state 220
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79


State 196

   36 stmt: KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    LBRACKET  shift, and go to state 221


State 197

   43 stmt: KW_WHILE LPAREN expression • RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    RPAREN    shift, and go to state 222
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79


State 198

   33 stmt: KW_RETURN expression SEMICOLON •

    $default  reduce using rule 33 (stmt)


State 199

   49 stmt: HASH IDENTIFIER OP_ASSIGN • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 223
    primary_expression  go to state 50


State 200

   50 stmt: HASH IDENTIFIER OP_PLUSEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 224
    primary_expression  go to state 50


State 201

   51 stmt: HASH IDENTIFIER OP_MINUSEQ • expression SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 225
    primary_expression  go to state 50


State 202

   52 stmt: HASH IDENTIFIER DOT • IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | HASH IDENTIFIER DOT • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 226


State 203

   30 stmt: expression OP_ASSIGN expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 227
    DOT        shift, and go to state 79


State 204

   54 stmt: expression OP_PLUSEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 228
    DOT        shift, and go to state 79


State 205

   55 stmt: expression OP_MINUSEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 229
    DOT        shift, and go to state 79


State 206

   56 stmt: expression OP_MULTEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 230
    DOT        shift, and go to state 79


State 207

   57 stmt: expression OP_DIVEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 231
    DOT        shift, and go to state 79


State 208

   58 stmt: expression OP_MODEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 232
    DOT        shift, and go to state 79


State 209

   65 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 233


State 210

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON •

    $default  reduce using rule 15 (function)


State 211

   29 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 29 (stmt)


State 212

   44 stmt: IDENTIFIER OP_PLUSEQ expression SEMICOLON •

    $default  reduce using rule 44 (stmt)


State 213

   45 stmt: IDENTIFIER OP_MINUSEQ expression SEMICOLON •

    $default  reduce using rule 45 (stmt)


State 214

   46 stmt: IDENTIFIER OP_MULTEQ expression SEMICOLON •

    $default  reduce using rule 46 (stmt)


State 215

   47 stmt: IDENTIFIER OP_DIVEQ expression SEMICOLON •

    $default  reduce using rule 47 (stmt)


State 216

   48 stmt: IDENTIFIER OP_MODEQ expression SEMICOLON •

    $default  reduce using rule 48 (stmt)


State 217

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression • KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_FOR    shift, and go to state 234
    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    DOT       shift, and go to state 79


State 218

   31 stmt: IDENTIFIER LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 31 (stmt)


State 219

   32 stmt: IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 235


State 220

   34 stmt: KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 236


State 221

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 237
    primary_expression  go to state 50


State 222

   43 stmt: KW_WHILE LPAREN expression RPAREN • COLON stmt_list KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 238


State 223

   49 stmt: HASH IDENTIFIER OP_ASSIGN expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 239
    DOT        shift, and go to state 79


State 224

   50 stmt: HASH IDENTIFIER OP_PLUSEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 240
    DOT        shift, and go to state 79


State 225

   51 stmt: HASH IDENTIFIER OP_MINUSEQ expression • SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 62
    KW_OR      shift, and go to state 63
    OP_POW     shift, and go to state 64
    OP_EQ      shift, and go to state 65
    OP_NEQ     shift, and go to state 66
    OP_LT      shift, and go to state 67
    OP_LEQ     shift, and go to state 68
    OP_GT      shift, and go to state 69
    OP_GEQ     shift, and go to state 70
    OP_PLUS    shift, and go to state 71
    OP_MINUS   shift, and go to state 72
    OP_MULT    shift, and go to state 73
    OP_DIV     shift, and go to state 74
    OP_MOD     shift, and go to state 75
    LPAREN     shift, and go to state 76
    LBRACKET   shift, and go to state 77
    SEMICOLON  shift, and go to state 241
    DOT        shift, and go to state 79


State 226

   52 stmt: HASH IDENTIFIER DOT IDENTIFIER • LPAREN RPAREN SEMICOLON
   53     | HASH IDENTIFIER DOT IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON

    LPAREN  shift, and go to state 242


State 227

   30 stmt: expression OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 30 (stmt)


State 228

   54 stmt: expression OP_PLUSEQ expression SEMICOLON •

    $default  reduce using rule 54 (stmt)


State 229

   55 stmt: expression OP_MINUSEQ expression SEMICOLON •

    $default  reduce using rule 55 (stmt)


State 230

   56 stmt: expression OP_MULTEQ expression SEMICOLON •

    $default  reduce using rule 56 (stmt)


State 231

   57 stmt: expression OP_DIVEQ expression SEMICOLON •

    $default  reduce using rule 57 (stmt)


State 232

   58 stmt: expression OP_MODEQ expression SEMICOLON •

    $default  reduce using rule 58 (stmt)


State 233

   65 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 65 (component_member)


State 234

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR • IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 243


State 235

   32 stmt: IDENTIFIER LPAREN arg_list RPAREN SEMICOLON •

    $default  reduce using rule 32 (stmt)


State 236

   22 stmt_list: ε •
   23          | • stmt_list stmt
   34 stmt: KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 244


State 237

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    COLON     shift, and go to state 245
    DOT       shift, and go to state 79


State 238

   22 stmt_list: ε •
   23          | • stmt_list stmt
   43 stmt: KW_WHILE LPAREN expression RPAREN COLON • stmt_list KW_ENDWHILE SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 246


State 239

   49 stmt: HASH IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 49 (stmt)


State 240

   50 stmt: HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON •

    $default  reduce using rule 50 (stmt)


State 241

   51 stmt: HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON •

    $default  reduce using rule 51 (stmt)


State 242

   52 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
   53     | HASH IDENTIFIER DOT IDENTIFIER LPAREN • arg_list RPAREN SEMICOLON
   71 arg_list: ε •  [RPAREN, COMMA]
   72         | • expression
   73         | • arg_list COMMA expression
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 247
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 71 (arg_list)]
    $default  reduce using rule 71 (arg_list)

    arg_list            go to state 248
    expression          go to state 108
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       71 arg_list: ε •
       52 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
      Example: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 52: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 53: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list  RPAREN SEMICOLON
                                                    ↳ 71: ε •



State 243

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER • COLON expression RBRACKET COLON type SEMICOLON

    COLON  shift, and go to state 249


State 244

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   34     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | • expression OP_PLUSEQ expression SEMICOLON
   55     | • expression OP_MINUSEQ expression SEMICOLON
   56     | • expression OP_MULTEQ expression SEMICOLON
   57     | • expression OP_DIVEQ expression SEMICOLON
   58     | • expression OP_MODEQ expression SEMICOLON
   59     | • expression SEMICOLON
   60     | • error SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    error             shift, and go to state 143
    IDENTIFIER        shift, and go to state 144
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 145
    KW_ELSE           shift, and go to state 250
    KW_ENDIF          shift, and go to state 251
    KW_FOR            shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 150
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 151
    HASH              shift, and go to state 152

    stmt                go to state 153
    expression          go to state 154
    primary_expression  go to state 50


State 245

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 252
    primary_expression  go to state 50


State 246

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   43     | KW_WHILE LPAREN expression RPAREN COLON stmt_list • KW_ENDWHILE SEMICOLON
   44     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | • expression OP_PLUSEQ expression SEMICOLON
   55     | • expression OP_MINUSEQ expression SEMICOLON
   56     | • expression OP_MULTEQ expression SEMICOLON
   57     | • expression OP_DIVEQ expression SEMICOLON
   58     | • expression OP_MODEQ expression SEMICOLON
   59     | • expression SEMICOLON
   60     | • error SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    error             shift, and go to state 143
    IDENTIFIER        shift, and go to state 144
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 145
    KW_FOR            shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_ENDWHILE       shift, and go to state 253
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 150
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 151
    HASH              shift, and go to state 152

    stmt                go to state 153
    expression          go to state 154
    primary_expression  go to state 50


State 247

   52 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 254


State 248

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list • RPAREN SEMICOLON
   73 arg_list: arg_list • COMMA expression

    RPAREN  shift, and go to state 255
    COMMA   shift, and go to state 125


State 249

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON • expression RBRACKET COLON type SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 256
    primary_expression  go to state 50


State 250

   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE • COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 257


State 251

   34 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 258


State 252

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    RBRACKET  shift, and go to state 259
    COLON     shift, and go to state 260
    DOT       shift, and go to state 79


State 253

   43 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE • SEMICOLON

    SEMICOLON  shift, and go to state 261


State 254

   52 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 52 (stmt)


State 255

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 262


State 256

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression • RBRACKET COLON type SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    RBRACKET  shift, and go to state 263
    DOT       shift, and go to state 79


State 257

   22 stmt_list: ε •
   23          | • stmt_list stmt
   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON • stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 264


State 258

   34 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 34 (stmt)


State 259

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 265


State 260

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 266
    primary_expression  go to state 50


State 261

   43 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •

    $default  reduce using rule 43 (stmt)


State 262

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON •

    $default  reduce using rule 53 (stmt)


State 263

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 267


State 264

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list • KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | • expression OP_PLUSEQ expression SEMICOLON
   55     | • expression OP_MINUSEQ expression SEMICOLON
   56     | • expression OP_MULTEQ expression SEMICOLON
   57     | • expression OP_DIVEQ expression SEMICOLON
   58     | • expression OP_MODEQ expression SEMICOLON
   59     | • expression SEMICOLON
   60     | • error SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    error             shift, and go to state 143
    IDENTIFIER        shift, and go to state 144
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 145
    KW_ENDIF          shift, and go to state 268
    KW_FOR            shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 150
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 151
    HASH              shift, and go to state 152

    stmt                go to state 153
    expression          go to state 154
    primary_expression  go to state 50


State 265

   22 stmt_list: ε •
   23          | • stmt_list stmt
   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 269


State 266

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   75 expression: expression • OP_PLUS expression
   76           | expression • OP_MINUS expression
   77           | expression • OP_MULT expression
   78           | expression • OP_DIV expression
   79           | expression • OP_MOD expression
   80           | expression • OP_POW expression
   81           | expression • OP_EQ expression
   82           | expression • OP_NEQ expression
   83           | expression • OP_LT expression
   84           | expression • OP_LEQ expression
   85           | expression • OP_GT expression
   86           | expression • OP_GEQ expression
   87           | expression • KW_AND expression
   88           | expression • KW_OR expression
   92           | expression • DOT IDENTIFIER
   93           | expression • LBRACKET expression RBRACKET
   94           | expression • LPAREN arg_list RPAREN
   95           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 62
    KW_OR     shift, and go to state 63
    OP_POW    shift, and go to state 64
    OP_EQ     shift, and go to state 65
    OP_NEQ    shift, and go to state 66
    OP_LT     shift, and go to state 67
    OP_LEQ    shift, and go to state 68
    OP_GT     shift, and go to state 69
    OP_GEQ    shift, and go to state 70
    OP_PLUS   shift, and go to state 71
    OP_MINUS  shift, and go to state 72
    OP_MULT   shift, and go to state 73
    OP_DIV    shift, and go to state 74
    OP_MOD    shift, and go to state 75
    LPAREN    shift, and go to state 76
    LBRACKET  shift, and go to state 77
    RBRACKET  shift, and go to state 270
    DOT       shift, and go to state 79


State 267

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 271


State 268

   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 272


State 269

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   36     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | • expression OP_PLUSEQ expression SEMICOLON
   55     | • expression OP_MINUSEQ expression SEMICOLON
   56     | • expression OP_MULTEQ expression SEMICOLON
   57     | • expression OP_DIVEQ expression SEMICOLON
   58     | • expression OP_MODEQ expression SEMICOLON
   59     | • expression SEMICOLON
   60     | • error SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    error             shift, and go to state 143
    IDENTIFIER        shift, and go to state 144
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 145
    KW_FOR            shift, and go to state 146
    KW_ENDFOR         shift, and go to state 273
    KW_WHILE          shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 150
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 151
    HASH              shift, and go to state 152

    stmt                go to state 153
    expression          go to state 154
    primary_expression  go to state 50


State 270

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 274


State 271

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 275


State 272

   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 35 (stmt)


State 273

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 276


State 274

   22 stmt_list: ε •
   23          | • stmt_list stmt
   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 277


State 275

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 42 (stmt)


State 276

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 36 (stmt)


State 277

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   45     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   47     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   48     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   49     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   50     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   51     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   54     | • expression OP_PLUSEQ expression SEMICOLON
   55     | • expression OP_MINUSEQ expression SEMICOLON
   56     | • expression OP_MULTEQ expression SEMICOLON
   57     | • expression OP_DIVEQ expression SEMICOLON
   58     | • expression OP_MODEQ expression SEMICOLON
   59     | • expression SEMICOLON
   60     | • error SEMICOLON
   74 expression: • primary_expression
   75           | • expression OP_PLUS expression
   76           | • expression OP_MINUS expression
   77           | • expression OP_MULT expression
   78           | • expression OP_DIV expression
   79           | • expression OP_MOD expression
   80           | • expression OP_POW expression
   81           | • expression OP_EQ expression
   82           | • expression OP_NEQ expression
   83           | • expression OP_LT expression
   84           | • expression OP_LEQ expression
   85           | • expression OP_GT expression
   86           | • expression OP_GEQ expression
   87           | • expression KW_AND expression
   88           | • expression KW_OR expression
   89           | • KW_NOT expression
   90           | • OP_MINUS expression
   91           | • LPAREN expression RPAREN
   92           | • expression DOT IDENTIFIER
   93           | • expression LBRACKET expression RBRACKET
   94           | • expression LPAREN arg_list RPAREN
   95           | • expression LPAREN RPAREN
   96 primary_expression: • CONST_INT
   97                   | • CONST_FLOAT
   98                   | • CONST_STRING
   99                   | • CONST_BOOL_TRUE
  100                   | • CONST_BOOL_FALSE
  101                   | • IDENTIFIER
  102                   | • HASH IDENTIFIER

    error             shift, and go to state 143
    IDENTIFIER        shift, and go to state 144
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 145
    KW_FOR            shift, and go to state 146
    KW_ENDFOR         shift, and go to state 278
    KW_WHILE          shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 150
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 151
    HASH              shift, and go to state 152

    stmt                go to state 153
    expression          go to state 154
    primary_expression  go to state 50


State 278

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 279


State 279

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 37 (stmt)
