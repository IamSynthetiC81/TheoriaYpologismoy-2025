Rules useless in parser due to conflicts

  111 primary_expression: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | primary_expression DOT IDENTIFIER LPAREN RPAREN


State 39 conflicts: 1 shift/reduce
State 50 conflicts: 2 shift/reduce
State 58 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 138 conflicts: 1 shift/reduce
State 150 conflicts: 29 reduce/reduce
State 157 conflicts: 7 shift/reduce
State 171 conflicts: 29 reduce/reduce
State 182 conflicts: 1 shift/reduce
State 190 conflicts: 4 shift/reduce
State 207 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 256 conflicts: 1 shift/reduce
State 270 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: macro_def_list top_level_list

    2 macro_def_list: ε
    3               | macro_def_list macro_def

    4 macro_def: KW_DEFMACRO IDENTIFIER CONST_FLOAT

    5 top_level_list: ε
    6               | top_level_list top_level

    7 top_level: function
    8          | main_function
    9          | component
   10          | var_declaration
   11          | const_declaration

   12 var_declaration: ident_list COLON type SEMICOLON
   13                | ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON

   17 param_list: ε
   18           | param_decl_list

   19 param_decl_list: IDENTIFIER COLON type
   20                | param_decl_list COMMA IDENTIFIER COLON type

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON

   22 stmt_list: ε
   23          | stmt_list stmt

   24 type: KW_INTEGER
   25     | KW_SCALAR
   26     | KW_STR
   27     | KW_BOOL
   28     | IDENTIFIER

   29 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | expression OP_ASSIGN expression SEMICOLON
   31     | IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | KW_RETURN expression SEMICOLON
   34     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | KW_BREAK SEMICOLON
   39     | KW_CONTINUE SEMICOLON
   40     | SEMICOLON
   41     | KW_RETURN SEMICOLON
   42     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   45     | IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | expression OP_PLUSEQ expression SEMICOLON
   56     | expression OP_MINUSEQ expression SEMICOLON
   57     | expression OP_MULTEQ expression SEMICOLON
   58     | expression OP_DIVEQ expression SEMICOLON
   59     | expression OP_MODEQ expression SEMICOLON
   60     | expression SEMICOLON
   61     | error SEMICOLON

   62 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

   63 component_body: ε
   64               | component_body component_member

   65 component_member: hash_ident_list COLON type SEMICOLON
   66                 | hash_ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   67                 | function
   68                 | SEMICOLON

   69 hash_ident_list: HASH IDENTIFIER
   70                | hash_ident_list COMMA HASH IDENTIFIER

   71 ident_list: IDENTIFIER
   72           | ident_list COMMA IDENTIFIER

   73 arg_list: ε
   74         | expression
   75         | arg_list COMMA expression

   76 expression: primary_expression
   77           | expression OP_PLUS expression
   78           | expression OP_MINUS expression
   79           | expression OP_MULT expression
   80           | expression OP_DIV expression
   81           | expression OP_MOD expression
   82           | expression OP_POW expression
   83           | expression OP_EQ expression
   84           | expression OP_NEQ expression
   85           | expression OP_LT expression
   86           | expression OP_LEQ expression
   87           | expression OP_GT expression
   88           | expression OP_GEQ expression
   89           | expression KW_AND expression
   90           | expression KW_OR expression
   91           | KW_NOT expression
   92           | OP_MINUS expression
   93           | LPAREN expression RPAREN
   94           | expression DOT IDENTIFIER
   95           | expression LBRACKET expression RBRACKET
   96           | primary_expression DOT IDENTIFIER
   97           | primary_expression LBRACKET expression RBRACKET
   98           | primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | expression LPAREN arg_list RPAREN
  101           | expression LPAREN RPAREN

  102 primary_expression: CONST_INT
  103                   | CONST_FLOAT
  104                   | CONST_STRING
  105                   | CONST_BOOL_TRUE
  106                   | CONST_BOOL_FALSE
  107                   | IDENTIFIER
  108                   | HASH IDENTIFIER
  109                   | IDENTIFIER LPAREN arg_list RPAREN
  110                   | IDENTIFIER LPAREN RPAREN
  111                   | primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | primary_expression DOT IDENTIFIER LPAREN RPAREN

  113 block: decl_list stmt_list

  114 decl_list: ε
  115          | decl_list var_declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256) 61
    IDENTIFIER <string> (258) 4 14 15 16 19 20 28 29 31 32 36 37 42 43 45 46 47 48 49 50 51 52 53 54 62 69 70 71 72 94 96 98 99 107 108 109 110 111 112
    CONST_INT <string> (259) 13 43 66 102
    CONST_FLOAT <string> (260) 4 103
    CONST_STRING <string> (261) 104
    CONST_BOOL_TRUE (262) 105
    CONST_BOOL_FALSE (263) 106
    KW_INTEGER (264) 24
    KW_SCALAR (265) 25
    KW_STR (266) 26
    KW_BOOL (267) 27
    KW_CONST (268) 14
    KW_IF (269) 34 35
    KW_ELSE (270) 35
    KW_ENDIF (271) 34 35
    KW_FOR (272) 36 37 42 43
    KW_IN (273) 36 37 43
    KW_ENDFOR (274) 36 37
    KW_WHILE (275) 44
    KW_ENDWHILE (276) 44
    KW_BREAK (277) 38
    KW_CONTINUE (278) 39
    KW_NOT (279) 91
    KW_AND (280) 89
    KW_OR (281) 90
    KW_DEF (282) 15 16 21
    KW_ENDDEF (283) 15 16 21
    KW_MAIN (284) 21
    KW_RETURN (285) 33 41
    KW_COMP (286) 62
    KW_ENDCOMP (287) 62
    KW_OF (288) 43
    KW_DEFMACRO (289) 4
    OP_ASSIGN (290) 14 29 30 50
    OP_PLUSEQ (291) 45 51 55
    OP_MINUSEQ (292) 46 52 56
    OP_MULTEQ (293) 47 57
    OP_DIVEQ (294) 48 58
    OP_MODEQ (295) 49 59
    OP_DEFINE (296) 42 43
    OP_POW (297) 82
    OP_EQ (298) 83
    OP_NEQ (299) 84
    OP_LT (300) 85
    OP_LEQ (301) 86
    OP_GT (302) 87
    OP_GEQ (303) 88
    OP_PLUS (304) 77
    OP_MINUS (305) 78 92
    OP_MULT (306) 79
    OP_DIV (307) 80
    OP_MOD (308) 81
    LPAREN (309) 15 16 21 31 32 34 35 44 53 54 93 98 99 100 101 109 110 111 112
    RPAREN (310) 15 16 21 31 32 34 35 44 53 54 93 98 99 100 101 109 110 111 112
    LBRACKET (311) 13 36 37 42 43 66 95 97
    RBRACKET (312) 13 36 37 42 43 66 95 97
    COLON (313) 12 13 14 15 16 19 20 21 34 35 36 37 42 43 44 62 65 66
    SEMICOLON (314) 12 13 14 15 16 21 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 65 66 68
    COMMA (315) 20 70 72 75
    DOT (316) 53 54 94 96 98 99 111 112
    OP_ARROW (317) 15
    HASH (318) 50 51 52 53 54 69 70 108
    UMINUS (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program <string> (66)
        on left: 1
        on right: 0
    macro_def_list <string> (67)
        on left: 2 3
        on right: 1 3
    macro_def <string> (68)
        on left: 4
        on right: 3
    top_level_list <string> (69)
        on left: 5 6
        on right: 1 6
    top_level <string> (70)
        on left: 7 8 9 10 11
        on right: 6
    var_declaration <string> (71)
        on left: 12 13
        on right: 10 115
    const_declaration <string> (72)
        on left: 14
        on right: 11
    function <string> (73)
        on left: 15 16
        on right: 7 67
    param_list <string> (74)
        on left: 17 18
        on right: 15 16
    param_decl_list <string> (75)
        on left: 19 20
        on right: 18 20
    main_function <string> (76)
        on left: 21
        on right: 8
    stmt_list <string> (77)
        on left: 22 23
        on right: 23 34 35 36 37 44 113
    type <string> (78)
        on left: 24 25 26 27 28
        on right: 12 13 14 15 19 20 42 43 65 66
    stmt <string> (79)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 23
    component <string> (80)
        on left: 62
        on right: 9
    component_body <string> (81)
        on left: 63 64
        on right: 62 64
    component_member <string> (82)
        on left: 65 66 67 68
        on right: 64
    hash_ident_list <string> (83)
        on left: 69 70
        on right: 65 66 70
    ident_list <string> (84)
        on left: 71 72
        on right: 12 13 72
    arg_list <string> (85)
        on left: 73 74 75
        on right: 32 54 75 98 100 109 111
    expression <string> (86)
        on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
        on right: 14 29 30 33 34 35 36 37 42 43 44 45 46 47 48 49 50 51 52 55 56 57 58 59 60 74 75 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 97 100 101
    primary_expression <string> (87)
        on left: 102 103 104 105 106 107 108 109 110 111 112
        on right: 76 96 97 98 99 111 112
    block <string> (88)
        on left: 113
        on right: 15 16 21
    decl_list <string> (89)
        on left: 114 115
        on right: 113 115


State 0

    0 $accept: • program $end
    1 program: • macro_def_list top_level_list
    2 macro_def_list: ε •
    3               | • macro_def_list macro_def

    $default  reduce using rule 2 (macro_def_list)

    program         go to state 1
    macro_def_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: macro_def_list • top_level_list
    3 macro_def_list: macro_def_list • macro_def
    4 macro_def: • KW_DEFMACRO IDENTIFIER CONST_FLOAT
    5 top_level_list: ε •  [$end, IDENTIFIER, KW_CONST, KW_DEF, KW_COMP]
    6               | • top_level_list top_level

    KW_DEFMACRO  shift, and go to state 4

    $default  reduce using rule 5 (top_level_list)

    macro_def       go to state 5
    top_level_list  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 macro_def: KW_DEFMACRO • IDENTIFIER CONST_FLOAT

    IDENTIFIER  shift, and go to state 7


State 5

    3 macro_def_list: macro_def_list macro_def •

    $default  reduce using rule 3 (macro_def_list)


State 6

    1 program: macro_def_list top_level_list •  [$end]
    6 top_level_list: top_level_list • top_level
    7 top_level: • function
    8          | • main_function
    9          | • component
   10          | • var_declaration
   11          | • const_declaration
   12 var_declaration: • ident_list COLON type SEMICOLON
   13                | • ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   14 const_declaration: • KW_CONST IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON
   15 function: • KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | • KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   21 main_function: • KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON
   62 component: • KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON
   71 ident_list: • IDENTIFIER
   72           | • ident_list COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 8
    KW_CONST    shift, and go to state 9
    KW_DEF      shift, and go to state 10
    KW_COMP     shift, and go to state 11

    $default  reduce using rule 1 (program)

    top_level          go to state 12
    var_declaration    go to state 13
    const_declaration  go to state 14
    function           go to state 15
    main_function      go to state 16
    component          go to state 17
    ident_list         go to state 18


State 7

    4 macro_def: KW_DEFMACRO IDENTIFIER • CONST_FLOAT

    CONST_FLOAT  shift, and go to state 19


State 8

   71 ident_list: IDENTIFIER •

    $default  reduce using rule 71 (ident_list)


State 9

   14 const_declaration: KW_CONST • IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 20


State 10

   15 function: KW_DEF • IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF • IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   21 main_function: KW_DEF • KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 21
    KW_MAIN     shift, and go to state 22


State 11

   62 component: KW_COMP • IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON

    IDENTIFIER  shift, and go to state 23


State 12

    6 top_level_list: top_level_list top_level •

    $default  reduce using rule 6 (top_level_list)


State 13

   10 top_level: var_declaration •

    $default  reduce using rule 10 (top_level)


State 14

   11 top_level: const_declaration •

    $default  reduce using rule 11 (top_level)


State 15

    7 top_level: function •

    $default  reduce using rule 7 (top_level)


State 16

    8 top_level: main_function •

    $default  reduce using rule 8 (top_level)


State 17

    9 top_level: component •

    $default  reduce using rule 9 (top_level)


State 18

   12 var_declaration: ident_list • COLON type SEMICOLON
   13                | ident_list • LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   72 ident_list: ident_list • COMMA IDENTIFIER

    LBRACKET  shift, and go to state 24
    COLON     shift, and go to state 25
    COMMA     shift, and go to state 26


State 19

    4 macro_def: KW_DEFMACRO IDENTIFIER CONST_FLOAT •

    $default  reduce using rule 4 (macro_def)


State 20

   14 const_declaration: KW_CONST IDENTIFIER • OP_ASSIGN expression COLON type SEMICOLON

    OP_ASSIGN  shift, and go to state 27


State 21

   15 function: KW_DEF IDENTIFIER • LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER • LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 28


State 22

   21 main_function: KW_DEF KW_MAIN • LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 29


State 23

   62 component: KW_COMP IDENTIFIER • COLON component_body KW_ENDCOMP SEMICOLON

    COLON  shift, and go to state 30


State 24

   13 var_declaration: ident_list LBRACKET • CONST_INT RBRACKET COLON type SEMICOLON

    CONST_INT  shift, and go to state 31


State 25

   12 var_declaration: ident_list COLON • type SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 37


State 26

   72 ident_list: ident_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 38


State 27

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN • expression COLON type SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 49
    primary_expression  go to state 50


State 28

   15 function: KW_DEF IDENTIFIER LPAREN • param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN • param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   17 param_list: ε •  [RPAREN]
   18           | • param_decl_list
   19 param_decl_list: • IDENTIFIER COLON type
   20                | • param_decl_list COMMA IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 17 (param_list)

    param_list       go to state 52
    param_decl_list  go to state 53


State 29

   21 main_function: KW_DEF KW_MAIN LPAREN • RPAREN COLON block KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 54


State 30

   62 component: KW_COMP IDENTIFIER COLON • component_body KW_ENDCOMP SEMICOLON
   63 component_body: ε •
   64               | • component_body component_member

    $default  reduce using rule 63 (component_body)

    component_body  go to state 55


State 31

   13 var_declaration: ident_list LBRACKET CONST_INT • RBRACKET COLON type SEMICOLON

    RBRACKET  shift, and go to state 56


State 32

   28 type: IDENTIFIER •

    $default  reduce using rule 28 (type)


State 33

   24 type: KW_INTEGER •

    $default  reduce using rule 24 (type)


State 34

   25 type: KW_SCALAR •

    $default  reduce using rule 25 (type)


State 35

   26 type: KW_STR •

    $default  reduce using rule 26 (type)


State 36

   27 type: KW_BOOL •

    $default  reduce using rule 27 (type)


State 37

   12 var_declaration: ident_list COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 38

   72 ident_list: ident_list COMMA IDENTIFIER •

    $default  reduce using rule 72 (ident_list)


State 39

  107 primary_expression: IDENTIFIER •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
  109                   | IDENTIFIER • LPAREN arg_list RPAREN
  110                   | IDENTIFIER • LPAREN RPAREN

    LPAREN  shift, and go to state 58

    LPAREN    [reduce using rule 107 (primary_expression)]
    $default  reduce using rule 107 (primary_expression)

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
      109 primary_expression: IDENTIFIER • LPAREN arg_list RPAREN
      Example: IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 109: IDENTIFIER • LPAREN arg_list RPAREN
                                         ↳ 109: ε
      Reduce derivation
        expression
        ↳ 100: expression                LPAREN arg_list RPAREN
               ↳ 76: primary_expression         ↳ 100: ε
                     ↳ 107: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
      110 primary_expression: IDENTIFIER • LPAREN RPAREN
      Example: IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 110: IDENTIFIER • LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                LPAREN arg_list RPAREN
               ↳ 76: primary_expression         ↳ 100: ε
                     ↳ 107: IDENTIFIER •



State 40

  102 primary_expression: CONST_INT •

    $default  reduce using rule 102 (primary_expression)


State 41

  103 primary_expression: CONST_FLOAT •

    $default  reduce using rule 103 (primary_expression)


State 42

  104 primary_expression: CONST_STRING •

    $default  reduce using rule 104 (primary_expression)


State 43

  105 primary_expression: CONST_BOOL_TRUE •

    $default  reduce using rule 105 (primary_expression)


State 44

  106 primary_expression: CONST_BOOL_FALSE •

    $default  reduce using rule 106 (primary_expression)


State 45

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   91           | KW_NOT • expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 59
    primary_expression  go to state 50


State 46

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   92           | OP_MINUS • expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 60
    primary_expression  go to state 50


State 47

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   93           | LPAREN • expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 61
    primary_expression  go to state 50


State 48

  108 primary_expression: HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 49

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression • COLON type SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    COLON     shift, and go to state 79
    DOT       shift, and go to state 80


State 50

   76 expression: primary_expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
   96           | primary_expression • DOT IDENTIFIER
   97           | primary_expression • LBRACKET expression RBRACKET
   98           | primary_expression • DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | primary_expression • DOT IDENTIFIER LPAREN RPAREN
  111 primary_expression: primary_expression • DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | primary_expression • DOT IDENTIFIER LPAREN RPAREN

    LBRACKET  shift, and go to state 81
    DOT       shift, and go to state 82

    LBRACKET  [reduce using rule 76 (expression)]
    DOT       [reduce using rule 76 (expression)]
    $default  reduce using rule 76 (expression)

    shift/reduce conflict on token DOT:
       76 expression: primary_expression •
       96 expression: primary_expression • DOT IDENTIFIER
      Example: primary_expression • DOT IDENTIFIER
      Shift derivation
        expression
        ↳ 96: primary_expression • DOT IDENTIFIER
      Reduce derivation
        expression
        ↳ 94: expression                 DOT IDENTIFIER
              ↳ 76: primary_expression •

    shift/reduce conflict on token LBRACKET:
       76 expression: primary_expression •
       97 expression: primary_expression • LBRACKET expression RBRACKET
      Example: primary_expression • LBRACKET expression RBRACKET
      Shift derivation
        expression
        ↳ 97: primary_expression • LBRACKET expression RBRACKET
      Reduce derivation
        expression
        ↳ 95: expression                 LBRACKET expression RBRACKET
              ↳ 76: primary_expression •

    shift/reduce conflict on token DOT:
       76 expression: primary_expression •
       98 expression: primary_expression • DOT IDENTIFIER LPAREN arg_list RPAREN
      Example: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Shift derivation
        expression
        ↳ 98: primary_expression • DOT IDENTIFIER LPAREN arg_list RPAREN
                                                         ↳ 98: ε
      Reduce derivation
        expression
        ↳ 100: expression                                      LPAREN arg_list RPAREN
               ↳ 94: expression                 DOT IDENTIFIER        ↳ 100: ε
                     ↳ 76: primary_expression •

    shift/reduce conflict on token DOT:
       76 expression: primary_expression •
       99 expression: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Example: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Shift derivation
        expression
        ↳ 99: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                                      LPAREN arg_list RPAREN
               ↳ 94: expression                 DOT IDENTIFIER        ↳ 100: ε
                     ↳ 76: primary_expression •

    shift/reduce conflict on token DOT:
       76 expression: primary_expression •
      111 primary_expression: primary_expression • DOT IDENTIFIER LPAREN arg_list RPAREN
      Example: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 111: primary_expression • DOT IDENTIFIER LPAREN arg_list RPAREN
                                                                ↳ 111: ε
      Reduce derivation
        expression
        ↳ 100: expression                                      LPAREN arg_list RPAREN
               ↳ 94: expression                 DOT IDENTIFIER        ↳ 100: ε
                     ↳ 76: primary_expression •

    shift/reduce conflict on token DOT:
       76 expression: primary_expression •
      112 primary_expression: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Example: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 112: primary_expression • DOT IDENTIFIER LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                                      LPAREN arg_list RPAREN
               ↳ 94: expression                 DOT IDENTIFIER        ↳ 100: ε
                     ↳ 76: primary_expression •



State 51

   19 param_decl_list: IDENTIFIER • COLON type

    COLON  shift, and go to state 83


State 52

   15 function: KW_DEF IDENTIFIER LPAREN param_list • RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN param_list • RPAREN COLON block KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 84


State 53

   18 param_list: param_decl_list •  [RPAREN]
   20 param_decl_list: param_decl_list • COMMA IDENTIFIER COLON type

    COMMA  shift, and go to state 85

    $default  reduce using rule 18 (param_list)


State 54

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN • COLON block KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 86


State 55

   15 function: • KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | • KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON
   62 component: KW_COMP IDENTIFIER COLON component_body • KW_ENDCOMP SEMICOLON
   64 component_body: component_body • component_member
   65 component_member: • hash_ident_list COLON type SEMICOLON
   66                 | • hash_ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   67                 | • function
   68                 | • SEMICOLON
   69 hash_ident_list: • HASH IDENTIFIER
   70                | • hash_ident_list COMMA HASH IDENTIFIER

    KW_DEF      shift, and go to state 87
    KW_ENDCOMP  shift, and go to state 88
    SEMICOLON   shift, and go to state 89
    HASH        shift, and go to state 90

    function          go to state 91
    component_member  go to state 92
    hash_ident_list   go to state 93


State 56

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 94


State 57

   12 var_declaration: ident_list COLON type SEMICOLON •

    $default  reduce using rule 12 (var_declaration)


State 58

   73 arg_list: ε •  [RPAREN, COMMA]
   74         | • expression
   75         | • arg_list COMMA expression
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  109                   | IDENTIFIER LPAREN • arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  110                   | IDENTIFIER LPAREN • RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 95
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 73 (arg_list)]
    $default  reduce using rule 73 (arg_list)

    arg_list            go to state 96
    expression          go to state 97
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
      110 primary_expression: IDENTIFIER LPAREN • RPAREN
      Example: IDENTIFIER LPAREN • RPAREN
      Shift derivation
        primary_expression
        ↳ 110: IDENTIFIER LPAREN • RPAREN
      Reduce derivation
        primary_expression
        ↳ 109: IDENTIFIER LPAREN arg_list  RPAREN
                                 ↳ 73: ε •



State 59

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   91           | KW_NOT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 91 (expression)

    Conflict between rule 91 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 91 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 91 and token OP_POW resolved as shift (KW_NOT < OP_POW).
    Conflict between rule 91 and token OP_EQ resolved as shift (KW_NOT < OP_EQ).
    Conflict between rule 91 and token OP_NEQ resolved as shift (KW_NOT < OP_NEQ).
    Conflict between rule 91 and token OP_LT resolved as shift (KW_NOT < OP_LT).
    Conflict between rule 91 and token OP_LEQ resolved as shift (KW_NOT < OP_LEQ).
    Conflict between rule 91 and token OP_GT resolved as shift (KW_NOT < OP_GT).
    Conflict between rule 91 and token OP_GEQ resolved as shift (KW_NOT < OP_GEQ).
    Conflict between rule 91 and token OP_PLUS resolved as shift (KW_NOT < OP_PLUS).
    Conflict between rule 91 and token OP_MINUS resolved as shift (KW_NOT < OP_MINUS).
    Conflict between rule 91 and token OP_MULT resolved as shift (KW_NOT < OP_MULT).
    Conflict between rule 91 and token OP_DIV resolved as shift (KW_NOT < OP_DIV).
    Conflict between rule 91 and token OP_MOD resolved as shift (KW_NOT < OP_MOD).
    Conflict between rule 91 and token LPAREN resolved as shift (KW_NOT < LPAREN).
    Conflict between rule 91 and token LBRACKET resolved as shift (KW_NOT < LBRACKET).
    Conflict between rule 91 and token DOT resolved as shift (KW_NOT < DOT).


State 60

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   92           | OP_MINUS expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    $default  reduce using rule 92 (expression)

    Conflict between rule 92 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 92 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 92 and token OP_POW resolved as reduce (OP_POW < UMINUS).
    Conflict between rule 92 and token OP_EQ resolved as reduce (OP_EQ < UMINUS).
    Conflict between rule 92 and token OP_NEQ resolved as reduce (OP_NEQ < UMINUS).
    Conflict between rule 92 and token OP_LT resolved as reduce (OP_LT < UMINUS).
    Conflict between rule 92 and token OP_LEQ resolved as reduce (OP_LEQ < UMINUS).
    Conflict between rule 92 and token OP_GT resolved as reduce (OP_GT < UMINUS).
    Conflict between rule 92 and token OP_GEQ resolved as reduce (OP_GEQ < UMINUS).
    Conflict between rule 92 and token OP_PLUS resolved as reduce (OP_PLUS < UMINUS).
    Conflict between rule 92 and token OP_MINUS resolved as reduce (OP_MINUS < UMINUS).
    Conflict between rule 92 and token OP_MULT resolved as reduce (OP_MULT < UMINUS).
    Conflict between rule 92 and token OP_DIV resolved as reduce (OP_DIV < UMINUS).
    Conflict between rule 92 and token OP_MOD resolved as reduce (OP_MOD < UMINUS).
    Conflict between rule 92 and token LPAREN resolved as reduce (LPAREN < UMINUS).
    Conflict between rule 92 and token LBRACKET resolved as reduce (LBRACKET < UMINUS).
    Conflict between rule 92 and token DOT resolved as reduce (DOT < UMINUS).


State 61

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   93           | LPAREN expression • RPAREN
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    RPAREN    shift, and go to state 98
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80


State 62

  108 primary_expression: HASH IDENTIFIER •

    $default  reduce using rule 108 (primary_expression)


State 63

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   89           | expression KW_AND • expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 99
    primary_expression  go to state 50


State 64

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   90           | expression KW_OR • expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 100
    primary_expression  go to state 50


State 65

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   82           | expression OP_POW • expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 101
    primary_expression  go to state 50


State 66

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   83           | expression OP_EQ • expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 102
    primary_expression  go to state 50


State 67

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   84           | expression OP_NEQ • expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 103
    primary_expression  go to state 50


State 68

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   85           | expression OP_LT • expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 104
    primary_expression  go to state 50


State 69

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   86           | expression OP_LEQ • expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 105
    primary_expression  go to state 50


State 70

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   87           | expression OP_GT • expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 106
    primary_expression  go to state 50


State 71

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   88           | expression OP_GEQ • expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 107
    primary_expression  go to state 50


State 72

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   77           | expression OP_PLUS • expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 108
    primary_expression  go to state 50


State 73

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   78           | expression OP_MINUS • expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 109
    primary_expression  go to state 50


State 74

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   79           | expression OP_MULT • expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 110
    primary_expression  go to state 50


State 75

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   80           | expression OP_DIV • expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 111
    primary_expression  go to state 50


State 76

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   81           | expression OP_MOD • expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 112
    primary_expression  go to state 50


State 77

   73 arg_list: ε •  [RPAREN, COMMA]
   74         | • expression
   75         | • arg_list COMMA expression
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  100           | expression LPAREN • arg_list RPAREN
  101           | • expression LPAREN RPAREN
  101           | expression LPAREN • RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 113
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 73 (arg_list)]
    $default  reduce using rule 73 (arg_list)

    arg_list            go to state 114
    expression          go to state 97
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
      101 expression: expression LPAREN • RPAREN
      Example: expression LPAREN • RPAREN
      Shift derivation
        expression
        ↳ 101: expression LPAREN • RPAREN
      Reduce derivation
        expression
        ↳ 100: expression LPAREN arg_list  RPAREN
                                 ↳ 73: ε •



State 78

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   95           | expression LBRACKET • expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 115
    primary_expression  go to state 50


State 79

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON • type SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 116


State 80

   94 expression: expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 117


State 81

   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   97           | primary_expression LBRACKET • expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 118
    primary_expression  go to state 50


State 82

   96 expression: primary_expression DOT • IDENTIFIER
   98           | primary_expression DOT • IDENTIFIER LPAREN arg_list RPAREN
   99           | primary_expression DOT • IDENTIFIER LPAREN RPAREN
  111 primary_expression: primary_expression DOT • IDENTIFIER LPAREN arg_list RPAREN
  112                   | primary_expression DOT • IDENTIFIER LPAREN RPAREN

    IDENTIFIER  shift, and go to state 119


State 83

   19 param_decl_list: IDENTIFIER COLON • type
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 120


State 84

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN • OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF IDENTIFIER LPAREN param_list RPAREN • COLON block KW_ENDDEF SEMICOLON

    COLON     shift, and go to state 121
    OP_ARROW  shift, and go to state 122


State 85

   20 param_decl_list: param_decl_list COMMA • IDENTIFIER COLON type

    IDENTIFIER  shift, and go to state 123


State 86

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON • block KW_ENDDEF SEMICOLON
  113 block: • decl_list stmt_list
  114 decl_list: ε •
  115          | • decl_list var_declaration

    $default  reduce using rule 114 (decl_list)

    block      go to state 124
    decl_list  go to state 125


State 87

   15 function: KW_DEF • IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON
   16         | KW_DEF • IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 21


State 88

   62 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP • SEMICOLON

    SEMICOLON  shift, and go to state 126


State 89

   68 component_member: SEMICOLON •

    $default  reduce using rule 68 (component_member)


State 90

   69 hash_ident_list: HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 127


State 91

   67 component_member: function •

    $default  reduce using rule 67 (component_member)


State 92

   64 component_body: component_body component_member •

    $default  reduce using rule 64 (component_body)


State 93

   65 component_member: hash_ident_list • COLON type SEMICOLON
   66                 | hash_ident_list • LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   70 hash_ident_list: hash_ident_list • COMMA HASH IDENTIFIER

    LBRACKET  shift, and go to state 128
    COLON     shift, and go to state 129
    COMMA     shift, and go to state 130


State 94

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET COLON • type SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 131


State 95

  110 primary_expression: IDENTIFIER LPAREN RPAREN •

    $default  reduce using rule 110 (primary_expression)


State 96

   75 arg_list: arg_list • COMMA expression
  109 primary_expression: IDENTIFIER LPAREN arg_list • RPAREN

    RPAREN  shift, and go to state 132
    COMMA   shift, and go to state 133


State 97

   74 arg_list: expression •  [RPAREN, COMMA]
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 74 (arg_list)


State 98

   93 expression: LPAREN expression RPAREN •

    $default  reduce using rule 93 (expression)


State 99

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   89           | expression KW_AND expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 89 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 89 and token OP_POW resolved as shift (KW_AND < OP_POW).
    Conflict between rule 89 and token OP_EQ resolved as shift (KW_AND < OP_EQ).
    Conflict between rule 89 and token OP_NEQ resolved as shift (KW_AND < OP_NEQ).
    Conflict between rule 89 and token OP_LT resolved as shift (KW_AND < OP_LT).
    Conflict between rule 89 and token OP_LEQ resolved as shift (KW_AND < OP_LEQ).
    Conflict between rule 89 and token OP_GT resolved as shift (KW_AND < OP_GT).
    Conflict between rule 89 and token OP_GEQ resolved as shift (KW_AND < OP_GEQ).
    Conflict between rule 89 and token OP_PLUS resolved as shift (KW_AND < OP_PLUS).
    Conflict between rule 89 and token OP_MINUS resolved as shift (KW_AND < OP_MINUS).
    Conflict between rule 89 and token OP_MULT resolved as shift (KW_AND < OP_MULT).
    Conflict between rule 89 and token OP_DIV resolved as shift (KW_AND < OP_DIV).
    Conflict between rule 89 and token OP_MOD resolved as shift (KW_AND < OP_MOD).
    Conflict between rule 89 and token LPAREN resolved as shift (KW_AND < LPAREN).
    Conflict between rule 89 and token LBRACKET resolved as shift (KW_AND < LBRACKET).
    Conflict between rule 89 and token DOT resolved as shift (KW_AND < DOT).


State 100

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   90           | expression KW_OR expression •  [KW_FOR, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 90 (expression)

    Conflict between rule 90 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 90 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 90 and token OP_POW resolved as shift (KW_OR < OP_POW).
    Conflict between rule 90 and token OP_EQ resolved as shift (KW_OR < OP_EQ).
    Conflict between rule 90 and token OP_NEQ resolved as shift (KW_OR < OP_NEQ).
    Conflict between rule 90 and token OP_LT resolved as shift (KW_OR < OP_LT).
    Conflict between rule 90 and token OP_LEQ resolved as shift (KW_OR < OP_LEQ).
    Conflict between rule 90 and token OP_GT resolved as shift (KW_OR < OP_GT).
    Conflict between rule 90 and token OP_GEQ resolved as shift (KW_OR < OP_GEQ).
    Conflict between rule 90 and token OP_PLUS resolved as shift (KW_OR < OP_PLUS).
    Conflict between rule 90 and token OP_MINUS resolved as shift (KW_OR < OP_MINUS).
    Conflict between rule 90 and token OP_MULT resolved as shift (KW_OR < OP_MULT).
    Conflict between rule 90 and token OP_DIV resolved as shift (KW_OR < OP_DIV).
    Conflict between rule 90 and token OP_MOD resolved as shift (KW_OR < OP_MOD).
    Conflict between rule 90 and token LPAREN resolved as shift (KW_OR < LPAREN).
    Conflict between rule 90 and token LBRACKET resolved as shift (KW_OR < LBRACKET).
    Conflict between rule 90 and token DOT resolved as shift (KW_OR < DOT).


State 101

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   82           | expression OP_POW expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < OP_POW).
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < OP_POW).
    Conflict between rule 82 and token OP_POW resolved as shift (%right OP_POW).
    Conflict between rule 82 and token OP_EQ resolved as reduce (OP_EQ < OP_POW).
    Conflict between rule 82 and token OP_NEQ resolved as reduce (OP_NEQ < OP_POW).
    Conflict between rule 82 and token OP_LT resolved as reduce (OP_LT < OP_POW).
    Conflict between rule 82 and token OP_LEQ resolved as reduce (OP_LEQ < OP_POW).
    Conflict between rule 82 and token OP_GT resolved as reduce (OP_GT < OP_POW).
    Conflict between rule 82 and token OP_GEQ resolved as reduce (OP_GEQ < OP_POW).
    Conflict between rule 82 and token OP_PLUS resolved as reduce (OP_PLUS < OP_POW).
    Conflict between rule 82 and token OP_MINUS resolved as reduce (OP_MINUS < OP_POW).
    Conflict between rule 82 and token OP_MULT resolved as reduce (OP_MULT < OP_POW).
    Conflict between rule 82 and token OP_DIV resolved as reduce (OP_DIV < OP_POW).
    Conflict between rule 82 and token OP_MOD resolved as reduce (OP_MOD < OP_POW).
    Conflict between rule 82 and token LPAREN resolved as shift (OP_POW < LPAREN).
    Conflict between rule 82 and token LBRACKET resolved as shift (OP_POW < LBRACKET).
    Conflict between rule 82 and token DOT resolved as shift (OP_POW < DOT).


State 102

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   83           | expression OP_EQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < OP_EQ).
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < OP_EQ).
    Conflict between rule 83 and token OP_POW resolved as shift (OP_EQ < OP_POW).
    Conflict between rule 83 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 83 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 83 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 83 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 83 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 83 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 83 and token OP_PLUS resolved as shift (OP_EQ < OP_PLUS).
    Conflict between rule 83 and token OP_MINUS resolved as shift (OP_EQ < OP_MINUS).
    Conflict between rule 83 and token OP_MULT resolved as shift (OP_EQ < OP_MULT).
    Conflict between rule 83 and token OP_DIV resolved as shift (OP_EQ < OP_DIV).
    Conflict between rule 83 and token OP_MOD resolved as shift (OP_EQ < OP_MOD).
    Conflict between rule 83 and token LPAREN resolved as shift (OP_EQ < LPAREN).
    Conflict between rule 83 and token LBRACKET resolved as shift (OP_EQ < LBRACKET).
    Conflict between rule 83 and token DOT resolved as shift (OP_EQ < DOT).


State 103

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   84           | expression OP_NEQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < OP_NEQ).
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < OP_NEQ).
    Conflict between rule 84 and token OP_POW resolved as shift (OP_NEQ < OP_POW).
    Conflict between rule 84 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 84 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 84 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 84 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 84 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 84 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 84 and token OP_PLUS resolved as shift (OP_NEQ < OP_PLUS).
    Conflict between rule 84 and token OP_MINUS resolved as shift (OP_NEQ < OP_MINUS).
    Conflict between rule 84 and token OP_MULT resolved as shift (OP_NEQ < OP_MULT).
    Conflict between rule 84 and token OP_DIV resolved as shift (OP_NEQ < OP_DIV).
    Conflict between rule 84 and token OP_MOD resolved as shift (OP_NEQ < OP_MOD).
    Conflict between rule 84 and token LPAREN resolved as shift (OP_NEQ < LPAREN).
    Conflict between rule 84 and token LBRACKET resolved as shift (OP_NEQ < LBRACKET).
    Conflict between rule 84 and token DOT resolved as shift (OP_NEQ < DOT).


State 104

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   85           | expression OP_LT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 85 (expression)

    Conflict between rule 85 and token KW_AND resolved as reduce (KW_AND < OP_LT).
    Conflict between rule 85 and token KW_OR resolved as reduce (KW_OR < OP_LT).
    Conflict between rule 85 and token OP_POW resolved as shift (OP_LT < OP_POW).
    Conflict between rule 85 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 85 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 85 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 85 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 85 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 85 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 85 and token OP_PLUS resolved as shift (OP_LT < OP_PLUS).
    Conflict between rule 85 and token OP_MINUS resolved as shift (OP_LT < OP_MINUS).
    Conflict between rule 85 and token OP_MULT resolved as shift (OP_LT < OP_MULT).
    Conflict between rule 85 and token OP_DIV resolved as shift (OP_LT < OP_DIV).
    Conflict between rule 85 and token OP_MOD resolved as shift (OP_LT < OP_MOD).
    Conflict between rule 85 and token LPAREN resolved as shift (OP_LT < LPAREN).
    Conflict between rule 85 and token LBRACKET resolved as shift (OP_LT < LBRACKET).
    Conflict between rule 85 and token DOT resolved as shift (OP_LT < DOT).


State 105

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   86           | expression OP_LEQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 86 (expression)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < OP_LEQ).
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < OP_LEQ).
    Conflict between rule 86 and token OP_POW resolved as shift (OP_LEQ < OP_POW).
    Conflict between rule 86 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 86 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 86 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 86 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 86 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 86 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 86 and token OP_PLUS resolved as shift (OP_LEQ < OP_PLUS).
    Conflict between rule 86 and token OP_MINUS resolved as shift (OP_LEQ < OP_MINUS).
    Conflict between rule 86 and token OP_MULT resolved as shift (OP_LEQ < OP_MULT).
    Conflict between rule 86 and token OP_DIV resolved as shift (OP_LEQ < OP_DIV).
    Conflict between rule 86 and token OP_MOD resolved as shift (OP_LEQ < OP_MOD).
    Conflict between rule 86 and token LPAREN resolved as shift (OP_LEQ < LPAREN).
    Conflict between rule 86 and token LBRACKET resolved as shift (OP_LEQ < LBRACKET).
    Conflict between rule 86 and token DOT resolved as shift (OP_LEQ < DOT).


State 106

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   87           | expression OP_GT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token KW_AND resolved as reduce (KW_AND < OP_GT).
    Conflict between rule 87 and token KW_OR resolved as reduce (KW_OR < OP_GT).
    Conflict between rule 87 and token OP_POW resolved as shift (OP_GT < OP_POW).
    Conflict between rule 87 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 87 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 87 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 87 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 87 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 87 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 87 and token OP_PLUS resolved as shift (OP_GT < OP_PLUS).
    Conflict between rule 87 and token OP_MINUS resolved as shift (OP_GT < OP_MINUS).
    Conflict between rule 87 and token OP_MULT resolved as shift (OP_GT < OP_MULT).
    Conflict between rule 87 and token OP_DIV resolved as shift (OP_GT < OP_DIV).
    Conflict between rule 87 and token OP_MOD resolved as shift (OP_GT < OP_MOD).
    Conflict between rule 87 and token LPAREN resolved as shift (OP_GT < LPAREN).
    Conflict between rule 87 and token LBRACKET resolved as shift (OP_GT < LBRACKET).
    Conflict between rule 87 and token DOT resolved as shift (OP_GT < DOT).


State 107

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   88           | expression OP_GEQ expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token KW_AND resolved as reduce (KW_AND < OP_GEQ).
    Conflict between rule 88 and token KW_OR resolved as reduce (KW_OR < OP_GEQ).
    Conflict between rule 88 and token OP_POW resolved as shift (OP_GEQ < OP_POW).
    Conflict between rule 88 and token OP_EQ resolved as reduce (%left OP_EQ).
    Conflict between rule 88 and token OP_NEQ resolved as reduce (%left OP_NEQ).
    Conflict between rule 88 and token OP_LT resolved as reduce (%left OP_LT).
    Conflict between rule 88 and token OP_LEQ resolved as reduce (%left OP_LEQ).
    Conflict between rule 88 and token OP_GT resolved as reduce (%left OP_GT).
    Conflict between rule 88 and token OP_GEQ resolved as reduce (%left OP_GEQ).
    Conflict between rule 88 and token OP_PLUS resolved as shift (OP_GEQ < OP_PLUS).
    Conflict between rule 88 and token OP_MINUS resolved as shift (OP_GEQ < OP_MINUS).
    Conflict between rule 88 and token OP_MULT resolved as shift (OP_GEQ < OP_MULT).
    Conflict between rule 88 and token OP_DIV resolved as shift (OP_GEQ < OP_DIV).
    Conflict between rule 88 and token OP_MOD resolved as shift (OP_GEQ < OP_MOD).
    Conflict between rule 88 and token LPAREN resolved as shift (OP_GEQ < LPAREN).
    Conflict between rule 88 and token LBRACKET resolved as shift (OP_GEQ < LBRACKET).
    Conflict between rule 88 and token DOT resolved as shift (OP_GEQ < DOT).


State 108

   77 expression: expression • OP_PLUS expression
   77           | expression OP_PLUS expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 77 and token OP_POW resolved as shift (OP_PLUS < OP_POW).
    Conflict between rule 77 and token OP_EQ resolved as reduce (OP_EQ < OP_PLUS).
    Conflict between rule 77 and token OP_NEQ resolved as reduce (OP_NEQ < OP_PLUS).
    Conflict between rule 77 and token OP_LT resolved as reduce (OP_LT < OP_PLUS).
    Conflict between rule 77 and token OP_LEQ resolved as reduce (OP_LEQ < OP_PLUS).
    Conflict between rule 77 and token OP_GT resolved as reduce (OP_GT < OP_PLUS).
    Conflict between rule 77 and token OP_GEQ resolved as reduce (OP_GEQ < OP_PLUS).
    Conflict between rule 77 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 77 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 77 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 77 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 77 and token OP_MOD resolved as shift (OP_PLUS < OP_MOD).
    Conflict between rule 77 and token LPAREN resolved as shift (OP_PLUS < LPAREN).
    Conflict between rule 77 and token LBRACKET resolved as shift (OP_PLUS < LBRACKET).
    Conflict between rule 77 and token DOT resolved as shift (OP_PLUS < DOT).


State 109

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   78           | expression OP_MINUS expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 78 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 78 and token OP_POW resolved as shift (OP_MINUS < OP_POW).
    Conflict between rule 78 and token OP_EQ resolved as reduce (OP_EQ < OP_MINUS).
    Conflict between rule 78 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MINUS).
    Conflict between rule 78 and token OP_LT resolved as reduce (OP_LT < OP_MINUS).
    Conflict between rule 78 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MINUS).
    Conflict between rule 78 and token OP_GT resolved as reduce (OP_GT < OP_MINUS).
    Conflict between rule 78 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MINUS).
    Conflict between rule 78 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 78 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 78 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 78 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 78 and token OP_MOD resolved as shift (OP_MINUS < OP_MOD).
    Conflict between rule 78 and token LPAREN resolved as shift (OP_MINUS < LPAREN).
    Conflict between rule 78 and token LBRACKET resolved as shift (OP_MINUS < LBRACKET).
    Conflict between rule 78 and token DOT resolved as shift (OP_MINUS < DOT).


State 110

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   79           | expression OP_MULT expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token KW_AND resolved as reduce (KW_AND < OP_MULT).
    Conflict between rule 79 and token KW_OR resolved as reduce (KW_OR < OP_MULT).
    Conflict between rule 79 and token OP_POW resolved as shift (OP_MULT < OP_POW).
    Conflict between rule 79 and token OP_EQ resolved as reduce (OP_EQ < OP_MULT).
    Conflict between rule 79 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MULT).
    Conflict between rule 79 and token OP_LT resolved as reduce (OP_LT < OP_MULT).
    Conflict between rule 79 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MULT).
    Conflict between rule 79 and token OP_GT resolved as reduce (OP_GT < OP_MULT).
    Conflict between rule 79 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MULT).
    Conflict between rule 79 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 79 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MULT).
    Conflict between rule 79 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 79 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 79 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 79 and token LPAREN resolved as shift (OP_MULT < LPAREN).
    Conflict between rule 79 and token LBRACKET resolved as shift (OP_MULT < LBRACKET).
    Conflict between rule 79 and token DOT resolved as shift (OP_MULT < DOT).


State 111

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   80           | expression OP_DIV expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token KW_AND resolved as reduce (KW_AND < OP_DIV).
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < OP_DIV).
    Conflict between rule 80 and token OP_POW resolved as shift (OP_DIV < OP_POW).
    Conflict between rule 80 and token OP_EQ resolved as reduce (OP_EQ < OP_DIV).
    Conflict between rule 80 and token OP_NEQ resolved as reduce (OP_NEQ < OP_DIV).
    Conflict between rule 80 and token OP_LT resolved as reduce (OP_LT < OP_DIV).
    Conflict between rule 80 and token OP_LEQ resolved as reduce (OP_LEQ < OP_DIV).
    Conflict between rule 80 and token OP_GT resolved as reduce (OP_GT < OP_DIV).
    Conflict between rule 80 and token OP_GEQ resolved as reduce (OP_GEQ < OP_DIV).
    Conflict between rule 80 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 80 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 80 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 80 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 80 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 80 and token LPAREN resolved as shift (OP_DIV < LPAREN).
    Conflict between rule 80 and token LBRACKET resolved as shift (OP_DIV < LBRACKET).
    Conflict between rule 80 and token DOT resolved as shift (OP_DIV < DOT).


State 112

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   81           | expression OP_MOD expression •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, RPAREN, RBRACKET, COLON, SEMICOLON, COMMA]
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    OP_POW    shift, and go to state 65
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token KW_AND resolved as reduce (KW_AND < OP_MOD).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < OP_MOD).
    Conflict between rule 81 and token OP_POW resolved as shift (OP_MOD < OP_POW).
    Conflict between rule 81 and token OP_EQ resolved as reduce (OP_EQ < OP_MOD).
    Conflict between rule 81 and token OP_NEQ resolved as reduce (OP_NEQ < OP_MOD).
    Conflict between rule 81 and token OP_LT resolved as reduce (OP_LT < OP_MOD).
    Conflict between rule 81 and token OP_LEQ resolved as reduce (OP_LEQ < OP_MOD).
    Conflict between rule 81 and token OP_GT resolved as reduce (OP_GT < OP_MOD).
    Conflict between rule 81 and token OP_GEQ resolved as reduce (OP_GEQ < OP_MOD).
    Conflict between rule 81 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MOD).
    Conflict between rule 81 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MOD).
    Conflict between rule 81 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 81 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 81 and token OP_MOD resolved as reduce (%left OP_MOD).
    Conflict between rule 81 and token LPAREN resolved as shift (OP_MOD < LPAREN).
    Conflict between rule 81 and token LBRACKET resolved as shift (OP_MOD < LBRACKET).
    Conflict between rule 81 and token DOT resolved as shift (OP_MOD < DOT).


State 113

  101 expression: expression LPAREN RPAREN •

    $default  reduce using rule 101 (expression)


State 114

   75 arg_list: arg_list • COMMA expression
  100 expression: expression LPAREN arg_list • RPAREN

    RPAREN  shift, and go to state 134
    COMMA   shift, and go to state 133


State 115

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
   95           | expression LBRACKET expression • RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    RBRACKET  shift, and go to state 135
    DOT       shift, and go to state 80


State 116

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 136


State 117

   94 expression: expression DOT IDENTIFIER •

    $default  reduce using rule 94 (expression)


State 118

   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
   97           | primary_expression LBRACKET expression • RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    RBRACKET  shift, and go to state 137
    DOT       shift, and go to state 80


State 119

   96 expression: primary_expression DOT IDENTIFIER •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
   98           | primary_expression DOT IDENTIFIER • LPAREN arg_list RPAREN
   99           | primary_expression DOT IDENTIFIER • LPAREN RPAREN
  111 primary_expression: primary_expression DOT IDENTIFIER • LPAREN arg_list RPAREN
  112                   | primary_expression DOT IDENTIFIER • LPAREN RPAREN

    LPAREN  shift, and go to state 138

    LPAREN    [reduce using rule 96 (expression)]
    $default  reduce using rule 96 (expression)

    shift/reduce conflict on token LPAREN:
       96 expression: primary_expression DOT IDENTIFIER •
       98 expression: primary_expression DOT IDENTIFIER • LPAREN arg_list RPAREN
      Example: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 98: primary_expression DOT IDENTIFIER • LPAREN arg_list RPAREN
                                                         ↳ 98: ε
      Reduce derivation
        expression
        ↳ 100: expression                                LPAREN arg_list RPAREN
               ↳ 96: primary_expression DOT IDENTIFIER •        ↳ 100: ε

    shift/reduce conflict on token LPAREN:
       96 expression: primary_expression DOT IDENTIFIER •
       99 expression: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Example: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 99: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                                LPAREN arg_list RPAREN
               ↳ 96: primary_expression DOT IDENTIFIER •        ↳ 100: ε

    shift/reduce conflict on token LPAREN:
       96 expression: primary_expression DOT IDENTIFIER •
      111 primary_expression: primary_expression DOT IDENTIFIER • LPAREN arg_list RPAREN
      Example: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 111: primary_expression DOT IDENTIFIER • LPAREN arg_list RPAREN
                                                                ↳ 111: ε
      Reduce derivation
        expression
        ↳ 100: expression                                LPAREN arg_list RPAREN
               ↳ 96: primary_expression DOT IDENTIFIER •        ↳ 100: ε

    shift/reduce conflict on token LPAREN:
       96 expression: primary_expression DOT IDENTIFIER •
      112 primary_expression: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Example: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 112: primary_expression DOT IDENTIFIER • LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                                LPAREN arg_list RPAREN
               ↳ 96: primary_expression DOT IDENTIFIER •        ↳ 100: ε



State 120

   19 param_decl_list: IDENTIFIER COLON type •

    $default  reduce using rule 19 (param_decl_list)


State 121

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON • block KW_ENDDEF SEMICOLON
  113 block: • decl_list stmt_list
  114 decl_list: ε •
  115          | • decl_list var_declaration

    $default  reduce using rule 114 (decl_list)

    block      go to state 139
    decl_list  go to state 125


State 122

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW • type COLON block KW_ENDDEF SEMICOLON
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 140


State 123

   20 param_decl_list: param_decl_list COMMA IDENTIFIER • COLON type

    COLON  shift, and go to state 141


State 124

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block • KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 142


State 125

   12 var_declaration: • ident_list COLON type SEMICOLON
   13                | • ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON
   22 stmt_list: ε •  [error, IDENTIFIER, CONST_INT, CONST_FLOAT, CONST_STRING, CONST_BOOL_TRUE, CONST_BOOL_FALSE, KW_IF, KW_FOR, KW_WHILE, KW_BREAK, KW_CONTINUE, KW_NOT, KW_ENDDEF, KW_RETURN, OP_MINUS, LPAREN, SEMICOLON, HASH]
   23          | • stmt_list stmt
   71 ident_list: • IDENTIFIER
   72           | • ident_list COMMA IDENTIFIER
  113 block: decl_list • stmt_list
  115 decl_list: decl_list • var_declaration

    IDENTIFIER  shift, and go to state 8

    IDENTIFIER  [reduce using rule 22 (stmt_list)]
    $default    reduce using rule 22 (stmt_list)

    var_declaration  go to state 143
    stmt_list        go to state 144
    ident_list       go to state 18

    shift/reduce conflict on token IDENTIFIER:
       22 stmt_list: ε •
       71 ident_list: • IDENTIFIER
      First example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON decl_list • IDENTIFIER COLON type SEMICOLON stmt_list KW_ENDDEF SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                              $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list main_function
                                                     ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                           KW_ENDDEF SEMICOLON
                                                                                              ↳ 113: decl_list                                                      stmt_list
                                                                                                     ↳ 115: decl_list var_declaration
                                                                                                                      ↳ 12: ident_list         COLON type SEMICOLON
                                                                                                                            ↳ 71: • IDENTIFIER
      Second example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON decl_list • IDENTIFIER OP_ASSIGN expression SEMICOLON KW_ENDDEF SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                    $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 8: main_function
                                                          ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                            KW_ENDDEF SEMICOLON
                                                                                                   ↳ 113: decl_list stmt_list
                                                                                                                    ↳ 23: stmt_list stmt
                                                                                                                          ↳ 22: ε • ↳ 29: IDENTIFIER OP_ASSIGN expression SEMICOLON



State 126

   62 component: KW_COMP IDENTIFIER COLON component_body KW_ENDCOMP SEMICOLON •

    $default  reduce using rule 62 (component)


State 127

   69 hash_ident_list: HASH IDENTIFIER •

    $default  reduce using rule 69 (hash_ident_list)


State 128

   66 component_member: hash_ident_list LBRACKET • CONST_INT RBRACKET COLON type SEMICOLON

    CONST_INT  shift, and go to state 145


State 129

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   65 component_member: hash_ident_list COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 146


State 130

   70 hash_ident_list: hash_ident_list COMMA • HASH IDENTIFIER

    HASH  shift, and go to state 147


State 131

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 148


State 132

  109 primary_expression: IDENTIFIER LPAREN arg_list RPAREN •

    $default  reduce using rule 109 (primary_expression)


State 133

   75 arg_list: arg_list COMMA • expression
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 149
    primary_expression  go to state 50


State 134

  100 expression: expression LPAREN arg_list RPAREN •

    $default  reduce using rule 100 (expression)


State 135

   95 expression: expression LBRACKET expression RBRACKET •

    $default  reduce using rule 95 (expression)


State 136

   14 const_declaration: KW_CONST IDENTIFIER OP_ASSIGN expression COLON type SEMICOLON •

    $default  reduce using rule 14 (const_declaration)


State 137

   97 expression: primary_expression LBRACKET expression RBRACKET •

    $default  reduce using rule 97 (expression)


State 138

   73 arg_list: ε •  [RPAREN, COMMA]
   74         | • expression
   75         | • arg_list COMMA expression
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   98           | primary_expression DOT IDENTIFIER LPAREN • arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
   99           | primary_expression DOT IDENTIFIER LPAREN • RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  111                   | primary_expression DOT IDENTIFIER LPAREN • arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  112                   | primary_expression DOT IDENTIFIER LPAREN • RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 150
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 73 (arg_list)]
    $default  reduce using rule 73 (arg_list)

    arg_list            go to state 151
    expression          go to state 97
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
       99 expression: primary_expression DOT IDENTIFIER LPAREN • RPAREN
      First example: macro_def_list top_level_list KW_CONST IDENTIFIER OP_ASSIGN primary_expression DOT IDENTIFIER LPAREN • RPAREN COLON type SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                  $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list const_declaration
                                                     ↳ 14: KW_CONST IDENTIFIER OP_ASSIGN expression                                              COLON type SEMICOLON
                                                                                         ↳ 99: primary_expression DOT IDENTIFIER LPAREN • RPAREN
      Second example: macro_def_list top_level_list KW_CONST IDENTIFIER OP_ASSIGN primary_expression DOT IDENTIFIER LPAREN • RPAREN COLON type SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 11: const_declaration
                                                           ↳ 14: KW_CONST IDENTIFIER OP_ASSIGN expression                                                      COLON type SEMICOLON
                                                                                               ↳ 98: primary_expression DOT IDENTIFIER LPAREN arg_list  RPAREN
                                                                                                                                              ↳ 73: ε •

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
      112 primary_expression: primary_expression DOT IDENTIFIER LPAREN • RPAREN
      First example: macro_def_list top_level_list KW_CONST IDENTIFIER OP_ASSIGN primary_expression DOT IDENTIFIER LPAREN • RPAREN COLON type SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                         $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list const_declaration
                                                     ↳ 14: KW_CONST IDENTIFIER OP_ASSIGN expression                                                     COLON type SEMICOLON
                                                                                         ↳ 76: primary_expression
                                                                                               ↳ 112: primary_expression DOT IDENTIFIER LPAREN • RPAREN
      Second example: macro_def_list top_level_list KW_CONST IDENTIFIER OP_ASSIGN primary_expression DOT IDENTIFIER LPAREN • RPAREN COLON type SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 11: const_declaration
                                                           ↳ 14: KW_CONST IDENTIFIER OP_ASSIGN expression                                                      COLON type SEMICOLON
                                                                                               ↳ 98: primary_expression DOT IDENTIFIER LPAREN arg_list  RPAREN
                                                                                                                                              ↳ 73: ε •



State 139

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block • KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 152


State 140

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type • COLON block KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 153


State 141

   20 param_decl_list: param_decl_list COMMA IDENTIFIER COLON • type
   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 154


State 142

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 155


State 143

  115 decl_list: decl_list var_declaration •

    $default  reduce using rule 115 (decl_list)


State 144

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   45     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | • expression OP_PLUSEQ expression SEMICOLON
   56     | • expression OP_MINUSEQ expression SEMICOLON
   57     | • expression OP_MULTEQ expression SEMICOLON
   58     | • expression OP_DIVEQ expression SEMICOLON
   59     | • expression OP_MODEQ expression SEMICOLON
   60     | • expression SEMICOLON
   61     | • error SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  113 block: decl_list stmt_list •  [KW_ENDDEF]

    error             shift, and go to state 156
    IDENTIFIER        shift, and go to state 157
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 158
    KW_FOR            shift, and go to state 159
    KW_WHILE          shift, and go to state 160
    KW_BREAK          shift, and go to state 161
    KW_CONTINUE       shift, and go to state 162
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 163
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 164
    HASH              shift, and go to state 165

    KW_ENDDEF  reduce using rule 113 (block)

    stmt                go to state 166
    expression          go to state 167
    primary_expression  go to state 50


State 145

   66 component_member: hash_ident_list LBRACKET CONST_INT • RBRACKET COLON type SEMICOLON

    RBRACKET  shift, and go to state 168


State 146

   65 component_member: hash_ident_list COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 169


State 147

   70 hash_ident_list: hash_ident_list COMMA HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 170


State 148

   13 var_declaration: ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 13 (var_declaration)


State 149

   75 arg_list: arg_list COMMA expression •  [RPAREN, COMMA]
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80

    $default  reduce using rule 75 (arg_list)


State 150

   99 expression: primary_expression DOT IDENTIFIER LPAREN RPAREN •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
  112 primary_expression: primary_expression DOT IDENTIFIER LPAREN RPAREN •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]

    KW_FOR      reduce using rule 99 (expression)
    KW_FOR      [reduce using rule 112 (primary_expression)]
    KW_AND      reduce using rule 99 (expression)
    KW_AND      [reduce using rule 112 (primary_expression)]
    KW_OR       reduce using rule 99 (expression)
    KW_OR       [reduce using rule 112 (primary_expression)]
    OP_ASSIGN   reduce using rule 99 (expression)
    OP_ASSIGN   [reduce using rule 112 (primary_expression)]
    OP_PLUSEQ   reduce using rule 99 (expression)
    OP_PLUSEQ   [reduce using rule 112 (primary_expression)]
    OP_MINUSEQ  reduce using rule 99 (expression)
    OP_MINUSEQ  [reduce using rule 112 (primary_expression)]
    OP_MULTEQ   reduce using rule 99 (expression)
    OP_MULTEQ   [reduce using rule 112 (primary_expression)]
    OP_DIVEQ    reduce using rule 99 (expression)
    OP_DIVEQ    [reduce using rule 112 (primary_expression)]
    OP_MODEQ    reduce using rule 99 (expression)
    OP_MODEQ    [reduce using rule 112 (primary_expression)]
    OP_POW      reduce using rule 99 (expression)
    OP_POW      [reduce using rule 112 (primary_expression)]
    OP_EQ       reduce using rule 99 (expression)
    OP_EQ       [reduce using rule 112 (primary_expression)]
    OP_NEQ      reduce using rule 99 (expression)
    OP_NEQ      [reduce using rule 112 (primary_expression)]
    OP_LT       reduce using rule 99 (expression)
    OP_LT       [reduce using rule 112 (primary_expression)]
    OP_LEQ      reduce using rule 99 (expression)
    OP_LEQ      [reduce using rule 112 (primary_expression)]
    OP_GT       reduce using rule 99 (expression)
    OP_GT       [reduce using rule 112 (primary_expression)]
    OP_GEQ      reduce using rule 99 (expression)
    OP_GEQ      [reduce using rule 112 (primary_expression)]
    OP_PLUS     reduce using rule 99 (expression)
    OP_PLUS     [reduce using rule 112 (primary_expression)]
    OP_MINUS    reduce using rule 99 (expression)
    OP_MINUS    [reduce using rule 112 (primary_expression)]
    OP_MULT     reduce using rule 99 (expression)
    OP_MULT     [reduce using rule 112 (primary_expression)]
    OP_DIV      reduce using rule 99 (expression)
    OP_DIV      [reduce using rule 112 (primary_expression)]
    OP_MOD      reduce using rule 99 (expression)
    OP_MOD      [reduce using rule 112 (primary_expression)]
    LPAREN      reduce using rule 99 (expression)
    LPAREN      [reduce using rule 112 (primary_expression)]
    RPAREN      reduce using rule 99 (expression)
    RPAREN      [reduce using rule 112 (primary_expression)]
    LBRACKET    reduce using rule 99 (expression)
    LBRACKET    [reduce using rule 112 (primary_expression)]
    RBRACKET    reduce using rule 99 (expression)
    RBRACKET    [reduce using rule 112 (primary_expression)]
    COLON       reduce using rule 99 (expression)
    COLON       [reduce using rule 112 (primary_expression)]
    SEMICOLON   reduce using rule 99 (expression)
    SEMICOLON   [reduce using rule 112 (primary_expression)]
    COMMA       reduce using rule 99 (expression)
    COMMA       [reduce using rule 112 (primary_expression)]
    DOT         reduce using rule 99 (expression)
    DOT         [reduce using rule 112 (primary_expression)]
    $default    reduce using rule 99 (expression)

    reduce/reduce conflict on tokens KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT:
       99 expression: primary_expression DOT IDENTIFIER LPAREN RPAREN •
      112 primary_expression: primary_expression DOT IDENTIFIER LPAREN RPAREN •
      Example: primary_expression DOT IDENTIFIER LPAREN RPAREN •
      First reduce derivation
        expression
        ↳ 99: primary_expression DOT IDENTIFIER LPAREN RPAREN •
      Second reduce derivation
        expression
        ↳ 76: primary_expression
              ↳ 112: primary_expression DOT IDENTIFIER LPAREN RPAREN •



State 151

   75 arg_list: arg_list • COMMA expression
   98 expression: primary_expression DOT IDENTIFIER LPAREN arg_list • RPAREN
  111 primary_expression: primary_expression DOT IDENTIFIER LPAREN arg_list • RPAREN

    RPAREN  shift, and go to state 171
    COMMA   shift, and go to state 133


State 152

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 172


State 153

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON • block KW_ENDDEF SEMICOLON
  113 block: • decl_list stmt_list
  114 decl_list: ε •
  115          | • decl_list var_declaration

    $default  reduce using rule 114 (decl_list)

    block      go to state 173
    decl_list  go to state 125


State 154

   20 param_decl_list: param_decl_list COMMA IDENTIFIER COLON type •

    $default  reduce using rule 20 (param_decl_list)


State 155

   21 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON block KW_ENDDEF SEMICOLON •

    $default  reduce using rule 21 (main_function)


State 156

   61 stmt: error • SEMICOLON

    SEMICOLON  shift, and go to state 174


State 157

   29 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
   31     | IDENTIFIER • LPAREN RPAREN SEMICOLON
   32     | IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON
   42     | IDENTIFIER • OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER • OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   45     | IDENTIFIER • OP_PLUSEQ expression SEMICOLON
   46     | IDENTIFIER • OP_MINUSEQ expression SEMICOLON
   47     | IDENTIFIER • OP_MULTEQ expression SEMICOLON
   48     | IDENTIFIER • OP_DIVEQ expression SEMICOLON
   49     | IDENTIFIER • OP_MODEQ expression SEMICOLON
  107 primary_expression: IDENTIFIER •  [KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, SEMICOLON, DOT]
  109                   | IDENTIFIER • LPAREN arg_list RPAREN
  110                   | IDENTIFIER • LPAREN RPAREN

    OP_ASSIGN   shift, and go to state 175
    OP_PLUSEQ   shift, and go to state 176
    OP_MINUSEQ  shift, and go to state 177
    OP_MULTEQ   shift, and go to state 178
    OP_DIVEQ    shift, and go to state 179
    OP_MODEQ    shift, and go to state 180
    OP_DEFINE   shift, and go to state 181
    LPAREN      shift, and go to state 182

    OP_ASSIGN   [reduce using rule 107 (primary_expression)]
    OP_PLUSEQ   [reduce using rule 107 (primary_expression)]
    OP_MINUSEQ  [reduce using rule 107 (primary_expression)]
    OP_MULTEQ   [reduce using rule 107 (primary_expression)]
    OP_DIVEQ    [reduce using rule 107 (primary_expression)]
    OP_MODEQ    [reduce using rule 107 (primary_expression)]
    LPAREN      [reduce using rule 107 (primary_expression)]
    $default    reduce using rule 107 (primary_expression)

    shift/reduce conflict on token OP_ASSIGN:
      107 primary_expression: IDENTIFIER •
       29 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Example: IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Shift derivation
        stmt
        ↳ 29: IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 30: expression                OP_ASSIGN expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 107: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
       31 stmt: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Example: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 31: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 60: expression                                              SEMICOLON
              ↳ 100: expression                LPAREN arg_list RPAREN
                     ↳ 76: primary_expression         ↳ 100: ε
                           ↳ 107: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
       32 stmt: IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON
      Example: IDENTIFIER • LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 32: IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON
                                  ↳ 32: ε
      Reduce derivation
        stmt
        ↳ 60: expression                                              SEMICOLON
              ↳ 100: expression                LPAREN arg_list RPAREN
                     ↳ 76: primary_expression         ↳ 100: ε
                           ↳ 107: IDENTIFIER •

    shift/reduce conflict on token OP_PLUSEQ:
      107 primary_expression: IDENTIFIER •
       45 stmt: IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Example: IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 45: IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 55: expression                OP_PLUSEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 107: IDENTIFIER •

    shift/reduce conflict on token OP_MINUSEQ:
      107 primary_expression: IDENTIFIER •
       46 stmt: IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Example: IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 46: IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 56: expression                OP_MINUSEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 107: IDENTIFIER •

    shift/reduce conflict on token OP_MULTEQ:
      107 primary_expression: IDENTIFIER •
       47 stmt: IDENTIFIER • OP_MULTEQ expression SEMICOLON
      Example: IDENTIFIER • OP_MULTEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 47: IDENTIFIER • OP_MULTEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 57: expression                OP_MULTEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 107: IDENTIFIER •

    shift/reduce conflict on token OP_DIVEQ:
      107 primary_expression: IDENTIFIER •
       48 stmt: IDENTIFIER • OP_DIVEQ expression SEMICOLON
      Example: IDENTIFIER • OP_DIVEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 48: IDENTIFIER • OP_DIVEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 58: expression                OP_DIVEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 107: IDENTIFIER •

    shift/reduce conflict on token OP_MODEQ:
      107 primary_expression: IDENTIFIER •
       49 stmt: IDENTIFIER • OP_MODEQ expression SEMICOLON
      Example: IDENTIFIER • OP_MODEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 49: IDENTIFIER • OP_MODEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 59: expression                OP_MODEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 107: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
      109 primary_expression: IDENTIFIER • LPAREN arg_list RPAREN
      Example: IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 109: IDENTIFIER • LPAREN arg_list RPAREN
                                         ↳ 109: ε
      Reduce derivation
        expression
        ↳ 100: expression                LPAREN arg_list RPAREN
               ↳ 76: primary_expression         ↳ 100: ε
                     ↳ 107: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
      110 primary_expression: IDENTIFIER • LPAREN RPAREN
      Example: IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 110: IDENTIFIER • LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                LPAREN arg_list RPAREN
               ↳ 76: primary_expression         ↳ 100: ε
                     ↳ 107: IDENTIFIER •



State 158

   34 stmt: KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    LPAREN  shift, and go to state 183


State 159

   36 stmt: KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER  shift, and go to state 184


State 160

   44 stmt: KW_WHILE • LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON

    LPAREN  shift, and go to state 185


State 161

   38 stmt: KW_BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 186


State 162

   39 stmt: KW_CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 187


State 163

   33 stmt: KW_RETURN • expression SEMICOLON
   41     | KW_RETURN • SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 188
    HASH              shift, and go to state 48

    expression          go to state 189
    primary_expression  go to state 50


State 164

   40 stmt: SEMICOLON •

    $default  reduce using rule 40 (stmt)


State 165

   50 stmt: HASH • IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | HASH • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | HASH • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | HASH • IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | HASH • IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
  108 primary_expression: HASH • IDENTIFIER

    IDENTIFIER  shift, and go to state 190


State 166

   23 stmt_list: stmt_list stmt •

    $default  reduce using rule 23 (stmt_list)


State 167

   30 stmt: expression • OP_ASSIGN expression SEMICOLON
   55     | expression • OP_PLUSEQ expression SEMICOLON
   56     | expression • OP_MINUSEQ expression SEMICOLON
   57     | expression • OP_MULTEQ expression SEMICOLON
   58     | expression • OP_DIVEQ expression SEMICOLON
   59     | expression • OP_MODEQ expression SEMICOLON
   60     | expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND      shift, and go to state 63
    KW_OR       shift, and go to state 64
    OP_ASSIGN   shift, and go to state 191
    OP_PLUSEQ   shift, and go to state 192
    OP_MINUSEQ  shift, and go to state 193
    OP_MULTEQ   shift, and go to state 194
    OP_DIVEQ    shift, and go to state 195
    OP_MODEQ    shift, and go to state 196
    OP_POW      shift, and go to state 65
    OP_EQ       shift, and go to state 66
    OP_NEQ      shift, and go to state 67
    OP_LT       shift, and go to state 68
    OP_LEQ      shift, and go to state 69
    OP_GT       shift, and go to state 70
    OP_GEQ      shift, and go to state 71
    OP_PLUS     shift, and go to state 72
    OP_MINUS    shift, and go to state 73
    OP_MULT     shift, and go to state 74
    OP_DIV      shift, and go to state 75
    OP_MOD      shift, and go to state 76
    LPAREN      shift, and go to state 77
    LBRACKET    shift, and go to state 78
    SEMICOLON   shift, and go to state 197
    DOT         shift, and go to state 80


State 168

   66 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 198


State 169

   65 component_member: hash_ident_list COLON type SEMICOLON •

    $default  reduce using rule 65 (component_member)


State 170

   70 hash_ident_list: hash_ident_list COMMA HASH IDENTIFIER •

    $default  reduce using rule 70 (hash_ident_list)


State 171

   98 expression: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]
  111 primary_expression: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •  [KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT]

    KW_FOR      reduce using rule 98 (expression)
    KW_FOR      [reduce using rule 111 (primary_expression)]
    KW_AND      reduce using rule 98 (expression)
    KW_AND      [reduce using rule 111 (primary_expression)]
    KW_OR       reduce using rule 98 (expression)
    KW_OR       [reduce using rule 111 (primary_expression)]
    OP_ASSIGN   reduce using rule 98 (expression)
    OP_ASSIGN   [reduce using rule 111 (primary_expression)]
    OP_PLUSEQ   reduce using rule 98 (expression)
    OP_PLUSEQ   [reduce using rule 111 (primary_expression)]
    OP_MINUSEQ  reduce using rule 98 (expression)
    OP_MINUSEQ  [reduce using rule 111 (primary_expression)]
    OP_MULTEQ   reduce using rule 98 (expression)
    OP_MULTEQ   [reduce using rule 111 (primary_expression)]
    OP_DIVEQ    reduce using rule 98 (expression)
    OP_DIVEQ    [reduce using rule 111 (primary_expression)]
    OP_MODEQ    reduce using rule 98 (expression)
    OP_MODEQ    [reduce using rule 111 (primary_expression)]
    OP_POW      reduce using rule 98 (expression)
    OP_POW      [reduce using rule 111 (primary_expression)]
    OP_EQ       reduce using rule 98 (expression)
    OP_EQ       [reduce using rule 111 (primary_expression)]
    OP_NEQ      reduce using rule 98 (expression)
    OP_NEQ      [reduce using rule 111 (primary_expression)]
    OP_LT       reduce using rule 98 (expression)
    OP_LT       [reduce using rule 111 (primary_expression)]
    OP_LEQ      reduce using rule 98 (expression)
    OP_LEQ      [reduce using rule 111 (primary_expression)]
    OP_GT       reduce using rule 98 (expression)
    OP_GT       [reduce using rule 111 (primary_expression)]
    OP_GEQ      reduce using rule 98 (expression)
    OP_GEQ      [reduce using rule 111 (primary_expression)]
    OP_PLUS     reduce using rule 98 (expression)
    OP_PLUS     [reduce using rule 111 (primary_expression)]
    OP_MINUS    reduce using rule 98 (expression)
    OP_MINUS    [reduce using rule 111 (primary_expression)]
    OP_MULT     reduce using rule 98 (expression)
    OP_MULT     [reduce using rule 111 (primary_expression)]
    OP_DIV      reduce using rule 98 (expression)
    OP_DIV      [reduce using rule 111 (primary_expression)]
    OP_MOD      reduce using rule 98 (expression)
    OP_MOD      [reduce using rule 111 (primary_expression)]
    LPAREN      reduce using rule 98 (expression)
    LPAREN      [reduce using rule 111 (primary_expression)]
    RPAREN      reduce using rule 98 (expression)
    RPAREN      [reduce using rule 111 (primary_expression)]
    LBRACKET    reduce using rule 98 (expression)
    LBRACKET    [reduce using rule 111 (primary_expression)]
    RBRACKET    reduce using rule 98 (expression)
    RBRACKET    [reduce using rule 111 (primary_expression)]
    COLON       reduce using rule 98 (expression)
    COLON       [reduce using rule 111 (primary_expression)]
    SEMICOLON   reduce using rule 98 (expression)
    SEMICOLON   [reduce using rule 111 (primary_expression)]
    COMMA       reduce using rule 98 (expression)
    COMMA       [reduce using rule 111 (primary_expression)]
    DOT         reduce using rule 98 (expression)
    DOT         [reduce using rule 111 (primary_expression)]
    $default    reduce using rule 98 (expression)

    reduce/reduce conflict on tokens KW_FOR, KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, RPAREN, LBRACKET, RBRACKET, COLON, SEMICOLON, COMMA, DOT:
       98 expression: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •
      111 primary_expression: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •
      Example: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •
      First reduce derivation
        expression
        ↳ 98: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •
      Second reduce derivation
        expression
        ↳ 76: primary_expression
              ↳ 111: primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN •



State 172

   16 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN COLON block KW_ENDDEF SEMICOLON •

    $default  reduce using rule 16 (function)


State 173

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block • KW_ENDDEF SEMICOLON

    KW_ENDDEF  shift, and go to state 199


State 174

   61 stmt: error SEMICOLON •

    $default  reduce using rule 61 (stmt)


State 175

   29 stmt: IDENTIFIER OP_ASSIGN • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 200
    primary_expression  go to state 50


State 176

   45 stmt: IDENTIFIER OP_PLUSEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 201
    primary_expression  go to state 50


State 177

   46 stmt: IDENTIFIER OP_MINUSEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 202
    primary_expression  go to state 50


State 178

   47 stmt: IDENTIFIER OP_MULTEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 203
    primary_expression  go to state 50


State 179

   48 stmt: IDENTIFIER OP_DIVEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 204
    primary_expression  go to state 50


State 180

   49 stmt: IDENTIFIER OP_MODEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 205
    primary_expression  go to state 50


State 181

   42 stmt: IDENTIFIER OP_DEFINE • LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE • LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON

    LBRACKET  shift, and go to state 206


State 182

   31 stmt: IDENTIFIER LPAREN • RPAREN SEMICOLON
   32     | IDENTIFIER LPAREN • arg_list RPAREN SEMICOLON
   73 arg_list: ε •  [RPAREN, COMMA]
   74         | • expression
   75         | • arg_list COMMA expression
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  109                   | IDENTIFIER LPAREN • arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  110                   | IDENTIFIER LPAREN • RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 207
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 73 (arg_list)]
    $default  reduce using rule 73 (arg_list)

    arg_list            go to state 208
    expression          go to state 97
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
       31 stmt: IDENTIFIER LPAREN • RPAREN SEMICOLON
      First example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list IDENTIFIER LPAREN • RPAREN SEMICOLON stmt_list KW_ENDDEF SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                               $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 8: main_function
                                                          ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                       KW_ENDDEF SEMICOLON
                                                                                                   ↳ 113: stmt_list                                                  stmt_list
                                                                                                          ↳ 23: stmt_list stmt
                                                                                                                          ↳ 31: IDENTIFIER LPAREN • RPAREN SEMICOLON
      Second example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON decl_list stmt_list IDENTIFIER LPAREN • RPAREN SEMICOLON KW_ENDDEF SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                       $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 8: main_function
                                                          ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                               KW_ENDDEF SEMICOLON
                                                                                                   ↳ 113: decl_list stmt_list
                                                                                                                    ↳ 23: stmt_list stmt
                                                                                                                                    ↳ 32: IDENTIFIER LPAREN arg_list  RPAREN SEMICOLON
                                                                                                                                                            ↳ 73: ε •

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
      110 primary_expression: IDENTIFIER LPAREN • RPAREN
      First example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list IDENTIFIER LPAREN • RPAREN OP_ASSIGN expression SEMICOLON stmt_list KW_ENDDEF SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: program                                                                                                                                                                                                                 $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 8: main_function
                                                          ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                                                         KW_ENDDEF SEMICOLON
                                                                                                   ↳ 113: stmt_list                                                                                    stmt_list
                                                                                                          ↳ 23: stmt_list stmt
                                                                                                                          ↳ 30: expression                              OP_ASSIGN expression SEMICOLON
                                                                                                                                ↳ 76: primary_expression
                                                                                                                                      ↳ 110: IDENTIFIER LPAREN • RPAREN
      Second example: macro_def_list top_level_list KW_DEF KW_MAIN LPAREN RPAREN COLON decl_list stmt_list IDENTIFIER LPAREN • RPAREN SEMICOLON KW_ENDDEF SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: program                                                                                                                                                                                       $end
             ↳ 1: macro_def_list top_level_list
                                 ↳ 6: top_level_list top_level
                                                     ↳ 8: main_function
                                                          ↳ 21: KW_DEF KW_MAIN LPAREN RPAREN COLON block                                                                               KW_ENDDEF SEMICOLON
                                                                                                   ↳ 113: decl_list stmt_list
                                                                                                                    ↳ 23: stmt_list stmt
                                                                                                                                    ↳ 32: IDENTIFIER LPAREN arg_list  RPAREN SEMICOLON
                                                                                                                                                            ↳ 73: ε •



State 183

   34 stmt: KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 209
    primary_expression  go to state 50


State 184

   36 stmt: KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 210


State 185

   44 stmt: KW_WHILE LPAREN • expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 211
    primary_expression  go to state 50


State 186

   38 stmt: KW_BREAK SEMICOLON •

    $default  reduce using rule 38 (stmt)


State 187

   39 stmt: KW_CONTINUE SEMICOLON •

    $default  reduce using rule 39 (stmt)


State 188

   41 stmt: KW_RETURN SEMICOLON •

    $default  reduce using rule 41 (stmt)


State 189

   33 stmt: KW_RETURN expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 212
    DOT        shift, and go to state 80


State 190

   50 stmt: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
   51     | HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
   52     | HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
   53     | HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | HASH IDENTIFIER • DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
  108 primary_expression: HASH IDENTIFIER •  [KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, SEMICOLON, DOT]

    OP_ASSIGN   shift, and go to state 213
    OP_PLUSEQ   shift, and go to state 214
    OP_MINUSEQ  shift, and go to state 215
    DOT         shift, and go to state 216

    OP_ASSIGN   [reduce using rule 108 (primary_expression)]
    OP_PLUSEQ   [reduce using rule 108 (primary_expression)]
    OP_MINUSEQ  [reduce using rule 108 (primary_expression)]
    DOT         [reduce using rule 108 (primary_expression)]
    $default    reduce using rule 108 (primary_expression)

    shift/reduce conflict on token OP_ASSIGN:
      108 primary_expression: HASH IDENTIFIER •
       50 stmt: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Example: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Shift derivation
        stmt
        ↳ 50: HASH IDENTIFIER • OP_ASSIGN expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 30: expression                     OP_ASSIGN expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 108: HASH IDENTIFIER •

    shift/reduce conflict on token OP_PLUSEQ:
      108 primary_expression: HASH IDENTIFIER •
       51 stmt: HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Example: HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 51: HASH IDENTIFIER • OP_PLUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 55: expression                     OP_PLUSEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 108: HASH IDENTIFIER •

    shift/reduce conflict on token OP_MINUSEQ:
      108 primary_expression: HASH IDENTIFIER •
       52 stmt: HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Example: HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Shift derivation
        stmt
        ↳ 52: HASH IDENTIFIER • OP_MINUSEQ expression SEMICOLON
      Reduce derivation
        stmt
        ↳ 56: expression                     OP_MINUSEQ expression SEMICOLON
              ↳ 76: primary_expression
                    ↳ 108: HASH IDENTIFIER •

    shift/reduce conflict on token DOT:
      108 primary_expression: HASH IDENTIFIER •
       53 stmt: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Example: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 53: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 60: expression                                                           SEMICOLON
              ↳ 98: primary_expression       DOT IDENTIFIER LPAREN arg_list RPAREN
                    ↳ 108: HASH IDENTIFIER •                       ↳ 98: ε

    shift/reduce conflict on token DOT:
      108 primary_expression: HASH IDENTIFIER •
       54 stmt: HASH IDENTIFIER • DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
      Example: HASH IDENTIFIER • DOT IDENTIFIER LPAREN RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 54: HASH IDENTIFIER • DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
                                                      ↳ 54: ε
      Reduce derivation
        stmt
        ↳ 60: expression                                                           SEMICOLON
              ↳ 98: primary_expression       DOT IDENTIFIER LPAREN arg_list RPAREN
                    ↳ 108: HASH IDENTIFIER •                       ↳ 98: ε



State 191

   30 stmt: expression OP_ASSIGN • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 217
    primary_expression  go to state 50


State 192

   55 stmt: expression OP_PLUSEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 218
    primary_expression  go to state 50


State 193

   56 stmt: expression OP_MINUSEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 219
    primary_expression  go to state 50


State 194

   57 stmt: expression OP_MULTEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 220
    primary_expression  go to state 50


State 195

   58 stmt: expression OP_DIVEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 221
    primary_expression  go to state 50


State 196

   59 stmt: expression OP_MODEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 222
    primary_expression  go to state 50


State 197

   60 stmt: expression SEMICOLON •

    $default  reduce using rule 60 (stmt)


State 198

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   66 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 223


State 199

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 224


State 200

   29 stmt: IDENTIFIER OP_ASSIGN expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 225
    DOT        shift, and go to state 80


State 201

   45 stmt: IDENTIFIER OP_PLUSEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 226
    DOT        shift, and go to state 80


State 202

   46 stmt: IDENTIFIER OP_MINUSEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 227
    DOT        shift, and go to state 80


State 203

   47 stmt: IDENTIFIER OP_MULTEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 228
    DOT        shift, and go to state 80


State 204

   48 stmt: IDENTIFIER OP_DIVEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 229
    DOT        shift, and go to state 80


State 205

   49 stmt: IDENTIFIER OP_MODEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 230
    DOT        shift, and go to state 80


State 206

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET • expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE LBRACKET • expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 231
    primary_expression  go to state 50


State 207

   31 stmt: IDENTIFIER LPAREN RPAREN • SEMICOLON
  110 primary_expression: IDENTIFIER LPAREN RPAREN •  [KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, SEMICOLON, DOT]

    SEMICOLON  shift, and go to state 232

    SEMICOLON  [reduce using rule 110 (primary_expression)]
    $default   reduce using rule 110 (primary_expression)

    shift/reduce conflict on token SEMICOLON:
      110 primary_expression: IDENTIFIER LPAREN RPAREN •
       31 stmt: IDENTIFIER LPAREN RPAREN • SEMICOLON
      Example: IDENTIFIER LPAREN RPAREN • SEMICOLON
      Shift derivation
        stmt
        ↳ 31: IDENTIFIER LPAREN RPAREN • SEMICOLON
      Reduce derivation
        stmt
        ↳ 60: expression                              SEMICOLON
              ↳ 76: primary_expression
                    ↳ 110: IDENTIFIER LPAREN RPAREN •



State 208

   32 stmt: IDENTIFIER LPAREN arg_list • RPAREN SEMICOLON
   75 arg_list: arg_list • COMMA expression
  109 primary_expression: IDENTIFIER LPAREN arg_list • RPAREN

    RPAREN  shift, and go to state 233
    COMMA   shift, and go to state 133


State 209

   34 stmt: KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    RPAREN    shift, and go to state 234
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80


State 210

   36 stmt: KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    LBRACKET  shift, and go to state 235


State 211

   44 stmt: KW_WHILE LPAREN expression • RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    RPAREN    shift, and go to state 236
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80


State 212

   33 stmt: KW_RETURN expression SEMICOLON •

    $default  reduce using rule 33 (stmt)


State 213

   50 stmt: HASH IDENTIFIER OP_ASSIGN • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 237
    primary_expression  go to state 50


State 214

   51 stmt: HASH IDENTIFIER OP_PLUSEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 238
    primary_expression  go to state 50


State 215

   52 stmt: HASH IDENTIFIER OP_MINUSEQ • expression SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 239
    primary_expression  go to state 50


State 216

   53 stmt: HASH IDENTIFIER DOT • IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | HASH IDENTIFIER DOT • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 240


State 217

   30 stmt: expression OP_ASSIGN expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 241
    DOT        shift, and go to state 80


State 218

   55 stmt: expression OP_PLUSEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 242
    DOT        shift, and go to state 80


State 219

   56 stmt: expression OP_MINUSEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 243
    DOT        shift, and go to state 80


State 220

   57 stmt: expression OP_MULTEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 244
    DOT        shift, and go to state 80


State 221

   58 stmt: expression OP_DIVEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 245
    DOT        shift, and go to state 80


State 222

   59 stmt: expression OP_MODEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 246
    DOT        shift, and go to state 80


State 223

   66 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 247


State 224

   15 function: KW_DEF IDENTIFIER LPAREN param_list RPAREN OP_ARROW type COLON block KW_ENDDEF SEMICOLON •

    $default  reduce using rule 15 (function)


State 225

   29 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 29 (stmt)


State 226

   45 stmt: IDENTIFIER OP_PLUSEQ expression SEMICOLON •

    $default  reduce using rule 45 (stmt)


State 227

   46 stmt: IDENTIFIER OP_MINUSEQ expression SEMICOLON •

    $default  reduce using rule 46 (stmt)


State 228

   47 stmt: IDENTIFIER OP_MULTEQ expression SEMICOLON •

    $default  reduce using rule 47 (stmt)


State 229

   48 stmt: IDENTIFIER OP_DIVEQ expression SEMICOLON •

    $default  reduce using rule 48 (stmt)


State 230

   49 stmt: IDENTIFIER OP_MODEQ expression SEMICOLON •

    $default  reduce using rule 49 (stmt)


State 231

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression • KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE LBRACKET expression • KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_FOR    shift, and go to state 248
    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    DOT       shift, and go to state 80


State 232

   31 stmt: IDENTIFIER LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 31 (stmt)


State 233

   32 stmt: IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON
  109 primary_expression: IDENTIFIER LPAREN arg_list RPAREN •  [KW_AND, KW_OR, OP_ASSIGN, OP_PLUSEQ, OP_MINUSEQ, OP_MULTEQ, OP_DIVEQ, OP_MODEQ, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, SEMICOLON, DOT]

    SEMICOLON  shift, and go to state 249

    SEMICOLON  [reduce using rule 109 (primary_expression)]
    $default   reduce using rule 109 (primary_expression)

    shift/reduce conflict on token SEMICOLON:
      109 primary_expression: IDENTIFIER LPAREN arg_list RPAREN •
       32 stmt: IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON
      Example: IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON
      Shift derivation
        stmt
        ↳ 32: IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON
      Reduce derivation
        stmt
        ↳ 60: expression                                       SEMICOLON
              ↳ 76: primary_expression
                    ↳ 109: IDENTIFIER LPAREN arg_list RPAREN •



State 234

   34 stmt: KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 250


State 235

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 251
    primary_expression  go to state 50


State 236

   44 stmt: KW_WHILE LPAREN expression RPAREN • COLON stmt_list KW_ENDWHILE SEMICOLON

    COLON  shift, and go to state 252


State 237

   50 stmt: HASH IDENTIFIER OP_ASSIGN expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 253
    DOT        shift, and go to state 80


State 238

   51 stmt: HASH IDENTIFIER OP_PLUSEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 254
    DOT        shift, and go to state 80


State 239

   52 stmt: HASH IDENTIFIER OP_MINUSEQ expression • SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND     shift, and go to state 63
    KW_OR      shift, and go to state 64
    OP_POW     shift, and go to state 65
    OP_EQ      shift, and go to state 66
    OP_NEQ     shift, and go to state 67
    OP_LT      shift, and go to state 68
    OP_LEQ     shift, and go to state 69
    OP_GT      shift, and go to state 70
    OP_GEQ     shift, and go to state 71
    OP_PLUS    shift, and go to state 72
    OP_MINUS   shift, and go to state 73
    OP_MULT    shift, and go to state 74
    OP_DIV     shift, and go to state 75
    OP_MOD     shift, and go to state 76
    LPAREN     shift, and go to state 77
    LBRACKET   shift, and go to state 78
    SEMICOLON  shift, and go to state 255
    DOT        shift, and go to state 80


State 240

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER • LPAREN RPAREN SEMICOLON
   54     | HASH IDENTIFIER DOT IDENTIFIER • LPAREN arg_list RPAREN SEMICOLON

    LPAREN  shift, and go to state 256


State 241

   30 stmt: expression OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 30 (stmt)


State 242

   55 stmt: expression OP_PLUSEQ expression SEMICOLON •

    $default  reduce using rule 55 (stmt)


State 243

   56 stmt: expression OP_MINUSEQ expression SEMICOLON •

    $default  reduce using rule 56 (stmt)


State 244

   57 stmt: expression OP_MULTEQ expression SEMICOLON •

    $default  reduce using rule 57 (stmt)


State 245

   58 stmt: expression OP_DIVEQ expression SEMICOLON •

    $default  reduce using rule 58 (stmt)


State 246

   59 stmt: expression OP_MODEQ expression SEMICOLON •

    $default  reduce using rule 59 (stmt)


State 247

   66 component_member: hash_ident_list LBRACKET CONST_INT RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 66 (component_member)


State 248

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR • IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR • IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 257


State 249

   32 stmt: IDENTIFIER LPAREN arg_list RPAREN SEMICOLON •

    $default  reduce using rule 32 (stmt)


State 250

   22 stmt_list: ε •
   23          | • stmt_list stmt
   34 stmt: KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 258


State 251

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    COLON     shift, and go to state 259
    DOT       shift, and go to state 80


State 252

   22 stmt_list: ε •
   23          | • stmt_list stmt
   44 stmt: KW_WHILE LPAREN expression RPAREN COLON • stmt_list KW_ENDWHILE SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 260


State 253

   50 stmt: HASH IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 50 (stmt)


State 254

   51 stmt: HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON •

    $default  reduce using rule 51 (stmt)


State 255

   52 stmt: HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON •

    $default  reduce using rule 52 (stmt)


State 256

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
   54     | HASH IDENTIFIER DOT IDENTIFIER LPAREN • arg_list RPAREN SEMICOLON
   73 arg_list: ε •  [RPAREN, COMMA]
   74         | • expression
   75         | • arg_list COMMA expression
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    RPAREN            shift, and go to state 261
    HASH              shift, and go to state 48

    RPAREN    [reduce using rule 73 (arg_list)]
    $default  reduce using rule 73 (arg_list)

    arg_list            go to state 262
    expression          go to state 97
    primary_expression  go to state 50

    shift/reduce conflict on token RPAREN:
       73 arg_list: ε •
       53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
      Example: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
      Shift derivation
        stmt
        ↳ 53: HASH IDENTIFIER DOT IDENTIFIER LPAREN • RPAREN SEMICOLON
      Reduce derivation
        stmt
        ↳ 54: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list  RPAREN SEMICOLON
                                                    ↳ 73: ε •



State 257

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER • COLON expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER • COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON

    COLON  shift, and go to state 263


State 258

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   34     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   45     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | • expression OP_PLUSEQ expression SEMICOLON
   56     | • expression OP_MINUSEQ expression SEMICOLON
   57     | • expression OP_MULTEQ expression SEMICOLON
   58     | • expression OP_DIVEQ expression SEMICOLON
   59     | • expression OP_MODEQ expression SEMICOLON
   60     | • expression SEMICOLON
   61     | • error SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    error             shift, and go to state 156
    IDENTIFIER        shift, and go to state 157
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 158
    KW_ELSE           shift, and go to state 264
    KW_ENDIF          shift, and go to state 265
    KW_FOR            shift, and go to state 159
    KW_WHILE          shift, and go to state 160
    KW_BREAK          shift, and go to state 161
    KW_CONTINUE       shift, and go to state 162
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 163
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 164
    HASH              shift, and go to state 165

    stmt                go to state 166
    expression          go to state 167
    primary_expression  go to state 50


State 259

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 266
    primary_expression  go to state 50


State 260

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   44     | KW_WHILE LPAREN expression RPAREN COLON stmt_list • KW_ENDWHILE SEMICOLON
   45     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | • expression OP_PLUSEQ expression SEMICOLON
   56     | • expression OP_MINUSEQ expression SEMICOLON
   57     | • expression OP_MULTEQ expression SEMICOLON
   58     | • expression OP_DIVEQ expression SEMICOLON
   59     | • expression OP_MODEQ expression SEMICOLON
   60     | • expression SEMICOLON
   61     | • error SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    error             shift, and go to state 156
    IDENTIFIER        shift, and go to state 157
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 158
    KW_FOR            shift, and go to state 159
    KW_WHILE          shift, and go to state 160
    KW_ENDWHILE       shift, and go to state 267
    KW_BREAK          shift, and go to state 161
    KW_CONTINUE       shift, and go to state 162
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 163
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 164
    HASH              shift, and go to state 165

    stmt                go to state 166
    expression          go to state 167
    primary_expression  go to state 50


State 261

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 268


State 262

   54 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list • RPAREN SEMICOLON
   75 arg_list: arg_list • COMMA expression

    RPAREN  shift, and go to state 269
    COMMA   shift, and go to state 133


State 263

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON • expression RBRACKET COLON type SEMICOLON
   43     | IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON • type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 270
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_INTEGER        shift, and go to state 33
    KW_SCALAR         shift, and go to state 34
    KW_STR            shift, and go to state 35
    KW_BOOL           shift, and go to state 36
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    type                go to state 271
    expression          go to state 272
    primary_expression  go to state 50


State 264

   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE • COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 273


State 265

   34 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 274


State 266

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    RBRACKET  shift, and go to state 275
    COLON     shift, and go to state 276
    DOT       shift, and go to state 80


State 267

   44 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE • SEMICOLON

    SEMICOLON  shift, and go to state 277


State 268

   53 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 53 (stmt)


State 269

   54 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 278


State 270

   28 type: IDENTIFIER •  [KW_IN]
  107 primary_expression: IDENTIFIER •  [KW_AND, KW_OR, OP_POW, OP_EQ, OP_NEQ, OP_LT, OP_LEQ, OP_GT, OP_GEQ, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_MOD, LPAREN, LBRACKET, RBRACKET, DOT]
  109                   | IDENTIFIER • LPAREN arg_list RPAREN
  110                   | IDENTIFIER • LPAREN RPAREN

    LPAREN  shift, and go to state 58

    KW_IN     reduce using rule 28 (type)
    LPAREN    [reduce using rule 107 (primary_expression)]
    $default  reduce using rule 107 (primary_expression)

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
      109 primary_expression: IDENTIFIER • LPAREN arg_list RPAREN
      Example: IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 109: IDENTIFIER • LPAREN arg_list RPAREN
                                         ↳ 109: ε
      Reduce derivation
        expression
        ↳ 100: expression                LPAREN arg_list RPAREN
               ↳ 76: primary_expression         ↳ 100: ε
                     ↳ 107: IDENTIFIER •

    shift/reduce conflict on token LPAREN:
      107 primary_expression: IDENTIFIER •
      110 primary_expression: IDENTIFIER • LPAREN RPAREN
      Example: IDENTIFIER • LPAREN RPAREN
      Shift derivation
        expression
        ↳ 76: primary_expression
              ↳ 110: IDENTIFIER • LPAREN RPAREN
      Reduce derivation
        expression
        ↳ 100: expression                LPAREN arg_list RPAREN
               ↳ 76: primary_expression         ↳ 100: ε
                     ↳ 107: IDENTIFIER •



State 271

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type • KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON

    KW_IN  shift, and go to state 279


State 272

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression • RBRACKET COLON type SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    RBRACKET  shift, and go to state 280
    DOT       shift, and go to state 80


State 273

   22 stmt_list: ε •
   23          | • stmt_list stmt
   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON • stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 281


State 274

   34 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 34 (stmt)


State 275

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 282


State 276

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    IDENTIFIER        shift, and go to state 39
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_NOT            shift, and go to state 45
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    HASH              shift, and go to state 48

    expression          go to state 283
    primary_expression  go to state 50


State 277

   44 stmt: KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON •

    $default  reduce using rule 44 (stmt)


State 278

   54 stmt: HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON •

    $default  reduce using rule 54 (stmt)


State 279

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN • IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON

    IDENTIFIER  shift, and go to state 284


State 280

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 285


State 281

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   35     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list • KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   45     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | • expression OP_PLUSEQ expression SEMICOLON
   56     | • expression OP_MINUSEQ expression SEMICOLON
   57     | • expression OP_MULTEQ expression SEMICOLON
   58     | • expression OP_DIVEQ expression SEMICOLON
   59     | • expression OP_MODEQ expression SEMICOLON
   60     | • expression SEMICOLON
   61     | • error SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    error             shift, and go to state 156
    IDENTIFIER        shift, and go to state 157
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 158
    KW_ENDIF          shift, and go to state 286
    KW_FOR            shift, and go to state 159
    KW_WHILE          shift, and go to state 160
    KW_BREAK          shift, and go to state 161
    KW_CONTINUE       shift, and go to state 162
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 163
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 164
    HASH              shift, and go to state 165

    stmt                go to state 166
    expression          go to state 167
    primary_expression  go to state 50


State 282

   22 stmt_list: ε •
   23          | • stmt_list stmt
   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 287


State 283

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   77 expression: expression • OP_PLUS expression
   78           | expression • OP_MINUS expression
   79           | expression • OP_MULT expression
   80           | expression • OP_DIV expression
   81           | expression • OP_MOD expression
   82           | expression • OP_POW expression
   83           | expression • OP_EQ expression
   84           | expression • OP_NEQ expression
   85           | expression • OP_LT expression
   86           | expression • OP_LEQ expression
   87           | expression • OP_GT expression
   88           | expression • OP_GEQ expression
   89           | expression • KW_AND expression
   90           | expression • KW_OR expression
   94           | expression • DOT IDENTIFIER
   95           | expression • LBRACKET expression RBRACKET
  100           | expression • LPAREN arg_list RPAREN
  101           | expression • LPAREN RPAREN

    KW_AND    shift, and go to state 63
    KW_OR     shift, and go to state 64
    OP_POW    shift, and go to state 65
    OP_EQ     shift, and go to state 66
    OP_NEQ    shift, and go to state 67
    OP_LT     shift, and go to state 68
    OP_LEQ    shift, and go to state 69
    OP_GT     shift, and go to state 70
    OP_GEQ    shift, and go to state 71
    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73
    OP_MULT   shift, and go to state 74
    OP_DIV    shift, and go to state 75
    OP_MOD    shift, and go to state 76
    LPAREN    shift, and go to state 77
    LBRACKET  shift, and go to state 78
    RBRACKET  shift, and go to state 288
    DOT       shift, and go to state 80


State 284

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER • KW_OF CONST_INT RBRACKET COLON type SEMICOLON

    KW_OF  shift, and go to state 289


State 285

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 290


State 286

   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 291


State 287

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   36     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   45     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | • expression OP_PLUSEQ expression SEMICOLON
   56     | • expression OP_MINUSEQ expression SEMICOLON
   57     | • expression OP_MULTEQ expression SEMICOLON
   58     | • expression OP_DIVEQ expression SEMICOLON
   59     | • expression OP_MODEQ expression SEMICOLON
   60     | • expression SEMICOLON
   61     | • error SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    error             shift, and go to state 156
    IDENTIFIER        shift, and go to state 157
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 158
    KW_FOR            shift, and go to state 159
    KW_ENDFOR         shift, and go to state 292
    KW_WHILE          shift, and go to state 160
    KW_BREAK          shift, and go to state 161
    KW_CONTINUE       shift, and go to state 162
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 163
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 164
    HASH              shift, and go to state 165

    stmt                go to state 166
    expression          go to state 167
    primary_expression  go to state 50


State 288

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 293


State 289

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF • CONST_INT RBRACKET COLON type SEMICOLON

    CONST_INT  shift, and go to state 294


State 290

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 295


State 291

   35 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 35 (stmt)


State 292

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 296


State 293

   22 stmt_list: ε •
   23          | • stmt_list stmt
   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 22 (stmt_list)

    stmt_list  go to state 297


State 294

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT • RBRACKET COLON type SEMICOLON

    RBRACKET  shift, and go to state 298


State 295

   42 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 42 (stmt)


State 296

   36 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 36 (stmt)


State 297

   23 stmt_list: stmt_list • stmt
   29 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
   30     | • expression OP_ASSIGN expression SEMICOLON
   31     | • IDENTIFIER LPAREN RPAREN SEMICOLON
   32     | • IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   33     | • KW_RETURN expression SEMICOLON
   34     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   35     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   36     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   37     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON
   38     | • KW_BREAK SEMICOLON
   39     | • KW_CONTINUE SEMICOLON
   40     | • SEMICOLON
   41     | • KW_RETURN SEMICOLON
   42     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON expression RBRACKET COLON type SEMICOLON
   43     | • IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON
   44     | • KW_WHILE LPAREN expression RPAREN COLON stmt_list KW_ENDWHILE SEMICOLON
   45     | • IDENTIFIER OP_PLUSEQ expression SEMICOLON
   46     | • IDENTIFIER OP_MINUSEQ expression SEMICOLON
   47     | • IDENTIFIER OP_MULTEQ expression SEMICOLON
   48     | • IDENTIFIER OP_DIVEQ expression SEMICOLON
   49     | • IDENTIFIER OP_MODEQ expression SEMICOLON
   50     | • HASH IDENTIFIER OP_ASSIGN expression SEMICOLON
   51     | • HASH IDENTIFIER OP_PLUSEQ expression SEMICOLON
   52     | • HASH IDENTIFIER OP_MINUSEQ expression SEMICOLON
   53     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN RPAREN SEMICOLON
   54     | • HASH IDENTIFIER DOT IDENTIFIER LPAREN arg_list RPAREN SEMICOLON
   55     | • expression OP_PLUSEQ expression SEMICOLON
   56     | • expression OP_MINUSEQ expression SEMICOLON
   57     | • expression OP_MULTEQ expression SEMICOLON
   58     | • expression OP_DIVEQ expression SEMICOLON
   59     | • expression OP_MODEQ expression SEMICOLON
   60     | • expression SEMICOLON
   61     | • error SEMICOLON
   76 expression: • primary_expression
   77           | • expression OP_PLUS expression
   78           | • expression OP_MINUS expression
   79           | • expression OP_MULT expression
   80           | • expression OP_DIV expression
   81           | • expression OP_MOD expression
   82           | • expression OP_POW expression
   83           | • expression OP_EQ expression
   84           | • expression OP_NEQ expression
   85           | • expression OP_LT expression
   86           | • expression OP_LEQ expression
   87           | • expression OP_GT expression
   88           | • expression OP_GEQ expression
   89           | • expression KW_AND expression
   90           | • expression KW_OR expression
   91           | • KW_NOT expression
   92           | • OP_MINUS expression
   93           | • LPAREN expression RPAREN
   94           | • expression DOT IDENTIFIER
   95           | • expression LBRACKET expression RBRACKET
   96           | • primary_expression DOT IDENTIFIER
   97           | • primary_expression LBRACKET expression RBRACKET
   98           | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
   99           | • primary_expression DOT IDENTIFIER LPAREN RPAREN
  100           | • expression LPAREN arg_list RPAREN
  101           | • expression LPAREN RPAREN
  102 primary_expression: • CONST_INT
  103                   | • CONST_FLOAT
  104                   | • CONST_STRING
  105                   | • CONST_BOOL_TRUE
  106                   | • CONST_BOOL_FALSE
  107                   | • IDENTIFIER
  108                   | • HASH IDENTIFIER
  109                   | • IDENTIFIER LPAREN arg_list RPAREN
  110                   | • IDENTIFIER LPAREN RPAREN
  111                   | • primary_expression DOT IDENTIFIER LPAREN arg_list RPAREN
  112                   | • primary_expression DOT IDENTIFIER LPAREN RPAREN

    error             shift, and go to state 156
    IDENTIFIER        shift, and go to state 157
    CONST_INT         shift, and go to state 40
    CONST_FLOAT       shift, and go to state 41
    CONST_STRING      shift, and go to state 42
    CONST_BOOL_TRUE   shift, and go to state 43
    CONST_BOOL_FALSE  shift, and go to state 44
    KW_IF             shift, and go to state 158
    KW_FOR            shift, and go to state 159
    KW_ENDFOR         shift, and go to state 299
    KW_WHILE          shift, and go to state 160
    KW_BREAK          shift, and go to state 161
    KW_CONTINUE       shift, and go to state 162
    KW_NOT            shift, and go to state 45
    KW_RETURN         shift, and go to state 163
    OP_MINUS          shift, and go to state 46
    LPAREN            shift, and go to state 47
    SEMICOLON         shift, and go to state 164
    HASH              shift, and go to state 165

    stmt                go to state 166
    expression          go to state 167
    primary_expression  go to state 50


State 298

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET • COLON type SEMICOLON

    COLON  shift, and go to state 300


State 299

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 301


State 300

   24 type: • KW_INTEGER
   25     | • KW_SCALAR
   26     | • KW_STR
   27     | • KW_BOOL
   28     | • IDENTIFIER
   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON • type SEMICOLON

    IDENTIFIER  shift, and go to state 32
    KW_INTEGER  shift, and go to state 33
    KW_SCALAR   shift, and go to state 34
    KW_STR      shift, and go to state 35
    KW_BOOL     shift, and go to state 36

    type  go to state 302


State 301

   37 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 37 (stmt)


State 302

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type • SEMICOLON

    SEMICOLON  shift, and go to state 303


State 303

   43 stmt: IDENTIFIER OP_DEFINE LBRACKET expression KW_FOR IDENTIFIER COLON type KW_IN IDENTIFIER KW_OF CONST_INT RBRACKET COLON type SEMICOLON •

    $default  reduce using rule 43 (stmt)
