Terminals unused in grammar

    KW_INTEGER
    KW_SCALAR
    KW_STR
    KW_BOOL
    KW_CONST
    KW_WHILE
    KW_ENDWHILE
    KW_BREAK
    KW_CONTINUE
    KW_NOT
    KW_AND
    KW_OR
    KW_COMP
    KW_ENDCOMP
    KW_OF
    OP_PLUSEQ
    OP_MINUSEQ
    OP_MULTEQ
    OP_DIVEQ
    OP_MODEQ
    OP_DEFINE
    OP_EQ
    OP_NEQ
    OP_LT
    OP_LEQ
    OP_GT
    OP_GEQ
    OP_MINUS
    OP_DIV
    OP_MOD
    OP_POW
    COMMA
    DOT


State 52 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function main_function

    2 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    3 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    4 stmt_list: ε
    5          | stmt_list stmt

    6 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON
    7     | IDENTIFIER LPAREN expression RPAREN SEMICOLON
    8     | KW_RETURN expression SEMICOLON
    9     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   11     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   12     | SEMICOLON

   13 expression: CONST_INT
   14           | CONST_FLOAT
   15           | CONST_STRING
   16           | CONST_BOOL_TRUE
   17           | CONST_BOOL_FALSE
   18           | IDENTIFIER
   19           | expression OP_PLUS expression
   20           | expression OP_MULT expression
   21           | LPAREN expression RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <string> (258) 2 6 7 11 18
    CONST_INT <string> (259) 13
    CONST_FLOAT <string> (260) 14
    CONST_STRING <string> (261) 15
    CONST_BOOL_TRUE (262) 16
    CONST_BOOL_FALSE (263) 17
    KW_INTEGER (264)
    KW_SCALAR (265)
    KW_STR (266)
    KW_BOOL (267)
    KW_CONST (268)
    KW_IF (269) 9 10
    KW_ELSE (270) 10
    KW_ENDIF (271) 9 10
    KW_FOR (272) 11
    KW_IN (273) 11
    KW_ENDFOR (274) 11
    KW_WHILE (275)
    KW_ENDWHILE (276)
    KW_BREAK (277)
    KW_CONTINUE (278)
    KW_NOT (279)
    KW_AND (280)
    KW_OR (281)
    KW_DEF (282) 2 3
    KW_ENDDEF (283) 2 3
    KW_MAIN (284) 3
    KW_RETURN (285) 8
    KW_COMP (286)
    KW_ENDCOMP (287)
    KW_OF (288)
    OP_ASSIGN (289) 6
    OP_PLUSEQ (290)
    OP_MINUSEQ (291)
    OP_MULTEQ (292)
    OP_DIVEQ (293)
    OP_MODEQ (294)
    OP_DEFINE (295)
    OP_EQ (296)
    OP_NEQ (297)
    OP_LT (298)
    OP_LEQ (299)
    OP_GT (300)
    OP_GEQ (301)
    OP_PLUS (302) 19
    OP_MINUS (303)
    OP_MULT (304) 20
    OP_DIV (305)
    OP_MOD (306)
    OP_POW (307)
    LPAREN (308) 2 3 7 9 10 21
    RPAREN (309) 2 3 7 9 10 21
    LBRACKET (310) 11
    RBRACKET (311) 11
    COLON (312) 2 3 9 10 11
    SEMICOLON (313) 2 3 6 7 8 9 10 11 12
    COMMA (314)
    DOT (315)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    program (62)
        on left: 1
        on right: 0
    function <string> (63)
        on left: 2
        on right: 1
    main_function <string> (64)
        on left: 3
        on right: 1
    stmt_list <string> (65)
        on left: 4 5
        on right: 2 3 5 9 10 11
    stmt <string> (66)
        on left: 6 7 8 9 10 11 12
        on right: 5
    expression <string> (67)
        on left: 13 14 15 16 17 18 19 20 21
        on right: 6 7 8 9 10 11 19 20 21


State 0

    0 $accept: • program $end
    1 program: • function main_function
    2 function: • KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    KW_DEF  shift, and go to state 1

    program   go to state 2
    function  go to state 3


State 1

    2 function: KW_DEF • IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: function • main_function
    3 main_function: • KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    KW_DEF  shift, and go to state 6

    main_function  go to state 7


State 4

    2 function: KW_DEF IDENTIFIER • LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 8


State 5

    0 $accept: program $end •

    $default  accept


State 6

    3 main_function: KW_DEF • KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    KW_MAIN  shift, and go to state 9


State 7

    1 program: function main_function •

    $default  reduce using rule 1 (program)


State 8

    2 function: KW_DEF IDENTIFIER LPAREN • RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 10


State 9

    3 main_function: KW_DEF KW_MAIN • LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    LPAREN  shift, and go to state 11


State 10

    2 function: KW_DEF IDENTIFIER LPAREN RPAREN • COLON stmt_list KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 12


State 11

    3 main_function: KW_DEF KW_MAIN LPAREN • RPAREN COLON stmt_list KW_ENDDEF SEMICOLON

    RPAREN  shift, and go to state 13


State 12

    2 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON • stmt_list KW_ENDDEF SEMICOLON
    4 stmt_list: ε •
    5          | • stmt_list stmt

    $default  reduce using rule 4 (stmt_list)

    stmt_list  go to state 14


State 13

    3 main_function: KW_DEF KW_MAIN LPAREN RPAREN • COLON stmt_list KW_ENDDEF SEMICOLON

    COLON  shift, and go to state 15


State 14

    2 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list • KW_ENDDEF SEMICOLON
    5 stmt_list: stmt_list • stmt
    6 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
    7     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
    8     | • KW_RETURN expression SEMICOLON
    9     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   11     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   12     | • SEMICOLON

    IDENTIFIER  shift, and go to state 16
    KW_IF       shift, and go to state 17
    KW_FOR      shift, and go to state 18
    KW_ENDDEF   shift, and go to state 19
    KW_RETURN   shift, and go to state 20
    SEMICOLON   shift, and go to state 21

    stmt  go to state 22


State 15

    3 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON • stmt_list KW_ENDDEF SEMICOLON
    4 stmt_list: ε •
    5          | • stmt_list stmt

    $default  reduce using rule 4 (stmt_list)

    stmt_list  go to state 23


State 16

    6 stmt: IDENTIFIER • OP_ASSIGN expression SEMICOLON
    7     | IDENTIFIER • LPAREN expression RPAREN SEMICOLON

    OP_ASSIGN  shift, and go to state 24
    LPAREN     shift, and go to state 25


State 17

    9 stmt: KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF • LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    LPAREN  shift, and go to state 26


State 18

   11 stmt: KW_FOR • IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    IDENTIFIER  shift, and go to state 27


State 19

    2 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 28


State 20

    8 stmt: KW_RETURN • expression SEMICOLON
   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 36


State 21

   12 stmt: SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 22

    5 stmt_list: stmt_list stmt •

    $default  reduce using rule 5 (stmt_list)


State 23

    3 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list • KW_ENDDEF SEMICOLON
    5 stmt_list: stmt_list • stmt
    6 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
    7     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
    8     | • KW_RETURN expression SEMICOLON
    9     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   11     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   12     | • SEMICOLON

    IDENTIFIER  shift, and go to state 16
    KW_IF       shift, and go to state 17
    KW_FOR      shift, and go to state 18
    KW_ENDDEF   shift, and go to state 37
    KW_RETURN   shift, and go to state 20
    SEMICOLON   shift, and go to state 21

    stmt  go to state 22


State 24

    6 stmt: IDENTIFIER OP_ASSIGN • expression SEMICOLON
   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 38


State 25

    7 stmt: IDENTIFIER LPAREN • expression RPAREN SEMICOLON
   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 39


State 26

    9 stmt: KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN • expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 40


State 27

   11 stmt: KW_FOR IDENTIFIER • KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    KW_IN  shift, and go to state 41


State 28

    2 function: KW_DEF IDENTIFIER LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON •

    $default  reduce using rule 2 (function)


State 29

   18 expression: IDENTIFIER •

    $default  reduce using rule 18 (expression)


State 30

   13 expression: CONST_INT •

    $default  reduce using rule 13 (expression)


State 31

   14 expression: CONST_FLOAT •

    $default  reduce using rule 14 (expression)


State 32

   15 expression: CONST_STRING •

    $default  reduce using rule 15 (expression)


State 33

   16 expression: CONST_BOOL_TRUE •

    $default  reduce using rule 16 (expression)


State 34

   17 expression: CONST_BOOL_FALSE •

    $default  reduce using rule 17 (expression)


State 35

   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN
   21           | LPAREN • expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 42


State 36

    8 stmt: KW_RETURN expression • SEMICOLON
   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression

    OP_PLUS    shift, and go to state 43
    OP_MULT    shift, and go to state 44
    SEMICOLON  shift, and go to state 45


State 37

    3 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF • SEMICOLON

    SEMICOLON  shift, and go to state 46


State 38

    6 stmt: IDENTIFIER OP_ASSIGN expression • SEMICOLON
   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression

    OP_PLUS    shift, and go to state 43
    OP_MULT    shift, and go to state 44
    SEMICOLON  shift, and go to state 47


State 39

    7 stmt: IDENTIFIER LPAREN expression • RPAREN SEMICOLON
   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression

    OP_PLUS  shift, and go to state 43
    OP_MULT  shift, and go to state 44
    RPAREN   shift, and go to state 48


State 40

    9 stmt: KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN expression • RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression

    OP_PLUS  shift, and go to state 43
    OP_MULT  shift, and go to state 44
    RPAREN   shift, and go to state 49


State 41

   11 stmt: KW_FOR IDENTIFIER KW_IN • LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON

    LBRACKET  shift, and go to state 50


State 42

   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression
   21           | LPAREN expression • RPAREN

    OP_PLUS  shift, and go to state 43
    OP_MULT  shift, and go to state 44
    RPAREN   shift, and go to state 51


State 43

   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   19           | expression OP_PLUS • expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 52


State 44

   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   20           | expression OP_MULT • expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 53


State 45

    8 stmt: KW_RETURN expression SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 46

    3 main_function: KW_DEF KW_MAIN LPAREN RPAREN COLON stmt_list KW_ENDDEF SEMICOLON •

    $default  reduce using rule 3 (main_function)


State 47

    6 stmt: IDENTIFIER OP_ASSIGN expression SEMICOLON •

    $default  reduce using rule 6 (stmt)


State 48

    7 stmt: IDENTIFIER LPAREN expression RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 54


State 49

    9 stmt: KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN expression RPAREN • COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 55


State 50

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET • expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 56


State 51

   21 expression: LPAREN expression RPAREN •

    $default  reduce using rule 21 (expression)


State 52

   19 expression: expression • OP_PLUS expression
   19           | expression OP_PLUS expression •  [OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]
   20           | expression • OP_MULT expression

    OP_PLUS  shift, and go to state 43
    OP_MULT  shift, and go to state 44

    OP_PLUS   [reduce using rule 19 (expression)]
    OP_MULT   [reduce using rule 19 (expression)]
    $default  reduce using rule 19 (expression)

    shift/reduce conflict on token OP_PLUS:
       19 expression: expression OP_PLUS expression •
       19 expression: expression • OP_PLUS expression
      Example: expression OP_PLUS expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 19: expression OP_PLUS expression
                                 ↳ 19: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 19: expression                            OP_PLUS expression
              ↳ 19: expression OP_PLUS expression •

    shift/reduce conflict on token OP_MULT:
       19 expression: expression OP_PLUS expression •
       20 expression: expression • OP_MULT expression
      Example: expression OP_PLUS expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 19: expression OP_PLUS expression
                                 ↳ 20: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 20: expression                            OP_MULT expression
              ↳ 19: expression OP_PLUS expression •



State 53

   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression
   20           | expression OP_MULT expression •  [OP_PLUS, OP_MULT, RPAREN, RBRACKET, COLON, SEMICOLON]

    OP_PLUS  shift, and go to state 43
    OP_MULT  shift, and go to state 44

    OP_PLUS   [reduce using rule 20 (expression)]
    OP_MULT   [reduce using rule 20 (expression)]
    $default  reduce using rule 20 (expression)

    shift/reduce conflict on token OP_PLUS:
       20 expression: expression OP_MULT expression •
       19 expression: expression • OP_PLUS expression
      Example: expression OP_MULT expression • OP_PLUS expression
      Shift derivation
        expression
        ↳ 20: expression OP_MULT expression
                                 ↳ 19: expression • OP_PLUS expression
      Reduce derivation
        expression
        ↳ 19: expression                            OP_PLUS expression
              ↳ 20: expression OP_MULT expression •

    shift/reduce conflict on token OP_MULT:
       20 expression: expression OP_MULT expression •
       20 expression: expression • OP_MULT expression
      Example: expression OP_MULT expression • OP_MULT expression
      Shift derivation
        expression
        ↳ 20: expression OP_MULT expression
                                 ↳ 20: expression • OP_MULT expression
      Reduce derivation
        expression
        ↳ 20: expression                            OP_MULT expression
              ↳ 20: expression OP_MULT expression •



State 54

    7 stmt: IDENTIFIER LPAREN expression RPAREN SEMICOLON •

    $default  reduce using rule 7 (stmt)


State 55

    4 stmt_list: ε •
    5          | • stmt_list stmt
    9 stmt: KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN expression RPAREN COLON • stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 4 (stmt_list)

    stmt_list  go to state 57


State 56

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression • COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression

    OP_PLUS  shift, and go to state 43
    OP_MULT  shift, and go to state 44
    COLON    shift, and go to state 58


State 57

    5 stmt_list: stmt_list • stmt
    6 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
    7     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
    8     | • KW_RETURN expression SEMICOLON
    9     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
    9     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ENDIF SEMICOLON
   10     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN expression RPAREN COLON stmt_list • KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   11     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   12     | • SEMICOLON

    IDENTIFIER  shift, and go to state 16
    KW_IF       shift, and go to state 17
    KW_ELSE     shift, and go to state 59
    KW_ENDIF    shift, and go to state 60
    KW_FOR      shift, and go to state 18
    KW_RETURN   shift, and go to state 20
    SEMICOLON   shift, and go to state 21

    stmt  go to state 22


State 58

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON • expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   13 expression: • CONST_INT
   14           | • CONST_FLOAT
   15           | • CONST_STRING
   16           | • CONST_BOOL_TRUE
   17           | • CONST_BOOL_FALSE
   18           | • IDENTIFIER
   19           | • expression OP_PLUS expression
   20           | • expression OP_MULT expression
   21           | • LPAREN expression RPAREN

    IDENTIFIER        shift, and go to state 29
    CONST_INT         shift, and go to state 30
    CONST_FLOAT       shift, and go to state 31
    CONST_STRING      shift, and go to state 32
    CONST_BOOL_TRUE   shift, and go to state 33
    CONST_BOOL_FALSE  shift, and go to state 34
    LPAREN            shift, and go to state 35

    expression  go to state 61


State 59

   10 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE • COLON stmt_list KW_ENDIF SEMICOLON

    COLON  shift, and go to state 62


State 60

    9 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 61

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression • RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   19 expression: expression • OP_PLUS expression
   20           | expression • OP_MULT expression

    OP_PLUS   shift, and go to state 43
    OP_MULT   shift, and go to state 44
    RBRACKET  shift, and go to state 64


State 62

    4 stmt_list: ε •
    5          | • stmt_list stmt
   10 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON • stmt_list KW_ENDIF SEMICOLON

    $default  reduce using rule 4 (stmt_list)

    stmt_list  go to state 65


State 63

    9 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 9 (stmt)


State 64

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET • COLON stmt_list KW_ENDFOR SEMICOLON

    COLON  shift, and go to state 66


State 65

    5 stmt_list: stmt_list • stmt
    6 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
    7     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
    8     | • KW_RETURN expression SEMICOLON
    9     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   10     | KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list • KW_ENDIF SEMICOLON
   11     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   12     | • SEMICOLON

    IDENTIFIER  shift, and go to state 16
    KW_IF       shift, and go to state 17
    KW_ENDIF    shift, and go to state 67
    KW_FOR      shift, and go to state 18
    KW_RETURN   shift, and go to state 20
    SEMICOLON   shift, and go to state 21

    stmt  go to state 22


State 66

    4 stmt_list: ε •
    5          | • stmt_list stmt
   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON • stmt_list KW_ENDFOR SEMICOLON

    $default  reduce using rule 4 (stmt_list)

    stmt_list  go to state 68


State 67

   10 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF • SEMICOLON

    SEMICOLON  shift, and go to state 69


State 68

    5 stmt_list: stmt_list • stmt
    6 stmt: • IDENTIFIER OP_ASSIGN expression SEMICOLON
    7     | • IDENTIFIER LPAREN expression RPAREN SEMICOLON
    8     | • KW_RETURN expression SEMICOLON
    9     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ENDIF SEMICOLON
   10     | • KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON
   11     | • KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON
   11     | KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list • KW_ENDFOR SEMICOLON
   12     | • SEMICOLON

    IDENTIFIER  shift, and go to state 16
    KW_IF       shift, and go to state 17
    KW_FOR      shift, and go to state 18
    KW_ENDFOR   shift, and go to state 70
    KW_RETURN   shift, and go to state 20
    SEMICOLON   shift, and go to state 21

    stmt  go to state 22


State 69

   10 stmt: KW_IF LPAREN expression RPAREN COLON stmt_list KW_ELSE COLON stmt_list KW_ENDIF SEMICOLON •

    $default  reduce using rule 10 (stmt)


State 70

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR • SEMICOLON

    SEMICOLON  shift, and go to state 71


State 71

   11 stmt: KW_FOR IDENTIFIER KW_IN LBRACKET expression COLON expression RBRACKET COLON stmt_list KW_ENDFOR SEMICOLON •

    $default  reduce using rule 11 (stmt)
